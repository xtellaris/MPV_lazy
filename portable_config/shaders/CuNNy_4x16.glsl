// CuNNy 4x16
// Copyright (c) 2024 cunnyplapper

// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 3.0 of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program.  If not, see <https://www.gnu.org/licenses/>.
/* ------------------------------------------------------------------- */


//!DESC [CuNNy_4x16] -in
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND LUMA
//!SAVE in
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
#define l0(x, y) F((LUMA_mul * texelFetch(LUMA_raw, clamp(pos + ivec2(x, y), ivec2(0), sz) * ivec2(1, 1) + ivec2(0, 0), 0)).r)
shared F G[1][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			G[0][ay][ax] = l0(x - 1, y - 1);
		}
	}
	barrier();
	F s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2];
	r0 += V4(-3.721e-01, -1.040e-02, -9.630e-02, 2.021e-02) * s0_0_0;
	r1 += V4(-5.673e-02, -3.727e-02, -2.476e-02, 4.163e-02) * s0_0_0;
	r2 += V4(1.509e-02, -2.965e-04, -4.122e-02, 8.558e-03) * s0_0_0;
	r3 += V4(-9.613e-03, -1.064e-02, 3.004e-03, -6.781e-03) * s0_0_0;
	r0 += V4(3.799e-01, -1.623e-03, 1.125e-02, -6.088e-02) * s0_0_1;
	r1 += V4(3.130e-01, -5.492e-01, -1.506e-01, -1.023e-01) * s0_0_1;
	r2 += V4(1.247e-02, 4.357e-02, -5.981e-03, -9.395e-03) * s0_0_1;
	r3 += V4(6.758e-02, 3.396e-02, 7.821e-03, 1.343e-02) * s0_0_1;
	r0 += V4(2.704e-02, 9.309e-03, 1.302e-02, -2.450e-03) * s0_0_2;
	r1 += V4(-4.456e-02, 2.092e-02, 6.063e-03, 1.714e-02) * s0_0_2;
	r2 += V4(3.098e-02, -4.744e-02, -1.121e-02, 7.597e-04) * s0_0_2;
	r3 += V4(-5.992e-02, -1.515e-02, -1.211e-02, -9.165e-03) * s0_0_2;
	r0 += V4(3.481e-01, 2.110e-02, 3.998e-01, 1.101e-02) * s0_1_0;
	r1 += V4(1.755e-02, 4.170e-02, -9.263e-02, -7.342e-02) * s0_1_0;
	r2 += V4(4.697e-01, 5.630e-01, 4.391e-01, 6.325e-01) * s0_1_0;
	r3 += V4(-7.633e-03, -1.588e-02, -9.459e-03, 1.333e-01) * s0_1_0;
	r0 += V4(-3.486e-01, -6.280e-01, -1.115e-01, -3.561e-01) * s0_1_1;
	r1 += V4(-1.782e-01, 4.872e-01, 1.447e-01, 4.610e-01) * s0_1_1;
	r2 += V4(-7.703e-01, -2.143e-01, -4.089e-01, -6.309e-01) * s0_1_1;
	r3 += V4(4.432e-01, 1.776e-01, 2.214e-02, 5.654e-01) * s0_1_1;
	r0 += V4(-2.729e-02, 6.152e-01, 2.192e-02, -2.596e-01) * s0_1_2;
	r1 += V4(4.047e-02, 4.547e-02, 6.693e-02, -2.691e-02) * s0_1_2;
	r2 += V4(1.577e-02, 2.522e-02, 2.951e-02, -7.940e-04) * s0_1_2;
	r3 += V4(-4.073e-01, 2.480e-01, 5.335e-01, 6.779e-02) * s0_1_2;
	r0 += V4(1.338e-02, -1.252e-02, -7.490e-02, -1.678e-02) * s0_2_0;
	r1 += V4(-1.041e-02, -5.678e-03, -1.809e-02, 2.906e-02) * s0_2_0;
	r2 += V4(1.902e-01, -2.427e-01, -3.878e-01, 8.578e-03) * s0_2_0;
	r3 += V4(-9.453e-03, 3.238e-02, 5.493e-03, -1.164e-01) * s0_2_0;
	r0 += V4(-1.630e-02, 1.016e-03, -3.309e-02, 4.462e-01) * s0_2_1;
	r1 += V4(7.935e-02, 7.451e-02, 1.101e-01, -4.399e-02) * s0_2_1;
	r2 += V4(2.352e-03, -1.329e-01, 4.106e-01, -6.397e-03) * s0_2_1;
	r3 += V4(-1.289e-02, -3.710e-01, -5.467e-01, -5.810e-01) * s0_2_1;
	r0 += V4(3.850e-05, 1.220e-02, -6.486e-03, 2.185e-01) * s0_2_2;
	r1 += V4(-2.259e-02, -6.470e-02, -7.110e-02, -4.916e-03) * s0_2_2;
	r2 += V4(4.733e-03, 1.404e-02, -2.460e-02, -2.435e-03) * s0_2_2;
	r3 += V4(7.487e-03, -5.813e-02, -5.312e-03, -6.011e-02) * s0_2_2;
	r0 += V4(1.592e-03, 7.534e-03, -3.539e-03, 7.836e-03);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(9.119e-03, 8.638e-03, 4.386e-02, 6.551e-03);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(-1.406e-02, -5.717e-03, 1.004e-02, 3.735e-04);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(1.307e-02, 2.017e-02, 1.778e-06, 1.096e-02);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC [CuNNy_4x16] -conv1
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND in
//!BIND LUMA
//!SAVE conv1
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * in_pt;
			V4 sr0 = V4(in_gather(p, 0));
			V4 sg0 = V4(in_gather(p, 1));
			V4 sb0 = V4(in_gather(p, 2));
			V4 sa0 = V4(in_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(-2.729e-02, 6.145e-02, 8.333e-03, 2.540e-02, 7.499e-02, 1.285e-01, -5.007e-03, 2.400e-01, 1.300e-01, -1.093e-01, -1.101e-03, 9.513e-03, 2.994e-02, -5.829e-02, 3.927e-02, -5.319e-01) * s0_0_0;
	r1 += M4(-4.454e-02, -2.890e-02, -1.915e-02, -1.370e-01, -1.133e-01, -1.612e-01, -1.488e-01, 9.400e-02, 1.222e-01, 1.074e-01, 8.309e-02, 1.929e-01, -8.988e-02, 1.170e-01, 2.142e-01, -1.246e-01) * s0_0_0;
	r2 += M4(6.350e-02, 2.259e-02, -3.914e-02, -3.388e-02, 1.206e-01, -6.208e-02, 1.489e-01, -4.200e-01, -6.902e-02, -2.465e-01, 4.414e-02, -1.558e-01, -3.009e-01, 1.389e-01, 6.383e-02, 3.432e-01) * s0_0_0;
	r3 += M4(-1.915e-02, 6.384e-02, 1.061e-01, -9.095e-03, -1.596e-01, -1.694e-01, -8.201e-02, -2.336e-01, -5.279e-03, -2.803e-01, 1.286e-02, -7.882e-02, -2.309e-01, 1.203e-01, -9.351e-02, -1.556e-01) * s0_0_0;
	r0 += M4(4.470e-02, -3.865e-02, -1.077e-01, 1.676e-01, 2.390e-01, 2.174e-01, -4.821e-02, 1.265e-01, 1.594e-01, -2.901e-02, -2.721e-01, -1.309e-02, 2.530e-01, -3.115e-01, -9.909e-02, 2.009e-01) * s0_0_1;
	r1 += M4(-1.834e-03, 1.134e-01, 1.930e-01, 7.489e-02, 1.982e-01, 6.596e-02, 1.960e-01, 5.749e-02, 2.003e-02, -1.150e-01, -3.504e-02, -1.596e-02, 1.842e-01, 3.183e-02, -4.299e-02, 7.591e-04) * s0_0_1;
	r2 += M4(1.004e-01, 6.992e-02, -1.965e-01, 1.585e-01, 2.087e-01, -3.509e-02, -5.176e-01, 6.018e-02, 1.642e-01, -1.905e-01, 1.479e-01, -1.868e-01, 3.269e-01, 9.513e-01, 2.646e-01, 1.770e-01) * s0_0_1;
	r3 += M4(-4.816e-02, -5.360e-03, 2.374e-01, 5.490e-02, 4.596e-02, 8.003e-02, 2.685e-01, 1.665e-01, 1.869e-01, -2.282e-01, -2.183e-01, -1.206e-01, -1.000e+00, -1.035e-01, -3.033e-01, 6.498e-02) * s0_0_1;
	r0 += M4(-4.507e-02, 1.229e-01, 1.566e-02, -2.384e-01, -5.057e-02, 6.586e-02, -6.293e-02, 9.359e-02, -1.476e-01, -4.290e-02, -1.596e-01, 6.250e-02, -2.135e-02, 1.519e-01, -3.348e-02, 4.284e-02) * s0_0_2;
	r1 += M4(-3.677e-02, -2.823e-01, -4.193e-03, 2.006e-01, -3.567e-02, -2.068e-01, -4.654e-02, 9.315e-02, -5.191e-02, -9.694e-02, 1.270e-01, 2.184e-01, -2.466e-02, -3.526e-01, -1.612e-01, 2.065e-01) * s0_0_2;
	r2 += M4(2.304e-01, -1.199e-02, -1.454e-01, 1.026e-01, 7.099e-03, -7.726e-02, -6.256e-02, -5.824e-02, -1.358e-01, 2.445e-01, -5.035e-01, -5.524e-02, 6.654e-03, 6.440e-02, -1.623e-01, -8.375e-02) * s0_0_2;
	r3 += M4(-1.600e-02, 4.948e-01, 5.616e-02, -1.086e-02, -7.061e-03, 7.495e-02, -5.340e-02, -3.454e-02, 3.136e-01, -2.852e-01, 4.226e-02, -4.924e-02, 1.948e-01, -1.211e-02, 1.021e-01, -5.505e-02) * s0_0_2;
	r0 += M4(-2.107e-02, -5.135e-02, -5.921e-02, -1.500e-01, 4.556e-01, -1.710e-01, 2.484e-01, -3.065e-01, 1.314e-01, 1.143e-01, 6.436e-02, 7.835e-02, 9.255e-02, 1.687e-01, 1.338e-01, 3.270e-02) * s0_1_0;
	r1 += M4(1.097e-01, 1.038e-02, -4.935e-02, 1.725e-01, 1.078e-02, 2.177e-01, 4.658e-01, -2.154e-02, -2.260e-01, -1.626e-01, 1.981e-02, 6.167e-02, -1.659e-02, -1.873e-01, -3.943e-02, -3.102e-01) * s0_1_0;
	r2 += M4(1.296e-01, -1.795e-01, 7.230e-02, -4.015e-02, -7.519e-01, 4.202e-01, 6.225e-01, 5.545e-01, -4.528e-02, -1.625e-03, -1.306e-01, -2.453e-02, -2.898e-01, -1.479e-02, -6.372e-01, 2.572e-01) * s0_1_0;
	r3 += M4(-7.432e-02, 1.104e-01, 1.451e-01, -6.597e-02, 4.576e-02, -4.119e-01, -5.304e-01, 2.311e-04, -5.203e-02, 3.530e-03, -2.504e-01, 9.649e-02, 1.364e-01, 3.058e-01, -2.043e-01, 4.427e-02) * s0_1_0;
	r0 += M4(2.248e-01, 1.153e-01, -4.019e-01, -3.240e-02, -1.334e-01, -7.673e-01, 5.153e-01, 2.282e-01, 2.631e-01, 9.549e-03, -1.816e-01, -2.663e-01, -4.678e-03, -9.652e-02, 3.206e-01, 3.915e-01) * s0_1_1;
	r1 += M4(-3.106e-02, 6.748e-02, -5.082e-02, -3.524e-02, -7.978e-02, 5.955e-01, 1.000e+00, 4.048e-01, 2.668e-01, -9.568e-02, 1.912e-01, 1.235e-01, 1.635e-01, 4.321e-01, -3.490e-02, -1.670e-01) * s0_1_1;
	r2 += M4(-1.343e-01, 2.182e-01, -7.515e-02, -8.602e-02, -3.336e-01, -4.582e-01, -1.506e-01, 1.498e-01, 8.183e-02, 8.073e-02, 4.929e-01, 1.541e-01, 1.062e-01, 9.180e-02, -3.268e-01, -1.001e-01) * s0_1_1;
	r3 += M4(5.594e-01, 2.999e-01, 3.732e-01, 2.833e-01, -1.821e-01, 6.597e-01, 9.160e-02, 1.323e-01, -4.910e-02, 2.061e-02, -2.358e-01, 9.251e-02, 8.885e-02, -5.013e-01, 4.522e-01, 7.063e-02) * s0_1_1;
	r0 += M4(-2.346e-01, 4.161e-01, -4.458e-02, -4.323e-01, -7.594e-02, -8.370e-02, -8.748e-02, -1.268e-02, -1.035e-02, 2.723e-02, 2.714e-01, 1.963e-01, -2.176e-02, 1.273e-01, -8.905e-02, -1.616e-01) * s0_1_2;
	r1 += M4(-1.435e-01, -2.410e-01, -1.764e-01, 4.835e-01, 6.257e-03, 1.386e-01, 3.721e-02, -3.985e-01, 2.625e-01, 4.614e-01, -4.544e-01, -8.892e-01, 4.265e-02, 8.548e-02, 1.491e-02, 2.993e-02) * s0_1_2;
	r2 += M4(2.739e-01, 3.842e-01, 1.980e-01, -4.001e-01, 2.600e-03, -1.661e-01, 2.549e-01, 2.392e-01, -1.563e-01, -1.292e-01, -4.744e-01, -2.449e-02, -2.080e-01, -7.549e-02, 7.031e-02, 3.225e-01) * s0_1_2;
	r3 += M4(-3.062e-01, 4.923e-03, -4.426e-01, -8.267e-02, -2.008e-03, -6.572e-02, -1.699e-01, -5.804e-02, -2.485e-01, 7.685e-01, 7.551e-01, -9.594e-02, 3.359e-02, -2.145e-01, -1.164e-01, -6.973e-02) * s0_1_2;
	r0 += M4(-6.728e-02, -3.361e-02, 2.039e-01, -2.317e-01, 2.785e-01, -1.426e-01, -4.580e-01, -5.110e-01, -9.058e-02, -1.360e-02, -1.002e-01, 1.809e-01, 5.676e-02, 4.252e-02, 1.141e-02, 6.847e-02) * s0_2_0;
	r1 += M4(-4.944e-02, 5.351e-02, -4.953e-02, 1.093e-01, 4.443e-01, -1.780e-01, 5.185e-02, 4.100e-02, -1.170e-01, 1.314e-01, -1.153e-01, -1.599e-02, -4.090e-01, 2.885e-02, 4.623e-02, -5.684e-01) * s0_2_0;
	r2 += M4(-3.463e-04, -5.975e-02, -1.974e-02, 3.187e-02, -9.728e-02, 6.225e-02, -2.443e-03, -1.611e-01, 8.236e-02, 6.322e-02, 6.831e-02, -9.563e-02, -1.052e-01, -2.606e-02, -1.023e-01, -1.695e-01) * s0_2_0;
	r3 += M4(-3.031e-02, -2.093e-01, 1.285e-01, 1.357e-02, -2.312e-02, 7.640e-02, -1.105e-01, -1.114e-02, -1.522e-03, -8.813e-02, -6.334e-03, 1.264e-02, 4.445e-02, 3.375e-02, -1.178e-01, 1.113e-03) * s0_2_0;
	r0 += M4(2.930e-02, -3.899e-01, -1.351e-01, 2.415e-01, -2.765e-04, 1.954e-01, 4.537e-01, 7.348e-02, 2.717e-01, 2.487e-01, 8.992e-02, 5.678e-02, -5.808e-02, 7.452e-03, 1.751e-02, 3.162e-02) * s0_2_1;
	r1 += M4(4.971e-01, 2.635e-01, 3.931e-01, -1.711e-01, -2.033e-01, 4.758e-01, 2.376e-01, 3.775e-01, -1.137e-01, 6.331e-02, 3.439e-02, 1.848e-01, -1.201e-02, -2.247e-02, 1.965e-02, 4.119e-02) * s0_2_1;
	r2 += M4(-4.708e-01, 1.552e-01, 4.172e-02, 3.089e-01, 2.411e-01, 3.622e-01, 2.470e-01, -6.312e-01, -2.119e-01, 9.169e-02, 4.494e-01, 1.279e-01, 9.228e-02, 1.344e-01, 1.113e-01, -1.548e-01) * s0_2_1;
	r3 += M4(7.179e-02, -8.009e-01, -5.804e-02, -4.381e-02, -9.936e-03, 2.357e-01, 4.976e-02, 1.325e-01, -1.431e-01, 1.893e-03, 4.433e-02, 1.131e-01, -3.407e-02, -5.485e-04, 1.728e-01, 1.974e-02) * s0_2_1;
	r0 += M4(7.701e-02, -5.625e-03, 3.193e-01, 2.173e-01, 6.715e-02, 4.868e-02, 1.089e-02, -6.275e-02, -5.291e-02, 1.811e-01, 1.857e-01, -1.764e-01, -4.772e-03, -7.020e-02, -3.908e-02, 1.857e-01) * s0_2_2;
	r1 += M4(-1.727e-02, -1.042e-01, 2.862e-01, 2.287e-01, 1.869e-02, 5.892e-03, -1.371e-02, -1.960e-01, 3.772e-01, -2.697e-01, -9.777e-02, 1.950e-01, -3.507e-02, -1.366e-01, -4.239e-02, -1.102e-01) * s0_2_2;
	r2 += M4(-2.295e-02, -4.733e-02, 2.099e-01, -2.082e-01, 2.108e-02, 2.439e-02, -1.717e-02, -4.733e-02, 1.645e-01, 1.882e-02, 6.898e-02, 4.962e-02, 4.618e-02, -1.112e-01, 3.273e-02, 8.230e-02) * s0_2_2;
	r3 += M4(3.360e-02, -3.967e-02, -5.518e-02, -7.069e-02, -2.093e-03, 8.328e-02, 3.989e-02, 9.400e-02, -5.252e-02, 5.102e-02, 2.785e-01, -2.721e-02, 1.331e-02, -1.816e-02, -8.008e-02, 1.907e-02) * s0_2_2;
	r0 += M4(2.867e-02, 8.511e-02, -1.062e-02, -1.862e-01, -3.333e-02, 4.576e-02, 2.669e-02, -1.845e-01, -1.274e-01, -1.303e-01, 1.887e-01, 1.971e-01, 9.019e-02, -1.250e-02, -5.871e-02, 2.266e-01) * s1_0_0;
	r1 += M4(-7.773e-02, -6.329e-02, 9.427e-02, 3.369e-02, 8.573e-03, -8.483e-02, -2.012e-02, -8.254e-02, 5.804e-02, 4.161e-02, -1.073e-02, 1.250e-01, -1.540e-01, 2.622e-03, 1.390e-01, -2.945e-03) * s1_0_0;
	r2 += M4(-2.266e-01, 4.382e-02, -3.798e-02, 2.595e-03, -2.203e-01, 1.848e-01, -2.849e-02, 3.753e-02, -1.188e-01, -1.047e-01, 1.082e-01, -3.009e-02, 6.887e-02, -2.101e-01, -2.133e-01, -4.740e-02) * s1_0_0;
	r3 += M4(1.851e-01, 2.921e-01, 2.230e-01, 1.620e-02, 2.324e-02, 1.653e-02, 1.474e-01, 5.615e-02, 1.994e-01, 7.135e-02, -2.036e-01, -3.600e-03, 3.278e-01, 3.902e-01, 1.827e-01, -1.979e-02) * s1_0_0;
	r0 += M4(1.169e-03, -1.588e-02, -1.347e-01, -2.193e-01, 1.219e-01, 9.229e-02, 2.343e-02, 5.508e-02, -7.358e-02, -6.514e-02, -5.705e-02, -4.718e-02, -2.222e-01, -8.428e-02, -2.840e-01, -1.797e-01) * s1_0_1;
	r1 += M4(-3.372e-02, -3.121e-01, -2.876e-02, 6.599e-02, 1.537e-02, 5.400e-02, -2.571e-03, 1.056e-01, -1.433e-01, -2.012e-01, -6.149e-02, -2.571e-01, 7.600e-02, -1.637e-01, 2.391e-01, -1.137e-01) * s1_0_1;
	r2 += M4(4.882e-02, 1.896e-01, 5.136e-02, 2.175e-01, 2.126e-01, 3.069e-02, 3.162e-02, 8.511e-02, -4.757e-02, -9.666e-02, 2.821e-01, -1.557e-02, -1.108e-01, -5.242e-01, -3.358e-01, -2.764e-02) * s1_0_1;
	r3 += M4(-2.586e-01, 2.231e-01, -1.465e-01, 7.825e-02, -9.773e-02, 8.055e-02, 8.538e-03, 3.733e-02, -8.948e-02, 1.539e-01, 1.146e-01, -2.456e-02, 5.680e-01, 7.684e-02, -1.062e-01, 6.356e-02) * s1_0_1;
	r0 += M4(6.164e-02, -1.658e-02, -6.446e-02, 4.924e-02, 7.401e-02, -4.214e-02, -5.968e-02, 4.042e-02, 1.584e-02, 2.098e-01, -6.593e-02, 9.501e-02, 5.375e-02, -3.819e-02, -5.077e-02, -1.255e-01) * s1_0_2;
	r1 += M4(-1.057e-01, -1.290e-01, -3.512e-03, -2.452e-01, 1.734e-02, -7.935e-02, 1.348e-02, -3.916e-02, -1.769e-01, 1.128e-01, -1.220e-01, -2.199e-02, -5.623e-02, 6.114e-02, -6.501e-02, -9.159e-02) * s1_0_2;
	r2 += M4(-1.983e-01, 2.269e-02, 7.069e-02, -9.923e-02, 6.774e-02, 2.405e-02, 8.035e-02, -2.499e-02, 2.321e-02, 7.422e-02, -1.366e-01, -2.878e-02, -2.578e-01, -1.947e-01, -1.299e-01, 1.730e-01) * s1_0_2;
	r3 += M4(1.808e-01, -2.394e-01, 7.495e-02, -5.305e-02, 3.087e-02, -5.810e-02, -2.664e-02, 1.494e-02, -8.276e-02, 1.212e-01, -1.243e-01, -1.177e-01, 1.450e-01, -1.672e-03, 7.208e-02, -8.699e-02) * s1_0_2;
	r0 += M4(2.352e-01, 3.427e-02, -1.899e-01, 1.017e-01, 2.924e-02, -5.953e-02, -2.520e-01, 4.268e-01, 3.160e-01, 3.068e-02, -1.153e-01, 4.358e-02, -2.493e-01, -1.151e-01, 2.461e-02, -2.327e-02) * s1_1_0;
	r1 += M4(-2.754e-01, -2.422e-01, -1.235e-01, -3.614e-02, 1.155e-01, -9.257e-02, 3.831e-02, -1.939e-01, -1.276e-01, 1.989e-02, 1.804e-01, 1.546e-03, -2.532e-02, -2.943e-02, -1.837e-01, -1.427e-01) * s1_1_0;
	r2 += M4(2.365e-01, -1.426e-01, -1.881e-01, -2.083e-01, -7.098e-01, -2.637e-01, -4.199e-01, 2.545e-01, -1.728e-01, 9.039e-02, 7.310e-02, 3.254e-02, 3.331e-02, -1.614e-01, -1.357e-01, 2.465e-01) * s1_1_0;
	r3 += M4(-1.911e-01, -2.762e-01, -2.121e-01, -2.253e-02, 1.160e-01, -2.825e-01, 2.870e-02, 6.151e-02, -1.415e-01, -1.165e-02, 1.627e-02, 2.469e-02, -2.154e-01, 1.622e-01, -4.638e-02, 2.550e-02) * s1_1_0;
	r0 += M4(1.356e-01, -1.510e-01, -2.099e-01, -1.113e-01, 7.035e-02, 3.294e-02, -1.233e-01, -5.184e-02, 3.669e-02, -2.436e-01, -2.295e-01, -1.869e-01, 6.167e-01, -2.202e-01, -4.256e-01, -1.836e-01) * s1_1_1;
	r1 += M4(2.058e-01, 9.565e-02, 5.408e-01, 5.837e-01, -3.330e-01, -4.547e-01, 3.334e-01, 5.555e-01, 2.268e-01, -2.369e-01, 1.604e-01, 3.195e-01, 3.900e-01, -1.517e-03, -3.069e-02, 1.021e-01) * s1_1_1;
	r2 += M4(2.044e-01, -4.055e-02, -2.170e-01, -3.359e-01, 5.021e-01, 1.585e-01, 1.639e-01, -3.975e-01, 1.804e-01, 2.383e-02, 9.109e-02, 7.113e-02, 1.925e-01, 6.275e-02, 2.443e-01, 3.183e-01) * s1_1_1;
	r3 += M4(4.449e-01, 3.146e-01, -3.004e-02, 1.719e-01, -1.000e+00, -2.417e-01, -1.480e-01, -7.431e-02, -2.168e-01, -5.143e-03, -1.047e-01, 1.080e-01, -4.148e-01, 1.068e-01, 1.461e-02, -3.763e-01) * s1_1_1;
	r0 += M4(9.259e-02, 1.649e-01, 6.722e-02, -1.569e-01, 7.836e-02, -3.217e-02, -6.123e-02, -5.433e-01, 2.088e-01, 7.883e-02, 1.913e-01, -1.301e-01, 1.623e-01, 1.152e-02, 2.733e-01, 8.821e-02) * s1_1_2;
	r1 += M4(-4.271e-02, -8.632e-02, -2.047e-01, -4.392e-01, -4.756e-02, 2.027e-01, -1.128e-01, -2.854e-01, -9.003e-02, 2.343e-01, 1.540e-01, -1.353e-01, 2.628e-01, 8.724e-02, 9.487e-02, 9.265e-02) * s1_1_2;
	r2 += M4(2.288e-01, 6.519e-02, 1.387e-01, 8.724e-02, 4.827e-02, -7.148e-02, -2.728e-01, -1.060e-02, 1.522e-01, -1.124e-01, -2.049e-01, 1.533e-01, -6.609e-02, 1.464e-01, 3.072e-01, -8.046e-02) * s1_1_2;
	r3 += M4(-1.213e-01, -4.205e-02, 3.910e-02, 4.970e-02, 2.253e-01, -1.929e-02, 1.944e-01, -4.056e-02, 1.592e-03, -3.701e-01, 2.262e-01, 9.125e-02, -1.659e-03, -1.133e-01, -1.882e-01, 1.356e-01) * s1_1_2;
	r0 += M4(-3.467e-01, -2.235e-01, 2.034e-01, 2.838e-01, 4.370e-03, -7.893e-02, -1.641e-01, 6.264e-02, -9.131e-02, 6.660e-02, -1.856e-01, 2.616e-02, -2.893e-01, 7.805e-02, 2.042e-02, -1.796e-02) * s1_2_0;
	r1 += M4(2.593e-01, 1.020e-01, 9.500e-02, -5.943e-02, 1.179e-02, 5.148e-02, 3.313e-01, 2.356e-01, -1.537e-01, 3.746e-04, -2.230e-01, 7.895e-02, 3.995e-01, -9.768e-02, -2.362e-02, 5.878e-02) * s1_2_0;
	r2 += M4(-1.086e-01, -2.237e-01, 2.566e-01, 3.924e-01, -1.851e-01, 2.099e-01, 8.064e-02, 1.189e-01, 1.470e-01, 2.885e-02, -9.438e-02, -2.568e-01, 7.153e-02, 2.466e-01, -3.694e-02, -1.945e-01) * s1_2_0;
	r3 += M4(5.196e-02, -1.667e-01, -1.531e-01, -7.837e-02, 8.743e-02, -5.719e-02, 2.270e-01, 2.670e-01, -1.132e-01, -1.972e-01, 1.648e-02, -8.789e-02, -1.157e-01, -8.074e-02, 4.061e-02, -5.268e-02) * s1_2_0;
	r0 += M4(8.837e-02, 6.581e-02, 1.950e-01, 1.973e-01, -1.788e-01, 1.612e-02, 2.027e-01, 4.831e-01, 9.238e-03, 1.742e-01, 1.359e-01, 8.658e-02, -6.877e-02, 2.240e-01, 1.863e-01, 1.880e-01) * s1_2_1;
	r1 += M4(5.854e-02, 2.115e-01, -2.949e-01, -5.524e-01, 3.368e-01, -5.549e-02, -4.735e-02, -1.465e-01, 3.530e-01, -1.349e-01, 2.080e-01, -4.902e-02, 8.338e-01, -5.222e-02, 4.368e-02, 3.624e-01) * s1_2_1;
	r2 += M4(-2.867e-02, -1.987e-01, 5.886e-02, 3.529e-01, 2.480e-01, 4.936e-02, -3.807e-02, -4.123e-01, -2.623e-01, -1.772e-01, -1.307e-01, -1.912e-01, 1.354e-01, 3.896e-01, 1.528e-01, -2.870e-01) * s1_2_1;
	r3 += M4(-2.005e-01, 1.311e-01, 4.340e-02, -1.167e-01, -1.975e-01, 9.382e-02, -4.934e-01, 1.394e-01, 2.161e-01, 2.556e-01, -6.611e-03, 2.786e-02, -1.499e-01, -3.109e-01, -1.691e-01, 2.705e-01) * s1_2_1;
	r0 += M4(-1.247e-01, -1.790e-01, 1.231e-01, -7.837e-02, 1.035e-01, -2.351e-01, 5.943e-01, -4.015e-01, 1.030e-02, -1.066e-01, 8.931e-02, 3.433e-02, 1.046e-01, 1.407e-01, 4.018e-01, 7.372e-02) * s1_2_2;
	r1 += M4(1.356e-01, 5.535e-01, 1.950e-04, 5.399e-01, 1.650e-02, -3.067e-01, -9.969e-02, 3.607e-02, 7.604e-02, -5.872e-02, -7.995e-02, 2.574e-01, -4.091e-02, 1.248e-01, -1.557e-01, -2.355e-01) * s1_2_2;
	r2 += M4(-1.912e-01, 2.790e-01, -5.121e-02, -1.296e-01, 2.584e-01, -9.963e-02, -1.883e-01, 5.507e-02, -1.045e-01, 2.997e-02, -5.490e-02, 3.333e-02, 1.031e-02, 1.971e-01, 8.018e-02, -7.459e-02) * s1_2_2;
	r3 += M4(-3.560e-03, -3.533e-01, 1.615e-01, -6.745e-02, -2.707e-02, 6.306e-01, 6.318e-03, 1.028e-01, -8.917e-02, -5.104e-02, 8.623e-02, -5.663e-02, -1.955e-01, -2.119e-01, -7.247e-02, 6.350e-02) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(2.180e-01, 6.890e-02, -4.961e-02, -4.462e-01, 1.228e-02, 9.745e-03, -1.037e-01, -1.198e-01, -5.784e-02, -6.273e-02, 9.702e-03, -3.197e-01, -1.565e-01, 2.645e-02, 7.545e-02, 6.237e-01) * s0_0_0;
	r1 += M4(1.526e-01, -4.503e-02, 2.474e-01, 2.604e-01, 3.354e-02, -1.407e-01, -3.745e-02, -3.963e-02, -1.122e-01, 3.112e-02, 1.462e-01, -8.678e-02, -1.364e-01, 2.684e-02, -1.894e-01, -1.928e-01) * s0_0_0;
	r2 += M4(5.447e-01, 2.114e-03, -4.367e-01, 1.126e-01, 2.584e-01, 2.107e-02, 2.436e-01, 1.992e-01, -3.989e-01, 1.841e-01, -3.050e-01, 3.067e-02, -5.996e-01, -5.738e-02, 3.250e-01, -1.990e-01) * s0_0_0;
	r3 += M4(-9.861e-02, -5.341e-02, 3.331e-02, 1.332e-01, 2.831e-02, -4.369e-02, 2.025e-01, 3.887e-02, 7.023e-02, 4.245e-02, -7.686e-02, 1.443e-01, 5.090e-02, 1.417e-01, -5.535e-02, -1.161e-01) * s0_0_0;
	r0 += M4(-1.526e-01, -3.355e-02, 8.111e-03, 1.176e-01, -1.263e-01, 1.597e-01, -1.142e-01, -3.171e-01, -5.019e-01, -5.869e-02, 2.180e-02, -3.827e-01, 3.270e-01, 1.262e-01, -1.404e-01, -1.026e-02) * s0_0_1;
	r1 += M4(1.283e-01, 1.025e-01, 7.981e-02, -2.190e-01, 5.825e-02, -2.935e-01, 1.655e-01, -5.077e-02, -6.938e-02, -2.015e-01, 7.195e-02, 2.013e-01, -3.990e-02, 3.082e-02, -2.724e-02, -1.851e-01) * s0_0_1;
	r2 += M4(-2.325e-01, -1.707e-01, 2.481e-01, 2.487e-01, -4.464e-01, 9.286e-02, 7.547e-01, 1.237e-01, 4.266e-01, -1.214e-01, -1.059e-01, 1.895e-01, -2.368e-01, -3.106e-02, -1.000e+00, -1.641e-01) * s0_0_1;
	r3 += M4(1.731e-01, -1.377e-01, -4.595e-01, -8.947e-02, 9.549e-02, 4.372e-02, 6.349e-01, 9.298e-02, -5.183e-01, -2.343e-01, -4.315e-01, -1.382e-01, -1.373e-01, 4.071e-01, 4.327e-01, 4.092e-01) * s0_0_1;
	r0 += M4(-9.818e-02, 1.199e-01, 1.045e-02, 1.056e-01, -1.047e-01, 3.084e-01, 6.168e-02, 2.483e-01, -7.217e-02, -2.134e-01, 6.401e-02, -4.198e-02, 1.100e-01, -2.368e-01, 4.218e-03, -2.919e-01) * s0_0_2;
	r1 += M4(1.284e-01, 5.198e-01, -5.343e-02, 6.130e-02, -3.529e-02, 7.894e-02, 1.126e-01, 7.691e-02, 1.200e-02, 1.855e-01, 2.329e-01, -2.978e-01, -1.152e-01, -8.695e-01, -2.978e-01, -1.239e-01) * s0_0_2;
	r2 += M4(4.522e-01, 3.295e-02, 4.311e-01, 3.922e-01, 2.804e-02, 6.874e-03, -1.000e+00, -5.685e-01, -4.185e-01, -4.003e-01, 1.044e-01, 1.157e-01, -1.272e-01, -1.219e-01, 3.005e-01, -7.116e-02) * s0_0_2;
	r3 += M4(9.136e-02, -1.205e-01, -3.296e-01, -4.264e-02, 1.456e-01, 8.558e-02, 2.865e-01, -1.011e-01, 4.055e-01, 3.002e-01, 2.117e-01, 7.263e-02, -6.556e-01, 1.656e-01, -1.396e-01, 1.296e-01) * s0_0_2;
	r0 += M4(-2.092e-01, 2.299e-01, 2.761e-02, 3.042e-01, -5.857e-02, 1.806e-04, 4.485e-02, 1.655e-01, -6.323e-02, 6.289e-02, -1.018e-01, 2.024e-01, 1.895e-01, -2.944e-01, -5.165e-02, -5.059e-01) * s0_1_0;
	r1 += M4(2.511e-01, -1.276e-01, -1.195e-01, -3.424e-01, 2.281e-01, -9.685e-02, 6.809e-02, -6.408e-02, 7.556e-02, -2.286e-02, -2.645e-02, -3.239e-02, -2.802e-01, 2.982e-01, 9.794e-02, 3.358e-01) * s0_1_0;
	r2 += M4(3.919e-01, 5.710e-02, -2.191e-01, -2.972e-03, -1.812e-01, 1.798e-02, -7.678e-03, 4.007e-02, 6.210e-02, 1.866e-01, 2.320e-01, 9.206e-03, -2.752e-01, 1.995e-01, 2.664e-01, 3.487e-02) * s0_1_0;
	r3 += M4(1.712e-02, -4.638e-03, -6.773e-02, 7.202e-02, 9.366e-02, 2.513e-01, 7.304e-03, -1.142e-02, -5.594e-03, -5.110e-02, 9.296e-03, 7.136e-02, -5.568e-03, -1.029e-01, 2.059e-01, -9.746e-02) * s0_1_0;
	r0 += M4(2.306e-01, 3.842e-02, -1.661e-01, 4.339e-02, -2.765e-01, -1.426e-01, -1.434e-01, -4.636e-01, -3.328e-01, 1.153e-01, 1.011e-01, 4.059e-01, -2.979e-01, -2.586e-02, 8.060e-02, -6.199e-01) * s0_1_1;
	r1 += M4(9.946e-02, 3.667e-01, -4.986e-01, -6.122e-01, 4.421e-01, 1.633e-01, 2.691e-02, 1.627e-01, 1.138e-02, 2.112e-01, -3.381e-01, 2.985e-01, -5.135e-01, -3.725e-01, 5.065e-01, 6.854e-01) * s0_1_1;
	r2 += M4(-8.063e-02, -4.917e-01, -7.169e-02, 3.548e-01, 2.546e-01, 1.782e-01, 3.237e-01, -5.346e-02, 5.845e-01, -4.383e-02, 3.282e-01, -2.823e-01, 6.589e-01, 1.000e+00, 2.125e-01, -5.858e-01) * s0_1_1;
	r3 += M4(-2.459e-02, 1.000e+00, 1.980e-02, -1.319e-01, -2.084e-01, 3.118e-03, -4.261e-01, 2.161e-01, -7.266e-02, -1.368e-01, 1.909e-01, 2.158e-01, 1.830e-01, -1.000e+00, 1.000e+00, 1.000e+00) * s0_1_1;
	r0 += M4(5.720e-02, -1.973e-01, 2.057e-01, 3.565e-01, -5.544e-02, -7.628e-01, 6.499e-02, -1.411e-01, -1.144e-01, 9.330e-02, 1.461e-01, 4.381e-01, -1.003e-01, 1.000e+00, -5.621e-01, -8.861e-01) * s0_1_2;
	r1 += M4(1.828e-01, -1.533e-01, 5.521e-03, 8.078e-01, -1.188e-01, 5.948e-01, -4.965e-01, -1.000e+00, 2.424e-01, -1.313e-01, -2.413e-01, -2.808e-01, -2.568e-01, -4.088e-01, 8.621e-01, -5.066e-01) * s0_1_2;
	r2 += M4(-4.979e-01, 1.683e-01, -2.875e-02, 1.955e-01, 4.702e-01, -2.867e-01, -6.747e-01, 1.169e-01, -8.831e-02, -5.016e-02, -7.434e-02, 3.759e-01, 1.795e-01, 3.339e-01, 7.564e-01, -5.880e-01) * s0_1_2;
	r3 += M4(-6.481e-02, -5.692e-01, 1.576e-01, -8.328e-02, 1.648e-01, -2.257e-01, -1.553e-01, -1.235e-01, 5.496e-02, -2.528e-01, -2.516e-01, 2.846e-02, 3.944e-01, -1.000e+00, -1.000e+00, 1.556e-01) * s0_1_2;
	r0 += M4(-5.052e-02, 5.218e-02, 2.353e-02, -4.442e-02, -1.924e-02, 1.073e-01, 2.010e-02, 8.865e-02, 2.192e-02, 2.717e-03, -3.988e-02, 3.115e-01, 6.361e-02, -7.113e-02, -5.789e-02, 1.411e-01) * s0_2_0;
	r1 += M4(1.295e-01, -3.869e-02, 1.303e-02, -3.082e-01, -3.890e-02, -5.802e-02, 3.974e-02, -2.128e-01, 1.749e-01, -4.465e-02, -2.806e-02, -1.384e-02, -7.528e-02, -7.604e-02, 2.032e-02, 4.023e-01) * s0_2_0;
	r2 += M4(-4.700e-02, 1.766e-01, -4.101e-02, 2.524e-01, -1.832e-01, -9.779e-03, 1.158e-01, -1.036e-01, 1.033e-02, 5.493e-02, 3.119e-02, 6.001e-02, -6.038e-02, -1.556e-01, 2.177e-02, -1.664e-01) * s0_2_0;
	r3 += M4(-5.168e-02, -3.075e-03, -4.211e-02, 1.070e-01, 2.097e-02, 2.293e-02, 6.351e-03, 7.719e-03, -3.207e-02, 7.050e-02, -3.877e-02, -5.707e-03, 4.922e-02, 5.754e-02, 4.334e-02, -5.212e-02) * s0_2_0;
	r0 += M4(-5.646e-02, 2.258e-02, 4.258e-02, -4.845e-02, -1.816e-01, -1.700e-01, 1.087e-01, 2.041e-01, -4.659e-02, -9.583e-02, -4.986e-02, 1.067e-01, -2.873e-01, -1.306e-01, 1.890e-01, 1.000e+00) * s0_2_1;
	r1 += M4(5.228e-01, -1.870e-01, -3.717e-05, 1.000e+00, -3.581e-03, 1.311e-01, -4.446e-02, 2.882e-01, 2.972e-01, -1.569e-01, 8.462e-02, 6.563e-02, -1.000e+00, 1.268e-01, -7.673e-02, -9.361e-01) * s0_2_1;
	r2 += M4(1.871e-01, -8.013e-02, 1.997e-01, -2.550e-02, -1.034e-01, -8.082e-02, 2.226e-01, -8.379e-02, 1.707e-02, -1.158e-01, 9.973e-02, 3.438e-01, 3.403e-01, 2.116e-01, -4.294e-01, 7.815e-02) * s0_2_1;
	r3 += M4(-3.264e-02, 2.759e-01, -1.121e-01, -4.237e-03, 5.690e-02, -7.950e-03, -4.913e-02, -5.934e-03, 3.512e-03, -2.465e-02, -1.846e-01, 2.326e-02, -1.543e-01, -5.587e-01, 5.549e-02, 1.966e-01) * s0_2_1;
	r0 += M4(-3.084e-02, 3.571e-01, 8.689e-02, -5.403e-01, -6.423e-02, 2.790e-01, -1.085e-01, -3.431e-01, -1.041e-01, -2.233e-01, -9.604e-02, -1.352e-01, 4.351e-02, -1.000e+00, -4.383e-01, 2.715e-01) * s0_2_2;
	r1 += M4(4.985e-03, 5.481e-01, -6.906e-02, 3.083e-01, -8.123e-02, 1.056e-01, -1.093e-01, 1.610e-01, 5.916e-02, 1.525e-01, 5.270e-02, -3.727e-01, 1.646e-01, -2.851e-01, -1.153e-01, -1.000e+00) * s0_2_2;
	r2 += M4(6.664e-02, -9.431e-02, 7.191e-02, 3.618e-02, -2.425e-02, -1.324e-01, 5.653e-02, 2.011e-01, -4.674e-02, 9.363e-02, -1.896e-01, 1.011e-01, -2.634e-01, 3.088e-02, -4.343e-01, 3.927e-01) * s0_2_2;
	r3 += M4(1.569e-03, -8.087e-02, 2.553e-01, 2.326e-02, 5.855e-02, 5.871e-02, -5.980e-02, -7.642e-02, 5.385e-03, 8.630e-02, -8.650e-02, 3.690e-02, 3.455e-02, -7.771e-02, -5.921e-01, 1.515e-01) * s0_2_2;
	r0 += M4(-4.848e-02, -2.346e-01, 2.136e-01, -2.164e-01, 4.427e-02, 2.375e-02, -8.867e-02, 3.706e-01, -1.738e-01, -3.332e-02, 5.593e-02, -4.582e-01, -7.185e-02, -4.801e-02, 1.615e-01, 1.653e-01) * s1_0_0;
	r1 += M4(3.866e-02, 3.967e-03, 2.151e-01, 4.783e-01, 9.679e-02, 5.686e-02, 8.586e-02, -4.903e-01, -4.304e-02, 8.533e-02, -1.745e-01, 4.405e-01, -4.939e-02, 2.810e-01, -1.865e-01, 3.271e-01) * s1_0_0;
	r2 += M4(1.343e-01, 1.856e-03, -5.920e-01, 2.126e-01, -1.871e-01, 2.658e-02, -3.797e-02, -2.049e-01, 6.863e-01, 1.406e-02, -5.127e-01, 3.828e-01, 3.857e-01, 2.314e-01, -8.868e-02, -2.625e-01) * s1_0_0;
	r3 += M4(9.849e-02, -9.362e-02, 1.237e-01, 9.089e-02, 7.725e-02, 3.720e-01, -6.109e-01, -5.182e-02, -3.158e-02, -9.723e-03, 6.679e-01, 2.566e-01, -1.161e-01, 2.676e-02, -1.352e-01, -2.367e-05) * s1_0_0;
	r0 += M4(-1.696e-02, -1.773e-01, 1.683e-01, -3.724e-02, -9.224e-02, -2.946e-03, 5.142e-02, -3.179e-03, -2.408e-01, -2.310e-01, 9.814e-02, -3.263e-01, 3.385e-01, 1.801e-01, 3.193e-01, 4.905e-02) * s1_0_1;
	r1 += M4(-1.779e-01, 2.796e-01, 3.799e-01, 2.344e-01, -7.838e-02, 6.062e-02, -1.935e-03, -5.655e-02, -1.304e-01, 2.786e-01, 2.575e-01, 2.666e-01, 2.425e-01, 1.772e-01, 4.812e-02, -3.866e-01) * s1_0_1;
	r2 += M4(-3.154e-01, -1.775e-01, -2.804e-01, 1.276e-01, -1.698e-01, -1.949e-01, -8.589e-01, 2.428e-01, -1.427e-02, 7.264e-02, 3.621e-01, -2.654e-01, -7.330e-01, 1.739e-01, -1.000e+00, 2.543e-01) * s1_0_1;
	r3 += M4(4.652e-01, -7.299e-02, 1.284e-01, 4.592e-02, 1.716e-01, 4.482e-02, 3.372e-01, -4.534e-02, 2.489e-01, 1.335e-01, -2.059e-01, 3.776e-02, 6.818e-01, 4.823e-02, 6.861e-01, 3.428e-01) * s1_0_1;
	r0 += M4(3.097e-02, -7.138e-02, 1.821e-02, -1.015e-04, 2.017e-02, -4.741e-02, -5.333e-02, 2.456e-01, 5.475e-02, -4.034e-02, 1.238e-01, -7.865e-02, -1.106e-03, -3.886e-02, -1.396e-01, 1.472e-01) * s1_0_2;
	r1 += M4(4.861e-02, 1.877e-01, 8.605e-02, -6.079e-02, 8.722e-02, -3.009e-01, -1.649e-01, 3.584e-01, -2.826e-02, 2.433e-01, 1.463e-01, -3.729e-01, 4.257e-03, -2.560e-01, 4.924e-02, -3.943e-01) * s1_0_2;
	r2 += M4(-4.209e-03, 1.633e-02, 2.051e-01, 9.069e-02, 2.309e-01, 1.182e-01, 3.065e-01, 7.891e-02, -2.064e-01, 1.255e-01, -2.163e-01, -4.438e-02, 3.909e-01, -3.291e-01, 3.303e-01, 2.238e-01) * s1_0_2;
	r3 += M4(-7.332e-02, -2.669e-02, -1.155e-01, -1.035e-02, -1.587e-01, -4.979e-01, -2.182e-01, 4.163e-02, 8.112e-02, 1.344e-01, 9.932e-02, 3.380e-02, 3.173e-02, 3.209e-01, 2.044e-01, 1.070e-01) * s1_0_2;
	r0 += M4(1.791e-01, 1.662e-01, -4.179e-02, 3.187e-01, 4.286e-01, 2.358e-01, 1.789e-01, -4.166e-01, -4.201e-01, 8.275e-02, -4.530e-02, -1.000e+00, -3.307e-02, 6.310e-02, 3.510e-01, -8.830e-01) * s1_1_0;
	r1 += M4(8.520e-02, -1.218e-01, -2.722e-01, -5.704e-01, 3.347e-02, 2.328e-01, -2.926e-03, -1.492e-01, -4.218e-02, -3.371e-01, 1.588e-01, 1.984e-01, -3.083e-01, 8.763e-02, -1.817e-01, 9.420e-02) * s1_1_0;
	r2 += M4(3.508e-01, -2.725e-02, 1.640e-01, -5.571e-01, 2.848e-01, 7.091e-02, 1.583e-01, -2.370e-01, 1.988e-01, 1.305e-01, -2.568e-01, -3.472e-02, -2.230e-01, -5.638e-02, -8.778e-03, -1.488e-02) * s1_1_0;
	r3 += M4(-2.240e-01, -4.128e-01, -1.496e-02, 3.236e-02, -5.644e-02, 4.431e-01, 5.094e-01, -7.357e-02, 1.200e-01, -1.000e+00, -1.631e-01, 2.220e-01, -1.077e-01, -3.764e-02, 1.019e-01, -1.721e-01) * s1_1_0;
	r0 += M4(4.516e-02, 4.791e-01, -4.209e-01, -5.241e-02, -2.122e-01, -5.389e-02, -2.288e-03, -2.897e-01, -1.735e-01, 1.000e+00, -5.000e-02, -3.111e-01, 2.403e-01, 1.691e-02, -6.699e-01, -1.000e+00) * s1_1_1;
	r1 += M4(1.310e-01, -2.204e-01, -6.662e-01, -7.358e-01, -2.165e-01, 9.079e-02, -6.317e-02, 6.782e-02, -1.000e+00, 1.724e-01, 3.133e-01, -9.495e-01, -2.942e-02, -3.613e-01, 1.455e-01, -2.650e-01) * s1_1_1;
	r2 += M4(3.730e-02, 3.718e-01, -1.671e-01, -2.479e-01, 3.651e-02, 2.648e-01, 3.515e-01, 1.979e-01, 1.482e-01, -1.119e-01, -5.886e-02, 6.016e-02, -5.796e-01, 6.352e-02, 2.612e-01, 1.941e-01) * s1_1_1;
	r3 += M4(-3.618e-01, -2.112e-01, 6.592e-02, 2.284e-02, -8.002e-02, -1.908e-01, 2.470e-01, 2.180e-02, -6.500e-02, -7.434e-02, -3.711e-01, 5.786e-02, 2.542e-02, -2.303e-01, 2.446e-01, 4.279e-02) * s1_1_1;
	r0 += M4(-3.694e-02, 1.960e-01, -7.108e-02, 1.176e-01, -1.196e-01, -3.965e-01, 6.148e-02, 3.150e-01, 8.628e-02, 1.485e-01, 1.917e-01, -2.358e-01, 9.036e-02, -2.807e-01, -8.682e-01, 6.368e-01) * s1_1_2;
	r1 += M4(-6.488e-02, -1.380e-01, -4.167e-02, -1.058e-01, -3.466e-02, -2.921e-02, 7.557e-02, 3.522e-01, 4.181e-02, -2.229e-02, -9.839e-02, -4.871e-01, -1.181e-01, 3.595e-02, -6.939e-02, -5.458e-01) * s1_1_2;
	r2 += M4(1.608e-01, -2.139e-02, -3.574e-01, -2.009e-01, 6.718e-02, 3.699e-02, -1.327e-03, 3.484e-02, 7.326e-02, 1.026e-01, -1.184e-01, -1.452e-01, 1.097e-01, 1.802e-01, 1.547e-01, -1.169e-01) * s1_1_2;
	r3 += M4(7.915e-03, 1.154e-01, 2.269e-01, 1.062e-01, 8.229e-02, -1.376e-01, 1.509e-01, 9.635e-02, -7.815e-02, 1.155e-01, -2.927e-02, 4.176e-02, -5.899e-02, -4.695e-02, -2.959e-01, -2.124e-02) * s1_1_2;
	r0 += M4(1.789e-01, 1.534e-01, 5.241e-02, -1.547e-01, 1.284e-01, -2.385e-01, -1.699e-01, -5.482e-02, -1.186e-01, 2.859e-01, 1.029e-01, 3.816e-01, 2.480e-02, -6.042e-02, 8.671e-03, -1.205e-01) * s1_2_0;
	r1 += M4(2.961e-01, -1.994e-01, 2.750e-02, 4.072e-02, 2.863e-01, -4.381e-01, 1.643e-01, 1.012e-01, -3.206e-01, 2.056e-01, -1.460e-01, -3.501e-01, 6.286e-02, 1.190e-01, 1.169e-02, 2.474e-01) * s1_2_0;
	r2 += M4(-3.137e-01, -2.117e-01, 3.900e-01, 2.836e-01, 2.649e-02, -1.397e-01, 4.340e-02, 1.534e-01, -1.136e-01, 1.203e-01, -5.507e-03, -1.180e-01, 2.408e-01, 2.971e-02, -2.343e-01, -4.375e-02) * s1_2_0;
	r3 += M4(1.964e-01, 4.653e-01, -1.790e-01, 3.839e-02, 1.850e-01, 1.358e-01, 1.220e-01, -1.158e-02, -3.825e-02, -2.184e-01, -1.170e-01, 2.541e-02, -9.644e-02, 2.187e-03, -4.139e-02, -3.329e-02) * s1_2_0;
	r0 += M4(7.611e-02, -1.686e-01, -4.459e-01, 2.634e-02, 2.151e-02, -4.271e-02, -1.145e-01, -6.897e-02, -4.768e-03, -1.738e-01, 1.592e-01, 1.725e-01, 7.700e-02, -7.251e-02, -8.891e-02, -1.980e-01) * s1_2_1;
	r1 += M4(2.412e-01, -1.528e-01, 8.318e-02, 2.067e-01, 6.838e-02, 2.572e-02, -8.782e-02, 3.316e-01, -5.528e-02, -7.524e-02, 6.122e-02, -2.144e-01, 1.296e-01, -9.096e-02, 4.762e-02, -3.815e-01) * s1_2_1;
	r2 += M4(1.010e-02, -4.237e-02, 4.658e-01, 1.191e-01, 9.617e-03, 8.964e-03, 5.956e-02, -4.407e-02, -4.782e-02, 1.016e-02, 1.661e-02, -1.593e-02, -3.208e-02, -4.598e-02, -6.075e-02, 1.285e-01) * s1_2_1;
	r3 += M4(-9.623e-03, 9.499e-02, 2.134e-02, -6.903e-02, 7.278e-02, 1.927e-01, 1.059e-02, 3.869e-02, -9.203e-04, -2.748e-01, -1.171e-02, 9.811e-03, -3.547e-02, 1.582e-01, 7.061e-02, 2.947e-02) * s1_2_1;
	r0 += M4(-4.629e-02, -1.205e-01, 6.587e-02, -6.821e-02, 5.099e-03, 3.865e-01, 4.718e-02, -1.430e-01, -5.456e-02, -1.873e-01, -6.627e-02, 9.972e-02, 1.989e-02, -5.618e-02, 6.733e-02, 5.210e-02) * s1_2_2;
	r1 += M4(7.730e-02, -4.916e-02, -1.321e-02, 1.507e-01, 2.886e-02, 2.027e-01, -3.580e-02, -1.058e-01, -3.507e-02, 2.547e-02, 6.359e-02, 2.419e-02, -4.952e-02, -5.093e-02, 5.286e-03, 1.218e-01) * s1_2_2;
	r2 += M4(-9.635e-02, 2.117e-02, 1.303e-01, 1.325e-01, -6.657e-02, 2.562e-02, -6.060e-02, -1.859e-01, 2.640e-02, -4.461e-02, 5.009e-02, 1.446e-01, 2.079e-02, 6.960e-02, -6.042e-02, -2.812e-02) * s1_2_2;
	r3 += M4(7.778e-03, -3.128e-02, -1.067e-01, -7.987e-02, -3.100e-02, -5.209e-02, 8.091e-02, -6.065e-02, 1.516e-02, 8.525e-03, -1.008e-01, -1.275e-02, -5.048e-03, 8.194e-03, -9.840e-03, 9.087e-03) * s1_2_2;
	r0 += V4(-6.840e-03, 5.666e-03, 9.529e-03, -9.542e-04);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(-6.152e-01, 1.037e-02, -2.132e-02, -1.233e-02);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(5.245e-03, 7.962e-04, 1.465e-03, 1.412e-02);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(1.853e-02, 9.352e-03, -6.964e-03, 5.769e-03);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC [CuNNy_4x16] -conv2
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv1
//!BIND LUMA
//!SAVE conv2
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv1_pt;
			V4 sr0 = V4(conv1_gather(p, 0));
			V4 sg0 = V4(conv1_gather(p, 1));
			V4 sb0 = V4(conv1_gather(p, 2));
			V4 sa0 = V4(conv1_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(-1.886e-01, -3.280e-02, -1.578e-01, -1.723e-02, 1.273e-01, 5.850e-02, 4.337e-01, -1.786e-01, -2.321e-02, 1.980e-01, -4.678e-02, 6.245e-03, -3.874e-02, -9.341e-02, 5.339e-02, -4.741e-03) * s0_0_0;
	r1 += M4(1.471e-01, 5.272e-02, 9.998e-03, 3.093e-01, -3.962e-01, 7.331e-02, 8.342e-02, 7.416e-02, -7.002e-02, -2.201e-02, 6.487e-02, 1.729e-01, 3.560e-02, 4.420e-02, -2.699e-02, -2.552e-02) * s0_0_0;
	r2 += M4(-6.110e-02, 1.805e-01, 1.178e-01, 9.254e-02, -8.163e-02, 2.654e-01, 9.119e-02, 8.558e-02, -8.434e-01, -1.164e-01, 7.527e-02, -5.567e-01, 8.034e-02, 2.002e-02, 2.256e-02, 1.813e-01) * s0_0_0;
	r3 += M4(2.867e-02, -1.787e-01, -1.792e-01, 1.895e-01, 2.895e-02, 3.437e-01, 2.391e-01, 4.578e-01, 1.668e-01, 1.233e-01, -3.761e-01, 4.014e-01, 1.334e-01, -1.179e-01, -3.350e-02, -1.712e-01) * s0_0_0;
	r0 += M4(-8.645e-02, 1.748e-01, -9.066e-02, 3.066e-02, 4.694e-03, -2.921e-01, 1.620e-02, 1.410e-01, -2.669e-01, 9.696e-02, -1.352e-01, -1.019e-01, 9.744e-02, -3.428e-01, 2.441e-02, -8.780e-02) * s0_0_1;
	r1 += M4(8.512e-02, 1.982e-02, 2.220e-02, -1.501e-01, -1.442e-01, 1.879e-02, 4.271e-02, -1.525e-01, -1.589e-01, -1.032e-01, -9.896e-03, 4.765e-02, 3.237e-01, 1.178e-01, -8.277e-02, -3.327e-01) * s0_0_1;
	r2 += M4(1.605e-01, -1.831e-01, -8.466e-02, -3.066e-01, 2.126e-01, 8.299e-02, 7.224e-02, 5.855e-02, -5.706e-02, -1.285e-01, -3.151e-02, -6.549e-01, 2.208e-01, -1.624e-02, 5.483e-02, 2.065e-01) * s0_0_1;
	r3 += M4(2.239e-01, 2.171e-01, 9.495e-02, 3.501e-03, 4.373e-01, -2.578e-01, 1.675e-01, 1.439e-01, -2.284e-02, -8.317e-02, -8.066e-02, 4.580e-01, 2.796e-01, -1.831e-01, -1.073e-01, -1.849e-01) * s0_0_1;
	r0 += M4(-1.818e-02, -4.384e-02, 1.295e-01, -3.343e-02, 1.161e-01, -6.865e-03, 1.494e-02, -1.424e-02, -1.179e-01, 1.376e-01, -7.162e-03, 1.914e-02, -1.142e-01, -2.900e-01, 1.150e-01, -1.040e-01) * s0_0_2;
	r1 += M4(7.731e-03, -2.929e-02, -1.013e-01, 2.225e-02, -2.454e-01, -1.193e-01, 3.155e-02, 7.065e-02, -5.940e-02, -9.517e-02, 3.355e-02, 1.533e-02, 5.339e-02, 5.521e-02, 3.454e-02, -3.018e-01) * s0_0_2;
	r2 += M4(-5.036e-02, -1.839e-01, -1.868e-02, -2.243e-01, 1.706e-03, -2.391e-02, 1.075e-03, -6.210e-02, 1.147e-02, 8.325e-02, -3.659e-03, -6.724e-02, 3.051e-02, 9.497e-02, 8.618e-02, 2.848e-01) * s0_0_2;
	r3 += M4(-3.877e-02, 1.796e-01, -1.004e-01, 3.340e-01, -1.702e-02, 1.728e-02, 1.697e-01, 1.114e-01, 3.878e-02, 9.196e-02, -3.048e-02, 1.875e-01, 1.535e-01, -5.745e-03, -4.133e-02, -4.182e-01) * s0_0_2;
	r0 += M4(1.027e-01, 2.705e-01, -8.582e-02, -3.129e-01, 1.431e-01, -6.198e-02, 3.122e-01, -4.541e-02, -2.906e-03, 1.543e-01, -2.317e-02, 5.736e-02, 1.367e-02, -5.968e-02, 2.391e-02, 4.892e-02) * s0_1_0;
	r1 += M4(1.052e-01, 6.835e-02, -1.527e-02, 1.795e-01, -5.636e-01, 2.686e-01, -3.482e-02, 1.599e-01, -2.349e-02, -5.194e-02, -3.685e-02, 3.841e-01, -1.626e-02, 8.068e-02, -2.310e-02, -1.450e-01) * s0_1_0;
	r2 += M4(-4.250e-02, -4.803e-03, -1.768e-01, 1.261e-01, -1.386e-01, -8.775e-02, 2.113e-02, -2.300e-01, -1.156e-01, -2.787e-01, 2.566e-02, 6.145e-02, 1.149e-01, 5.967e-02, -8.696e-03, 7.250e-02) * s0_1_0;
	r3 += M4(-3.607e-02, 1.399e-01, -3.627e-03, 2.805e-01, 5.900e-02, -2.385e-01, 1.306e-01, 4.900e-01, -3.639e-01, -2.283e-01, -1.207e-01, 4.189e-01, 1.855e-01, 5.153e-02, 2.165e-02, -3.605e-01) * s0_1_0;
	r0 += M4(6.344e-02, -5.385e-02, -1.982e-01, 5.132e-01, 7.325e-02, -3.194e-01, 2.341e-01, 2.570e-01, -3.600e-02, 8.496e-02, -3.268e-02, -1.054e-02, -4.834e-02, -2.647e-01, -4.445e-02, -2.058e-02) * s0_1_1;
	r1 += M4(1.324e-02, -4.439e-01, 2.878e-02, -7.487e-01, 2.180e-01, 1.818e-01, -3.434e-02, 1.624e-01, 3.375e-01, 5.889e-02, -7.125e-03, 1.307e-01, -7.381e-02, 1.016e-01, -1.352e-02, -5.100e-01) * s0_1_1;
	r2 += M4(5.801e-01, 1.600e-02, 2.427e-01, -2.975e-02, -3.790e-01, 2.318e-02, -1.544e-01, -2.980e-01, -8.172e-02, 2.398e-02, 4.448e-02, -2.968e-01, 2.277e-01, 5.389e-02, -3.433e-02, -4.821e-02) * s0_1_1;
	r3 += M4(2.763e-01, -1.147e-01, 7.825e-01, 1.632e-01, -8.400e-02, -2.443e-01, 1.823e-01, 9.817e-02, 3.444e-01, -5.969e-02, -1.000e+00, 2.428e-01, -3.212e-02, -7.464e-02, -1.944e-02, -5.404e-01) * s0_1_1;
	r0 += M4(1.470e-01, -2.008e-02, 1.560e-01, -7.284e-02, 1.497e-01, -1.928e-01, 1.135e-01, 1.614e-02, -3.499e-02, 9.056e-02, -2.737e-02, 3.156e-02, -1.268e-02, -1.343e-01, 6.715e-02, -1.704e-02) * s0_1_2;
	r1 += M4(4.799e-02, 3.866e-02, 4.895e-02, -1.127e-02, -2.116e-01, 1.078e-01, -4.179e-02, -8.030e-02, -6.082e-02, -1.793e-01, -4.813e-03, 9.929e-03, -2.716e-01, 2.287e-01, -4.725e-02, -2.725e-01) * s0_1_2;
	r2 += M4(-5.365e-02, -6.007e-02, 4.088e-02, 1.490e-01, 1.265e-01, -2.487e-01, -2.468e-02, -3.465e-01, 1.365e-01, -6.124e-02, -6.903e-03, -2.177e-01, 1.170e-01, 2.785e-02, 1.966e-02, 1.442e-01) * s0_1_2;
	r3 += M4(1.476e-01, 6.847e-03, -1.539e-01, -5.691e-02, -1.116e-01, -3.389e-02, 1.426e-01, 2.103e-01, 6.759e-02, 9.314e-02, -7.796e-02, 4.214e-01, -1.361e-01, -1.979e-01, 1.548e-01, -1.267e-01) * s0_1_2;
	r0 += M4(-1.844e-02, -5.530e-02, 1.519e-01, -5.560e-02, 1.497e-01, -6.641e-02, 1.519e-01, 4.284e-02, 2.776e-02, 2.622e-03, -6.997e-02, 2.051e-02, 1.774e-02, 1.583e-02, 8.329e-02, -1.376e-02) * s0_2_0;
	r1 += M4(-1.864e-01, -3.626e-02, -2.538e-02, 2.216e-01, -3.032e-02, 7.049e-02, -6.767e-02, -1.586e-01, 2.842e-02, -4.387e-02, -6.283e-03, 2.226e-01, -1.427e-02, 8.949e-02, 2.374e-02, -7.243e-03) * s0_2_0;
	r2 += M4(2.133e-02, 2.135e-01, -6.427e-03, 5.978e-02, 8.096e-02, 6.274e-02, -7.135e-02, -5.551e-02, 3.115e-02, -4.182e-02, 3.573e-02, 3.136e-02, 1.375e-01, 3.038e-02, -2.937e-02, 3.113e-02) * s0_2_0;
	r3 += M4(-2.432e-01, -1.425e-01, -3.115e-01, -4.043e-01, -2.548e-01, -2.885e-02, 1.566e-01, 5.160e-02, 1.828e-01, -1.201e-01, 6.073e-02, 2.094e-01, 1.158e-02, 5.138e-02, -5.561e-02, -1.210e-01) * s0_2_0;
	r0 += M4(-4.506e-02, -2.045e-01, 1.113e-01, -2.014e-02, 1.813e-03, 8.045e-02, 2.707e-01, 6.946e-02, -2.016e-02, 6.181e-02, -8.895e-02, -8.484e-03, 4.355e-02, -8.335e-02, 6.522e-03, 8.441e-03) * s0_2_1;
	r1 += M4(1.386e-01, 1.727e-01, -1.802e-02, 1.405e-01, 2.502e-02, 2.996e-01, 2.539e-02, 5.380e-02, 1.007e-02, -4.971e-03, -9.967e-03, 1.140e-02, -2.381e-02, 1.578e-01, 1.911e-02, -3.516e-02) * s0_2_1;
	r2 += M4(-2.669e-01, -1.454e-03, -9.642e-02, 2.358e-02, 1.396e-02, 7.348e-02, 3.074e-02, 4.751e-02, 2.611e-02, -1.067e-01, 1.019e-02, -1.842e-02, 1.294e-01, -3.925e-02, 2.445e-02, 2.161e-02) * s0_2_1;
	r3 += M4(-2.687e-01, -1.964e-01, -1.765e-01, -5.107e-01, 1.222e-01, -3.050e-01, 1.718e-01, -1.786e-01, 7.465e-02, 1.016e-01, -4.436e-02, 1.504e-01, -4.065e-02, 3.357e-03, 7.010e-02, -5.405e-01) * s0_2_1;
	r0 += M4(2.559e-02, -5.445e-02, -3.107e-02, -3.847e-02, 1.587e-01, -6.716e-02, 9.241e-02, -2.432e-02, -1.051e-02, -5.346e-02, -3.525e-02, -2.963e-03, 5.355e-02, -1.650e-02, 1.171e-01, 1.182e-02) * s0_2_2;
	r1 += M4(-3.374e-01, 3.940e-02, 1.830e-04, -8.448e-02, 1.911e-01, 6.977e-02, 3.589e-02, 8.065e-02, 3.112e-02, -1.260e-02, -1.630e-02, 4.258e-02, -1.273e-01, 1.754e-01, 1.837e-02, -3.980e-02) * s0_2_2;
	r2 += M4(-2.522e-01, 4.874e-02, -3.055e-02, 1.565e-01, -8.246e-02, -1.945e-01, 4.762e-02, -1.439e-01, 2.763e-02, -1.184e-02, 1.663e-02, -1.972e-02, 1.136e-01, -1.533e-03, 1.507e-02, 4.052e-02) * s0_2_2;
	r3 += M4(-3.715e-01, 4.586e-02, 1.918e-02, -6.149e-02, -9.275e-02, 7.519e-02, 2.200e-01, -1.529e-01, -1.304e-02, -8.631e-02, -2.026e-02, 2.076e-01, -1.236e-01, -1.015e-01, 1.495e-02, -3.202e-01) * s0_2_2;
	r0 += M4(2.340e-01, -4.105e-02, -1.258e-01, 1.687e-02, -4.871e-02, -2.897e-02, 9.950e-02, -5.099e-02, 1.042e-01, -1.362e-01, -2.231e-02, 1.108e-01, 1.615e-03, -7.236e-02, -4.141e-01, 1.224e-01) * s1_0_0;
	r1 += M4(1.547e-02, 1.112e-01, 9.159e-02, 4.318e-01, 3.207e-02, -3.506e-02, -7.059e-02, 9.168e-02, 5.407e-02, -5.652e-02, -2.551e-02, -1.029e-01, -2.062e-01, -1.432e-01, 6.369e-02, 1.769e-01) * s1_0_0;
	r2 += M4(-1.522e-01, 1.065e-01, -2.259e-01, 1.556e-01, 7.551e-02, 1.171e-01, -3.857e-02, 2.953e-01, -1.429e-01, -4.701e-02, 1.753e-02, -4.046e-03, 4.283e-01, -7.015e-02, -2.782e-02, -2.513e-01) * s1_0_0;
	r3 += M4(5.301e-02, 4.101e-01, -8.638e-02, 3.044e-02, -1.856e-01, -1.919e-01, 7.557e-02, -1.625e-01, -1.828e-03, 2.307e-01, 6.634e-02, -2.824e-01, -2.901e-01, -6.774e-01, 6.498e-02, 6.483e-02) * s1_0_0;
	r0 += M4(-5.117e-01, 1.054e-01, -1.000e+00, 5.035e-01, 6.346e-02, -1.003e-01, -5.563e-02, 1.067e-01, 1.491e-01, -1.375e-01, -4.166e-02, -1.238e-01, -1.220e-01, 6.129e-01, -7.433e-02, 3.957e-01) * s1_0_1;
	r1 += M4(-2.439e-01, -2.381e-01, -3.182e-01, -2.201e-01, 2.533e-01, -4.350e-03, -4.361e-02, -1.461e-01, 1.180e-01, 3.307e-02, 1.224e-02, 2.457e-01, -1.807e-01, -1.530e-01, 1.699e-01, 2.134e-01) * s1_0_1;
	r2 += M4(-5.355e-01, -1.196e-01, 9.547e-02, -4.872e-01, 2.096e-01, 7.109e-03, -6.126e-02, 4.354e-01, -1.145e-01, 1.737e-01, 1.116e-01, 2.877e-01, -2.117e-01, -8.249e-02, 1.164e-01, -8.137e-01) * s1_0_1;
	r3 += M4(-8.852e-01, -1.000e+00, 7.520e-01, -5.893e-02, 2.822e-01, -1.031e-01, 5.458e-02, -5.416e-01, -2.824e-02, -7.571e-02, -5.712e-02, -1.689e-01, -6.117e-01, 4.638e-01, 2.822e-01, -4.048e-01) * s1_0_1;
	r0 += M4(2.060e-01, 1.196e-01, -3.381e-02, 2.276e-01, -5.618e-02, 2.167e-02, 3.177e-02, 4.975e-03, 7.376e-02, -2.817e-02, -1.517e-02, -2.222e-03, -9.590e-02, -9.862e-02, -3.174e-01, 6.718e-02) * s1_0_2;
	r1 += M4(2.985e-01, -2.374e-01, -3.735e-02, -1.072e-01, 2.173e-01, 1.884e-04, -2.611e-02, -3.936e-02, -1.075e-01, -2.913e-02, 2.083e-02, -7.633e-02, -2.006e-01, -1.409e-01, -3.749e-02, 2.790e-01) * s1_0_2;
	r2 += M4(-4.892e-01, -6.054e-02, -1.444e-02, 5.038e-02, -3.783e-02, 8.189e-02, 2.390e-02, -7.831e-03, 3.696e-02, 5.514e-02, -2.981e-02, 5.293e-02, -1.388e-01, 1.001e-03, -1.018e-02, -6.512e-02) * s1_0_2;
	r3 += M4(-3.742e-01, 3.561e-01, -2.005e-02, -8.707e-01, 9.353e-02, 2.301e-01, 8.045e-02, -7.254e-01, -5.708e-02, -6.479e-02, -1.921e-02, 3.808e-01, -2.119e-01, -2.702e-01, 2.626e-01, -1.015e-01) * s1_0_2;
	r0 += M4(4.783e-02, -5.601e-02, -8.967e-03, -2.660e-02, 6.208e-02, -1.563e-01, -1.520e-01, 1.115e-01, 1.610e-01, 5.974e-02, 4.805e-02, 5.538e-01, -2.915e-01, 1.638e-01, -2.747e-01, -2.020e-01) * s1_1_0;
	r1 += M4(-1.704e-02, 1.089e-01, 1.087e-01, 3.407e-01, -2.434e-01, 4.534e-02, -3.166e-02, -2.834e-01, 6.287e-02, 1.847e-01, 2.660e-04, 1.313e-01, -1.863e-01, -2.114e-01, 3.675e-03, 8.129e-02) * s1_1_0;
	r2 += M4(1.037e-01, -6.286e-02, 9.284e-02, 2.439e-02, -4.797e-02, 6.859e-02, 8.211e-02, 4.423e-02, -4.834e-01, -2.124e-01, 1.942e-01, -1.017e-01, 2.494e-02, 8.012e-02, -6.065e-02, -5.774e-01) * s1_1_0;
	r3 += M4(-1.066e-01, 1.057e-01, -2.110e-01, -2.154e-01, 2.130e-02, -5.516e-02, 7.423e-02, -1.000e+00, 5.020e-01, -7.335e-02, 1.548e-02, 5.390e-03, -6.706e-01, -3.660e-01, 3.858e-01, -7.260e-02) * s1_1_0;
	r0 += M4(1.284e-01, -5.240e-02, 1.908e-01, -1.206e-01, -8.527e-02, -3.401e-01, -8.101e-02, 1.845e-01, 1.517e-01, 2.822e-01, 1.986e-01, -3.107e-01, -8.973e-03, 4.209e-01, -4.022e-01, -1.180e-01) * s1_1_1;
	r1 += M4(-7.982e-04, 1.849e-01, 1.243e-01, 9.476e-03, 1.587e-01, 2.195e-02, 8.031e-02, -5.579e-01, 1.420e-01, 5.638e-02, 2.035e-02, 2.613e-01, 5.525e-01, -5.219e-01, 6.252e-02, 1.544e-01) * s1_1_1;
	r2 += M4(4.095e-02, -1.913e-01, 1.294e-01, -7.521e-02, 2.228e-01, 6.367e-02, -1.180e-01, 3.405e-01, -1.660e-01, -8.608e-02, 1.830e-01, -2.794e-01, -2.258e-01, -4.895e-01, 6.238e-02, -2.394e-01) * s1_1_1;
	r3 += M4(-1.000e+00, -1.448e-01, 9.635e-02, -8.709e-02, -2.685e-01, -2.733e-01, 1.098e-01, -8.856e-01, -6.689e-03, 3.877e-01, -7.982e-01, 1.864e-01, -1.000e+00, 3.174e-01, -7.746e-02, -4.698e-01) * s1_1_1;
	r0 += M4(1.272e-02, -5.427e-02, -1.351e-02, -7.948e-02, 3.870e-02, 1.040e-03, 5.598e-02, -2.771e-02, 1.022e-01, -1.495e-01, -3.648e-02, -3.433e-02, -6.013e-02, -3.238e-01, -1.779e-01, 3.770e-01) * s1_1_2;
	r1 += M4(-1.566e-02, 1.683e-01, 1.135e-01, 3.465e-02, -7.766e-02, -4.539e-02, 3.526e-02, -1.273e-01, -3.915e-02, 1.692e-01, -2.674e-02, 1.887e-01, -1.449e-01, 1.152e-01, -8.244e-02, 3.232e-01) * s1_1_2;
	r2 += M4(2.339e-01, 5.947e-02, 2.223e-02, 1.824e-02, -9.116e-02, 1.575e-01, 1.294e-02, 1.782e-01, 2.142e-01, -2.427e-01, 4.285e-02, -1.269e-01, -4.267e-02, 1.587e-01, -2.412e-02, 3.257e-03) * s1_1_2;
	r3 += M4(-1.000e+00, -9.510e-02, 6.750e-03, 1.357e-01, -2.799e-01, 7.118e-02, 9.246e-02, -2.471e-01, 2.450e-01, -3.351e-01, -1.974e-01, 3.067e-01, -1.672e-01, -1.077e-01, -1.108e-01, -7.878e-02) * s1_1_2;
	r0 += M4(-6.930e-02, 2.087e-02, 4.715e-02, -2.487e-02, 3.952e-02, -1.360e-02, 1.972e-02, 6.619e-02, 1.793e-02, -1.321e-02, -5.751e-02, -1.568e-01, -1.055e-01, 1.024e-01, -7.715e-02, 1.669e-01) * s1_2_0;
	r1 += M4(1.719e-02, -9.329e-02, -3.967e-02, -8.028e-02, 1.432e-04, 2.614e-02, 5.318e-02, -6.082e-02, 7.755e-02, -9.908e-02, -1.955e-02, -2.584e-01, 1.667e-02, -3.002e-01, -4.094e-04, -2.986e-02) * s1_2_0;
	r2 += M4(-2.267e-02, 1.886e-02, -1.108e-02, -1.299e-01, 1.675e-02, 6.778e-02, 5.530e-02, 4.902e-02, 2.052e-01, -1.107e-02, -1.849e-02, -7.009e-02, -9.394e-02, -4.464e-02, -1.446e-02, -1.154e-01) * s1_2_0;
	r3 += M4(-5.480e-02, -6.895e-02, 1.064e-02, 3.221e-02, -2.742e-01, 1.266e-01, -7.262e-02, -6.896e-01, 1.302e-01, -1.422e-01, 2.164e-01, 4.384e-01, -5.276e-01, -1.856e-01, 2.248e-01, 1.050e-02) * s1_2_0;
	r0 += M4(4.363e-02, 7.695e-02, 5.871e-02, 6.570e-03, -2.080e-02, -1.638e-01, 1.361e-02, 3.058e-02, -7.693e-02, 3.128e-01, -1.602e-01, 1.931e-02, -1.311e-01, 2.729e-02, 1.597e-01, 1.837e-01) * s1_2_1;
	r1 += M4(1.185e-01, -1.071e-01, -3.743e-02, 8.020e-02, -2.212e-02, 9.906e-02, 7.655e-02, 3.637e-02, -1.358e-02, -1.766e-01, -1.682e-01, -6.295e-02, -1.100e-01, -1.855e-01, 4.909e-02, 2.257e-01) * s1_2_1;
	r2 += M4(-4.495e-02, 4.332e-02, -3.149e-02, -1.464e-01, -9.221e-02, -3.620e-02, 3.585e-02, 1.087e-01, 2.495e-01, 4.767e-03, -3.480e-03, -5.794e-02, 5.326e-02, 3.675e-01, 4.009e-02, -3.283e-02) * s1_2_1;
	r3 += M4(3.178e-01, 2.418e-02, -1.098e-01, 1.055e-01, 8.766e-02, 5.319e-02, 4.725e-02, -5.216e-01, -6.200e-01, 1.795e-01, 2.077e-01, 1.766e-01, -1.895e-01, -2.767e-01, -4.789e-02, 2.763e-01) * s1_2_1;
	r0 += M4(9.154e-04, -1.841e-02, 7.512e-02, -6.413e-03, 7.097e-03, 4.338e-02, 2.188e-02, -7.241e-03, 1.028e-02, -3.465e-02, 2.188e-02, -7.983e-02, -9.235e-02, 1.711e-01, 1.822e-01, 1.615e-01) * s1_2_2;
	r1 += M4(-2.675e-03, 6.958e-03, -1.526e-02, 8.655e-03, -9.204e-02, -2.956e-02, 1.614e-02, 2.984e-02, 1.001e-01, 2.334e-01, -3.891e-02, 9.337e-03, 9.639e-02, -1.604e-02, 2.249e-02, 1.738e-01) * s1_2_2;
	r2 += M4(1.058e-02, -6.232e-03, -5.821e-03, -1.225e-01, 1.002e-02, -3.814e-02, -3.009e-02, 8.746e-03, -6.961e-02, 8.283e-02, 9.907e-04, 1.046e-01, -9.610e-02, 1.678e-02, -2.956e-02, 2.443e-03) * s1_2_2;
	r3 += M4(-9.779e-02, -6.152e-02, -4.431e-02, -2.237e-01, -9.746e-02, 1.820e-01, -1.259e-02, -1.651e-01, 8.921e-02, -1.578e-01, 1.201e-01, -4.538e-01, 5.920e-02, 1.292e-01, 1.093e-01, -4.680e-01) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(-2.325e-02, -4.950e-03, -2.086e-02, -1.304e-02, 2.593e-02, 2.365e-02, 3.446e-02, 1.911e-03, -1.908e-02, 1.979e-02, -4.837e-02, -2.253e-02, 1.405e-02, -4.024e-02, 3.835e-02, -4.084e-02) * s0_0_0;
	r1 += M4(9.338e-02, 9.050e-02, 1.715e-02, -7.016e-02, -4.469e-02, -3.758e-02, 3.554e-02, -2.155e-01, 4.342e-02, -7.096e-03, -1.545e-02, 2.205e-02, -8.604e-03, 3.998e-02, 5.375e-02, 1.244e-01) * s0_0_0;
	r2 += M4(4.405e-02, 1.074e-02, 2.065e-02, -4.948e-02, 1.794e-03, 4.541e-02, -1.422e-02, 4.180e-02, 1.630e-01, -1.005e-03, 4.903e-02, -1.669e-01, 6.725e-03, 6.223e-02, 7.643e-02, -4.603e-02) * s0_0_0;
	r3 += M4(1.563e-02, 2.332e-01, 1.060e-01, -9.350e-02, -4.082e-02, 1.301e-02, -1.617e-02, -5.383e-02, 1.365e-01, -3.747e-02, 5.399e-02, 2.351e-02, -5.695e-02, -1.263e-01, 1.372e-01, -6.034e-02) * s0_0_0;
	r0 += M4(2.758e-02, -2.340e-01, -9.692e-02, 3.601e-03, 5.775e-02, -8.263e-02, 1.370e-01, -8.256e-03, 5.115e-02, -7.699e-02, -1.979e-02, 1.190e-02, 4.750e-02, 1.344e-01, 7.319e-02, 1.346e-01) * s0_0_1;
	r1 += M4(7.924e-02, 4.213e-02, 6.288e-02, 1.192e-01, -2.752e-02, 1.929e-02, -5.710e-02, 2.844e-02, 3.732e-02, 6.236e-02, 4.298e-02, 1.335e-01, 1.649e-02, -1.806e-02, -2.582e-02, 8.233e-02) * s0_0_1;
	r2 += M4(4.660e-03, 1.091e-01, 8.788e-02, 1.203e-02, 3.527e-02, 2.123e-01, -3.803e-02, 9.349e-02, -4.836e-02, 1.773e-01, 1.092e-01, 8.257e-02, 3.520e-02, -3.838e-01, -1.165e-01, -1.957e-01) * s0_0_1;
	r3 += M4(1.903e-01, 1.199e-01, 2.717e-02, -1.113e-01, -3.619e-01, -2.113e-01, -3.718e-02, -1.739e-01, 2.254e-01, -5.533e-02, -4.769e-04, 1.371e-01, 3.426e-01, 3.360e-01, 2.680e-03, 2.000e-01) * s0_0_1;
	r0 += M4(1.943e-01, -2.156e-02, -1.713e-02, 4.752e-02, 4.140e-02, 5.412e-02, 5.921e-02, -9.308e-03, 1.933e-02, 7.243e-02, -1.015e-01, 1.970e-01, 3.879e-02, -2.194e-01, -2.289e-01, -7.228e-02) * s0_0_2;
	r1 += M4(1.202e-01, -1.500e-02, 2.510e-02, 3.115e-02, -1.116e-01, -1.241e-02, 4.614e-02, -5.863e-02, 1.139e-01, -9.824e-02, 4.795e-04, 7.494e-02, -1.203e-01, 2.646e-02, 2.960e-02, -3.064e-02) * s0_0_2;
	r2 += M4(9.604e-02, 1.823e-01, -3.840e-02, 2.243e-01, 1.183e-03, -9.770e-03, 2.971e-02, 2.672e-01, 4.567e-02, -7.835e-02, -3.116e-02, 1.452e-02, -1.509e-03, -8.627e-02, 7.598e-02, -7.251e-02) * s0_0_2;
	r3 += M4(1.067e-01, -1.264e-02, 1.004e-01, -8.163e-02, -1.368e-01, -2.862e-02, 5.073e-02, -2.175e-01, 2.858e-01, -4.341e-02, -2.656e-02, 1.531e-01, 2.914e-01, -3.680e-02, -4.131e-02, 2.084e-01) * s0_0_2;
	r0 += M4(-7.336e-02, -1.081e-01, -3.054e-02, 2.190e-02, -2.185e-01, -4.186e-02, 6.332e-02, -1.183e-01, 3.828e-02, 2.074e-01, 8.707e-02, 5.020e-02, -4.143e-02, 5.243e-02, -1.216e-01, -2.260e-01) * s0_1_0;
	r1 += M4(4.826e-02, 7.628e-02, -6.194e-02, 4.920e-02, 1.248e-01, -2.765e-02, 1.009e-01, -1.178e-01, -1.391e-01, -2.330e-03, 3.945e-02, 6.636e-02, -1.141e-01, 5.109e-02, -8.245e-02, 1.993e-01) * s0_1_0;
	r2 += M4(9.639e-02, -6.269e-02, -4.027e-02, 1.451e-01, 1.249e-01, 7.308e-02, -5.513e-02, -1.690e-02, 2.127e-02, 7.746e-02, -4.951e-02, -1.580e-02, 1.170e-01, -2.874e-02, -7.301e-02, -9.226e-02) * s0_1_0;
	r3 += M4(1.775e-01, 7.300e-02, 6.826e-03, -3.527e-02, -2.222e-01, 3.735e-01, 1.005e-01, -1.285e-01, 2.793e-01, -8.482e-02, -5.288e-02, 2.334e-01, -1.208e-01, -4.343e-01, 4.587e-02, -9.522e-03) * s0_1_0;
	r0 += M4(-5.097e-02, -8.369e-02, 2.215e-01, -9.255e-02, 4.161e-01, -2.597e-01, -2.531e-01, 2.618e-02, 2.630e-01, 1.366e-01, 2.539e-01, -8.568e-02, 3.131e-03, 7.203e-02, -4.701e-02, 2.779e-01) * s0_1_1;
	r1 += M4(-1.476e-02, 8.528e-02, 7.689e-02, -2.537e-02, -8.092e-02, 1.480e-01, -3.232e-02, 8.200e-01, -9.790e-02, 1.216e-02, 2.422e-01, -3.416e-02, -7.501e-02, -1.332e-01, -5.135e-02, 7.722e-02) * s0_1_1;
	r2 += M4(-8.917e-02, 1.942e-01, 2.552e-02, -2.687e-02, -7.793e-01, 4.047e-01, 4.108e-01, 4.513e-01, 1.851e-01, 5.238e-01, 2.114e-01, -1.390e-01, 1.291e-01, -4.412e-03, 6.261e-02, -3.897e-02) * s0_1_1;
	r3 += M4(9.491e-02, 5.341e-01, 5.816e-02, -1.523e-01, -9.661e-02, -3.769e-01, -4.054e-02, 1.866e-01, 4.882e-01, -1.318e-01, -5.886e-02, 2.146e-02, -1.985e-01, -8.136e-03, 5.209e-01, -3.387e-01) * s0_1_1;
	r0 += M4(1.802e-01, -1.566e-01, -2.117e-01, -1.499e-01, -7.381e-02, -1.025e-01, 1.057e-01, 1.472e-02, 6.743e-02, 1.320e-01, -8.694e-02, -3.927e-02, -1.446e-01, -4.688e-02, 2.188e-01, 2.224e-02) * s0_1_2;
	r1 += M4(1.342e-01, -4.033e-02, -6.319e-02, 2.577e-01, -1.656e-01, -1.508e-01, -3.775e-03, -2.336e-01, 4.627e-02, 1.326e-03, 1.028e-01, -3.498e-02, 4.427e-02, 2.675e-01, 9.332e-03, -2.813e-02) * s0_1_2;
	r2 += M4(2.173e-01, -6.264e-03, -7.344e-02, -1.998e-01, -8.491e-02, -1.502e-02, 1.786e-02, -4.425e-02, 2.860e-01, 6.286e-02, 4.987e-02, 1.012e-01, 1.680e-01, 9.210e-02, -2.642e-02, 1.206e-01) * s0_1_2;
	r3 += M4(6.701e-03, -2.421e-01, -2.991e-03, 3.524e-01, 3.656e-02, 3.239e-02, -2.488e-01, -1.429e-01, 4.583e-01, -1.231e-02, 1.017e-01, -1.935e-01, -1.442e-01, 5.921e-02, -3.454e-02, -3.010e-01) * s0_1_2;
	r0 += M4(-8.808e-03, -1.991e-02, 4.729e-02, 7.259e-02, -4.984e-02, -1.440e-02, 3.731e-02, 4.272e-02, -3.014e-02, 2.120e-01, 1.256e-01, -2.285e-01, -5.091e-02, -1.180e-01, -4.744e-02, -2.406e-02) * s0_2_0;
	r1 += M4(-1.720e-02, 7.105e-02, 1.559e-02, -3.745e-01, 7.958e-02, 1.012e-01, 3.173e-02, -6.098e-02, -1.965e-01, 1.962e-02, 4.501e-02, 2.900e-01, 5.097e-02, -4.084e-02, -1.969e-02, -6.217e-03) * s0_2_0;
	r2 += M4(9.283e-02, -1.694e-02, 2.712e-02, -2.085e-01, 8.629e-02, -3.109e-02, 4.439e-02, -5.752e-03, 3.193e-02, -1.325e-01, -5.809e-02, 3.809e-02, -2.685e-02, -4.612e-02, 1.276e-02, -1.229e-01) * s0_2_0;
	r3 += M4(1.193e-01, 2.489e-01, 1.134e-02, 1.055e-03, 1.684e-01, -3.671e-02, 4.226e-02, -1.063e-01, 3.645e-01, -2.977e-02, -3.206e-03, 1.129e-01, -1.336e-01, -4.782e-02, 3.823e-02, 2.189e-01) * s0_2_0;
	r0 += M4(-3.850e-02, -6.653e-02, -1.314e-01, 1.892e-01, -1.147e-01, 2.497e-01, 1.575e-01, -4.242e-02, 2.984e-01, 2.598e-01, 3.433e-01, -2.973e-01, 6.595e-02, 8.193e-02, 1.126e-02, 6.419e-02) * s0_2_1;
	r1 += M4(4.963e-02, 6.044e-02, 5.924e-02, -1.553e-01, 2.149e-01, 1.624e-01, 7.884e-02, -2.042e-01, 3.917e-01, 1.842e-01, 1.310e-01, 3.904e-01, -6.118e-02, -2.626e-03, 3.221e-02, -1.318e-01) * s0_2_1;
	r2 += M4(2.623e-01, 1.708e-02, 4.532e-02, 1.235e-01, 1.577e-01, 1.226e-01, 2.286e-02, 3.072e-02, -1.492e-02, -7.363e-04, 1.616e-01, -1.641e-01, 1.880e-01, 5.775e-03, 2.152e-03, 1.042e-01) * s0_2_1;
	r3 += M4(-3.371e-01, 3.235e-01, 9.170e-02, -1.514e-01, -1.035e-01, 3.697e-02, -3.834e-01, 1.213e-01, 1.441e-01, 3.975e-01, -3.429e-01, 1.339e-01, 1.407e-01, -2.539e-01, 4.726e-02, 2.306e-01) * s0_2_1;
	r0 += M4(7.378e-02, -9.410e-02, -4.776e-02, 4.825e-03, 8.839e-02, -4.615e-02, 1.757e-01, -1.264e-02, -5.922e-02, -2.190e-02, -4.416e-02, -1.180e-01, 1.430e-02, -4.539e-02, -4.087e-02, 2.761e-02) * s0_2_2;
	r1 += M4(2.647e-01, -7.651e-03, -6.164e-03, -4.848e-02, -4.667e-02, 4.643e-02, 5.889e-02, -1.722e-01, -1.034e-01, -1.395e-01, 3.466e-03, 1.406e-01, -1.622e-02, 5.879e-03, 2.714e-02, 4.937e-02) * s0_2_2;
	r2 += M4(1.049e-01, 1.294e-01, -1.946e-02, 4.210e-02, 1.001e-01, -1.207e-02, -1.551e-02, 1.227e-01, 1.564e-01, -1.179e-01, -5.195e-02, -2.354e-01, 3.400e-02, -1.817e-02, 1.052e-02, 4.582e-02) * s0_2_2;
	r3 += M4(-8.108e-02, 1.180e-01, 1.343e-01, -1.263e-02, 5.189e-02, -9.058e-02, -7.475e-02, -1.632e-01, 4.102e-01, 9.774e-03, -2.725e-01, 5.138e-01, 3.351e-02, 2.812e-01, 2.367e-01, -1.218e-01) * s0_2_2;
	r0 += M4(-6.592e-02, 1.705e-02, 1.126e-01, 2.012e-02, 1.477e-01, -8.667e-02, 8.522e-02, -3.600e-02, 2.810e-02, 1.708e-02, -1.665e-01, -5.233e-03, -8.235e-02, 7.216e-02, 1.392e-01, 4.899e-03) * s1_0_0;
	r1 += M4(-2.870e-03, -6.336e-02, -5.336e-03, -3.092e-02, 4.694e-02, 8.324e-02, -8.730e-02, -1.551e-01, -1.593e-01, -3.772e-02, 9.027e-02, 5.125e-02, 4.981e-02, 6.815e-02, 1.383e-03, -9.101e-03) * s1_0_0;
	r2 += M4(-4.773e-03, 4.803e-02, 1.548e-02, -7.500e-02, 2.732e-01, -1.280e-01, -1.720e-02, 1.194e-01, -5.091e-03, 1.186e-01, -3.499e-02, 1.091e-01, -8.877e-02, -1.559e-02, 6.530e-02, -9.447e-03) * s1_0_0;
	r3 += M4(-1.390e-01, -4.878e-03, -1.835e-02, 4.823e-02, 3.176e-01, -3.311e-01, 1.341e-01, -7.846e-02, -2.436e-02, 7.025e-02, -3.971e-02, -1.867e-02, 1.204e-01, -5.984e-02, 8.828e-02, 1.702e-01) * s1_0_0;
	r0 += M4(-1.952e-02, -1.005e-01, 2.269e-02, -3.131e-02, 1.340e-01, 5.151e-02, 1.256e-01, 8.146e-03, 1.687e-01, 2.583e-01, 1.990e-02, 1.310e-03, -2.694e-01, -3.289e-01, -3.096e-01, -1.465e-02) * s1_0_1;
	r1 += M4(-8.739e-02, -2.971e-02, 5.066e-02, -1.581e-02, -9.085e-02, 4.070e-02, 3.947e-02, -1.853e-01, 1.939e-01, 4.219e-02, -8.601e-02, 1.778e-01, 3.847e-02, 6.053e-02, -2.205e-02, -3.358e-01) * s1_0_1;
	r2 += M4(-1.551e-01, 1.122e-01, 1.105e-01, 4.058e-02, 1.739e-01, 7.295e-02, -5.397e-02, 7.268e-02, 3.193e-01, -4.698e-01, -1.242e-01, -3.703e-01, -3.120e-01, 5.364e-01, 1.060e-01, 1.048e-01) * s1_0_1;
	r3 += M4(2.179e-02, -4.940e-02, -1.014e-01, 1.520e-01, -3.175e-01, 2.904e-02, 1.277e-01, -2.666e-01, 5.763e-02, 7.765e-02, 1.146e-01, 5.782e-02, 3.839e-01, -5.918e-02, -2.121e-01, -2.194e-01) * s1_0_1;
	r0 += M4(-2.653e-03, 1.313e-01, 4.257e-02, 9.937e-03, -8.987e-02, 7.591e-03, 2.549e-02, 6.822e-02, -7.488e-02, -1.909e-01, -2.356e-02, -2.800e-02, -3.383e-02, 6.578e-02, -1.173e-01, -1.728e-02) * s1_0_2;
	r1 += M4(-4.370e-02, -4.909e-02, 3.991e-02, 1.447e-01, -7.834e-02, -5.622e-02, 2.817e-02, -8.326e-02, -1.018e-01, 5.404e-02, -7.693e-02, -9.316e-02, 1.304e-01, -3.823e-02, 1.021e-02, -5.839e-02) * s1_0_2;
	r2 += M4(-3.932e-02, 1.411e-01, 5.276e-02, 2.274e-01, 3.862e-02, 3.541e-02, -1.615e-02, -1.688e-01, 4.688e-02, -1.924e-01, -7.219e-02, -2.488e-01, -5.951e-02, -4.453e-02, 6.277e-02, 2.825e-01) * s1_0_2;
	r3 += M4(-2.273e-01, -2.917e-02, 3.314e-02, -1.806e-02, -1.241e-01, 1.544e-03, 3.152e-02, 1.200e-02, 2.689e-01, -2.108e-02, -7.661e-02, 9.831e-02, -1.818e-01, -1.257e-02, 2.010e-01, -3.014e-01) * s1_0_2;
	r0 += M4(-5.323e-02, 3.349e-02, 2.304e-01, -1.209e-01, 1.433e-01, -1.870e-01, -7.599e-02, 1.358e-01, 2.093e-02, 7.846e-02, -1.073e-01, -3.423e-02, -4.686e-03, 1.214e-01, 2.667e-02, -3.594e-02) * s1_1_0;
	r1 += M4(-2.993e-01, -7.796e-02, -2.008e-02, -1.941e-01, 1.858e-01, -8.965e-02, -5.007e-02, -4.006e-01, 1.491e-01, 2.453e-02, 4.638e-02, 2.861e-01, -8.154e-02, 7.653e-04, -4.722e-02, -1.899e-01) * s1_1_0;
	r2 += M4(-9.654e-02, -1.047e-01, -9.162e-02, 2.956e-02, 3.706e-01, 7.500e-02, 4.710e-02, -2.241e-01, -3.945e-02, 1.848e-02, -2.044e-02, -2.872e-02, 1.800e-01, -1.606e-01, -1.250e-01, -8.226e-02) * s1_1_0;
	r3 += M4(5.112e-02, -2.733e-02, -8.078e-02, -6.389e-02, 2.743e-01, -3.679e-01, 7.894e-02, -1.373e-01, -1.358e-01, 5.669e-02, 3.137e-02, 1.996e-01, 5.306e-02, -3.882e-01, -5.367e-02, -2.171e-01) * s1_1_0;
	r0 += M4(6.489e-01, 2.002e-01, 4.455e-01, -2.754e-04, -2.870e-01, 1.933e-01, 3.037e-02, -1.320e-01, -6.192e-03, -1.826e-02, -1.718e-01, -1.723e-01, 2.618e-01, 5.110e-01, 2.510e-01, 4.068e-02) * s1_1_1;
	r1 += M4(-1.987e-01, 7.740e-02, 1.776e-01, 1.003e-01, -3.155e-01, -4.240e-02, 1.225e-02, -2.343e-01, 4.366e-01, -3.955e-01, 1.232e-01, -1.483e-01, 2.399e-02, 5.048e-01, 8.140e-01, 3.640e-01) * s1_1_1;
	r2 += M4(-7.797e-01, 3.842e-01, 1.038e-01, 3.079e-01, 3.061e-01, -1.985e-01, -6.344e-02, 3.146e-01, 8.970e-01, 8.112e-02, 7.416e-02, 5.803e-02, 2.483e-02, -5.067e-01, -3.289e-01, -6.545e-02) * s1_1_1;
	r3 += M4(3.250e-01, -1.370e-01, -1.000e+00, -3.891e-02, -1.000e+00, -4.131e-03, 1.243e-01, 1.938e-02, -6.572e-01, 7.936e-02, -9.977e-02, 2.321e-02, -2.417e-01, 6.883e-01, -9.644e-01, -3.662e-01) * s1_1_1;
	r0 += M4(4.102e-02, 5.118e-03, 9.758e-02, 2.577e-03, 5.092e-02, 1.435e-03, 1.055e-01, 4.516e-02, -7.390e-02, -5.495e-02, -4.555e-02, 1.351e-01, -7.156e-02, 2.422e-02, -2.155e-01, -3.905e-02) * s1_1_2;
	r1 += M4(-4.227e-01, -7.239e-02, -4.384e-03, -6.219e-02, 1.952e-01, -6.805e-02, -6.565e-03, 4.877e-02, -2.608e-01, 1.124e-01, 1.727e-02, 5.726e-02, -8.907e-02, 2.095e-01, -1.364e-02, -5.897e-02) * s1_1_2;
	r2 += M4(-6.576e-02, -2.450e-01, -7.718e-02, 1.184e-01, -7.061e-02, -2.766e-02, -4.091e-02, -9.881e-02, 1.707e-01, 2.746e-01, 3.129e-02, 1.129e-01, -4.875e-02, -4.434e-02, 5.412e-02, -1.198e-01) * s1_1_2;
	r3 += M4(-4.775e-01, -1.115e-01, 4.941e-02, 1.134e-01, -3.153e-02, 4.408e-02, 1.421e-01, 2.368e-02, 4.470e-01, 2.560e-02, -1.985e-02, -1.587e-02, 2.305e-02, -8.893e-02, -2.438e-01, 5.752e-02) * s1_1_2;
	r0 += M4(6.470e-04, 1.076e-03, 1.007e-01, 1.078e-01, 7.978e-02, -1.489e-01, -3.677e-02, -7.195e-02, -6.472e-02, 5.525e-02, -6.927e-02, -1.395e-02, 9.432e-02, -8.810e-02, -1.145e-01, 2.002e-02) * s1_2_0;
	r1 += M4(-9.268e-02, -1.389e-02, -2.057e-02, 3.893e-03, 6.047e-02, -7.153e-02, -3.029e-02, -1.678e-01, 7.785e-03, -7.172e-02, -1.820e-02, 7.860e-02, 3.176e-02, -9.484e-02, -1.380e-02, 6.914e-02) * s1_2_0;
	r2 += M4(-1.068e-01, -1.519e-01, 1.149e-02, 6.271e-02, 3.990e-02, 1.249e-01, -3.409e-02, -3.953e-02, 3.633e-02, 2.447e-02, 1.126e-03, -1.426e-02, -2.352e-01, 6.948e-02, 5.873e-02, 3.035e-02) * s1_2_0;
	r3 += M4(6.234e-02, -2.143e-01, 6.189e-02, -9.929e-02, 4.306e-01, -4.754e-01, -3.681e-02, -1.541e-01, -6.871e-02, 6.814e-02, 6.610e-02, 1.602e-01, -1.366e-01, 1.103e-01, 5.818e-02, 4.782e-02) * s1_2_0;
	r0 += M4(2.998e-01, 1.947e-01, 3.096e-01, -1.537e-01, -3.073e-02, -1.143e-01, 1.571e-01, 1.779e-01, 8.462e-02, -1.870e-01, -1.088e-01, 1.128e-01, -2.395e-02, 1.412e-01, -7.323e-02, -1.231e-01) * s1_2_1;
	r1 += M4(2.155e-01, 3.174e-01, 1.554e-01, 4.156e-01, -1.656e-01, -1.004e-01, -4.108e-02, -2.814e-01, 3.186e-02, -9.995e-02, -1.127e-02, 1.296e-01, -1.323e-01, -6.152e-01, -8.569e-02, -5.494e-03) * s1_2_1;
	r2 += M4(-1.000e+00, -7.984e-02, 1.802e-01, 3.943e-02, 5.065e-01, 2.770e-01, -2.372e-02, -1.045e-01, 3.340e-01, 1.603e-01, -1.825e-03, -5.166e-02, -2.524e-01, 5.873e-02, -6.348e-03, -1.621e-02) * s1_2_1;
	r3 += M4(2.209e-01, 1.251e-01, -6.307e-01, 3.808e-01, -5.696e-02, -2.607e-01, -6.323e-02, 2.797e-01, 1.467e-01, -1.030e-01, 8.666e-02, -2.501e-01, -2.600e-01, 4.000e-02, 3.085e-01, 4.028e-01) * s1_2_1;
	r0 += M4(-3.635e-02, -1.157e-01, -3.087e-02, 1.722e-02, -5.326e-02, 1.303e-01, 1.566e-01, 1.588e-01, -8.015e-02, 2.510e-02, -3.211e-02, 7.689e-03, 2.204e-02, -5.855e-02, -1.535e-01, 3.581e-02) * s1_2_2;
	r1 += M4(-6.154e-04, 1.867e-01, 9.237e-03, -4.077e-02, -1.213e-01, -5.168e-02, 4.237e-02, -1.188e-01, -1.589e-01, -9.950e-02, -4.699e-02, -2.860e-02, 2.280e-01, -2.447e-01, -2.669e-03, 1.066e-01) * s1_2_2;
	r2 += M4(4.597e-02, -2.021e-01, -4.344e-02, -2.020e-02, 6.141e-02, 6.215e-02, 3.934e-02, 5.771e-02, 4.957e-02, -2.535e-03, -1.401e-02, -9.137e-02, -1.598e-01, 1.385e-01, 3.743e-03, -1.256e-01) * s1_2_2;
	r3 += M4(-1.046e-01, -2.017e-01, -2.459e-02, 1.487e-02, 1.378e-01, 1.650e-01, 2.552e-02, -3.589e-01, -4.100e-02, 2.529e-01, -6.743e-02, 7.795e-02, 3.494e-02, 4.928e-02, 1.566e-01, -2.840e-01) * s1_2_2;
	r0 += V4(1.254e-02, 1.412e-02, -9.490e-03, -7.843e-03);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(8.865e-03, 1.325e-02, -7.967e-03, 1.303e-03);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(-2.034e-03, 1.288e-02, 6.412e-03, 8.515e-03);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(1.287e-02, -9.545e-03, 1.203e-02, 4.862e-03);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC [CuNNy_4x16] -conv3
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv2
//!BIND LUMA
//!SAVE conv3
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv2_pt;
			V4 sr0 = V4(conv2_gather(p, 0));
			V4 sg0 = V4(conv2_gather(p, 1));
			V4 sb0 = V4(conv2_gather(p, 2));
			V4 sa0 = V4(conv2_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(-1.117e-01, 3.872e-02, -3.184e-02, 1.556e-02, -4.040e-02, -1.391e-01, -1.305e-03, 1.300e-01, 4.116e-02, -1.164e-01, 1.230e-01, -1.260e-01, 1.588e-02, -7.638e-02, 3.186e-02, 1.983e-02) * s0_0_0;
	r1 += M4(-1.941e-02, 3.035e-02, 2.837e-02, 4.050e-02, -7.170e-03, 3.774e-02, -4.236e-02, -4.155e-02, 4.788e-02, -1.009e-01, -8.533e-02, -3.404e-03, 1.508e-02, -3.270e-02, 7.289e-02, -7.198e-02) * s0_0_0;
	r2 += M4(4.723e-02, -6.652e-02, 9.501e-02, 2.262e-02, -6.723e-02, 1.847e-01, -2.802e-02, 3.002e-02, 6.419e-02, -1.264e-01, 2.287e-01, -1.088e-01, -2.047e-03, -1.179e-01, -1.538e-01, -6.752e-02) * s0_0_0;
	r3 += M4(1.534e-02, 7.949e-02, -2.811e-02, -7.904e-05, 6.321e-02, -8.364e-02, 2.556e-02, 1.392e-01, -1.439e-01, 1.224e-01, 2.456e-02, -1.081e-01, 1.698e-02, -1.107e-02, 4.282e-03, -1.064e-01) * s0_0_0;
	r0 += M4(-1.636e-01, -1.568e-02, -2.659e-02, -4.860e-02, -1.108e-01, 8.331e-03, -3.634e-02, -2.317e-02, -2.084e-02, 8.392e-03, 2.588e-01, 2.537e-02, 6.370e-02, 5.962e-02, 5.296e-02, 6.016e-02) * s0_0_1;
	r1 += M4(-3.835e-02, 2.549e-02, 7.150e-02, 4.095e-02, -1.471e-01, -1.261e-01, -1.227e-01, 5.393e-03, 9.401e-02, 2.163e-01, -1.388e-01, -1.600e-01, 1.621e-01, 1.270e-01, 3.142e-02, 9.546e-02) * s0_0_1;
	r2 += M4(2.476e-02, -6.610e-02, 4.265e-02, -8.089e-02, 3.518e-02, 1.577e-01, -3.071e-01, 6.968e-02, 6.238e-02, 1.639e-01, 3.040e-01, -3.768e-02, 3.179e-02, -2.133e-01, -2.329e-01, -1.806e-03) * s0_0_1;
	r3 += M4(5.668e-02, -1.338e-01, -4.459e-03, 3.425e-02, -1.237e-02, -1.872e-01, -1.362e-02, -2.269e-02, 4.569e-03, 1.517e-01, 1.236e-01, 2.704e-01, 8.304e-02, -1.790e-02, 1.590e-01, -1.273e-02) * s0_0_1;
	r0 += M4(3.479e-02, 1.209e-01, -6.340e-04, -4.638e-02, -1.108e-01, -3.680e-02, -6.421e-02, 2.082e-02, -1.180e-01, -1.556e-01, -8.183e-02, -5.509e-02, 1.826e-01, 5.172e-02, 1.000e-01, -7.659e-02) * s0_0_2;
	r1 += M4(4.451e-03, 1.016e-01, -6.847e-02, 1.247e-01, -1.194e-01, -1.665e-01, 4.067e-02, -2.189e-02, -3.624e-02, -1.132e-02, 7.400e-02, -1.126e-01, 3.859e-02, 2.332e-01, -5.180e-02, -3.794e-02) * s0_0_2;
	r2 += M4(-2.015e-02, 6.380e-04, 2.193e-01, 9.662e-04, 3.342e-02, 1.077e-01, -5.089e-02, 2.480e-01, -9.201e-02, -9.134e-02, -6.547e-02, -2.363e-01, 5.996e-02, -1.096e-02, 6.324e-02, -1.052e-01) * s0_0_2;
	r3 += M4(-7.281e-03, -4.455e-02, 3.317e-02, 6.399e-02, -5.565e-02, -1.530e-01, -1.752e-02, -4.071e-02, 2.088e-02, 2.368e-01, -6.620e-02, -1.217e-01, 9.157e-02, 4.335e-02, 3.083e-01, 9.101e-02) * s0_0_2;
	r0 += M4(-1.177e-02, 1.180e-02, 1.048e-01, 3.815e-02, 4.294e-02, -7.496e-02, 6.523e-02, -2.579e-01, -2.076e-02, 6.984e-02, -5.870e-02, 1.799e-01, -2.835e-02, 1.679e-01, 1.484e-02, -9.250e-02) * s0_1_0;
	r1 += M4(8.367e-02, -5.901e-02, 5.748e-02, -1.018e-01, 1.109e-01, -1.197e-01, -8.351e-03, 2.209e-01, -5.142e-02, -1.293e-01, 3.229e-02, -7.674e-02, -1.595e-01, -2.377e-01, -6.508e-02, 1.008e-01) * s0_1_0;
	r2 += M4(6.247e-02, -1.395e-01, 8.390e-02, -3.452e-02, 6.401e-03, -2.560e-01, 2.692e-02, -1.085e-01, -9.629e-02, 1.322e-01, 3.189e-01, 1.643e-01, 1.042e-01, 1.208e-01, 1.460e-01, 2.125e-01) * s0_1_0;
	r3 += M4(3.249e-02, -4.794e-02, 1.100e-02, 8.262e-02, -2.206e-02, 1.294e-01, -3.379e-02, -6.536e-02, 5.377e-02, 1.772e-02, -5.920e-02, 7.501e-03, -1.837e-02, 2.440e-02, -7.348e-02, -2.180e-01) * s0_1_0;
	r0 += M4(1.257e-01, -3.223e-01, -4.295e-02, 4.072e-01, 2.039e-01, 9.753e-02, 2.466e-01, -4.526e-02, -1.297e-02, -7.042e-02, 1.973e-02, -3.154e-01, -2.045e-01, 5.424e-02, 2.175e-01, 2.061e-01) * s0_1_1;
	r1 += M4(2.578e-01, 8.537e-02, -1.172e-01, 1.699e-01, 1.653e-01, 2.829e-01, -7.149e-02, -1.100e-01, -2.075e-01, -1.586e-01, -1.076e-01, -2.563e-01, -1.722e-01, -6.795e-01, -3.055e-01, -4.962e-01) * s0_1_1;
	r2 += M4(7.424e-02, -2.044e-01, 4.855e-02, -2.887e-01, 1.987e-01, -6.172e-02, -7.810e-02, -2.101e-01, -4.171e-02, 1.304e-01, 2.210e-01, 7.139e-02, 2.736e-01, 6.336e-02, 4.444e-02, 4.516e-01) * s0_1_1;
	r3 += M4(4.714e-02, 3.408e-01, 2.567e-01, -1.102e-01, -1.232e-01, 1.288e-01, 2.279e-01, 1.524e-01, -1.530e-01, 2.036e-01, 1.459e-01, -1.293e-01, 2.330e-02, 1.279e-03, -7.413e-02, 9.722e-02) * s0_1_1;
	r0 += M4(7.739e-02, 1.895e-01, 1.916e-01, 5.281e-02, -3.728e-02, 7.673e-02, -5.312e-02, -9.349e-02, 8.227e-02, -1.402e-01, 4.144e-02, 1.456e-01, 2.339e-01, -1.042e-01, -8.296e-03, -3.866e-02) * s0_1_2;
	r1 += M4(6.813e-02, 3.147e-01, -2.202e-01, 1.765e-01, 7.560e-02, 7.566e-02, 1.898e-01, -2.102e-01, -2.325e-03, -5.760e-02, -6.364e-02, 1.173e-01, 4.595e-02, 6.414e-02, -4.104e-02, 1.462e-01) * s0_1_2;
	r2 += M4(-3.135e-02, -2.237e-01, 2.149e-01, -2.753e-01, 5.115e-02, -1.212e-01, 2.900e-01, -1.500e-01, -9.318e-02, 3.370e-02, -7.601e-02, 3.946e-02, -1.362e-01, 8.862e-02, -1.226e-01, -1.359e-01) * s0_1_2;
	r3 += M4(7.369e-02, 5.768e-02, 1.720e-01, 2.388e-01, -2.589e-02, -2.024e-01, -6.196e-02, -2.869e-02, -1.179e-01, 3.646e-02, -5.116e-02, -1.628e-01, 2.365e-01, -1.809e-02, 4.033e-01, 2.368e-01) * s0_1_2;
	r0 += M4(-2.947e-02, -4.916e-02, -2.331e-02, 1.010e-01, -1.327e-02, 8.111e-02, -9.935e-03, 1.052e-01, -9.350e-02, -9.486e-02, -2.630e-02, 7.277e-02, 1.252e-03, -8.112e-02, 1.187e-01, -1.296e-01) * s0_2_0;
	r1 += M4(2.375e-02, -6.126e-02, -6.110e-02, 1.716e-02, -1.163e-01, -1.388e-01, 4.500e-02, -5.563e-03, -2.793e-02, -7.322e-02, -5.937e-02, -6.328e-02, -6.841e-02, -1.575e-01, -7.818e-02, 8.245e-02) * s0_2_0;
	r2 += M4(-1.161e-02, 9.834e-02, -3.136e-02, 7.166e-02, 7.848e-02, 1.864e-01, 1.067e-01, 2.483e-01, 4.508e-02, 2.955e-02, 6.559e-02, 3.231e-02, 6.958e-02, -3.968e-03, 2.473e-02, 5.108e-02) * s0_2_0;
	r3 += M4(4.215e-02, 9.010e-02, -3.018e-02, -3.530e-03, 7.356e-02, 8.372e-02, -3.767e-02, -1.361e-01, -6.410e-02, 1.359e-01, 8.405e-03, 1.193e-01, 1.612e-02, 5.652e-02, 4.511e-02, -5.896e-02) * s0_2_0;
	r0 += M4(-1.251e-01, 4.755e-02, 4.516e-02, -1.085e-01, -4.331e-02, -1.462e-01, 1.842e-01, 1.619e-01, 5.168e-02, -2.098e-01, -2.095e-02, -4.160e-01, 5.683e-02, 8.762e-02, 2.017e-01, 5.271e-02) * s0_2_1;
	r1 += M4(-1.412e-01, -1.574e-01, 3.103e-02, -2.187e-01, -4.263e-02, -2.405e-01, -1.811e-01, -3.119e-01, 1.361e-01, -9.211e-02, 1.882e-01, 5.754e-01, -1.914e-02, 5.519e-02, -1.975e-01, 5.342e-03) * s0_2_1;
	r2 += M4(1.132e-01, 1.421e-01, 3.777e-01, 2.590e-01, 1.217e-01, -6.466e-02, -7.983e-02, 9.819e-02, -7.592e-02, 1.718e-01, -4.758e-02, -2.746e-01, 1.247e-01, 5.887e-02, -1.660e-01, -1.937e-02) * s0_2_1;
	r3 += M4(-1.978e-02, 5.061e-02, -6.299e-03, -4.553e-02, 1.822e-02, 3.976e-02, 9.597e-02, 1.789e-01, -1.938e-01, -1.672e-01, -1.623e-01, -4.024e-02, 6.855e-02, -1.667e-01, 1.338e-02, -8.229e-02) * s0_2_1;
	r0 += M4(-5.678e-03, -1.471e-01, 2.181e-02, -3.876e-02, 5.781e-02, -4.668e-02, 1.199e-02, -8.091e-02, -5.340e-02, -3.254e-02, -5.504e-02, 8.959e-02, -3.694e-02, 7.348e-02, -1.647e-02, 8.223e-02) * s0_2_2;
	r1 += M4(-3.622e-02, -1.130e-01, -1.692e-02, -2.278e-01, -1.784e-02, -1.222e-05, 5.916e-03, -1.212e-02, 7.078e-03, -1.341e-01, 1.880e-02, 7.207e-03, 1.482e-02, -4.537e-02, -5.906e-02, -7.300e-02) * s0_2_2;
	r2 += M4(-7.503e-03, 1.858e-01, 2.377e-01, 2.703e-02, 1.141e-02, -4.353e-02, 1.987e-01, -1.938e-02, 2.094e-02, -8.078e-02, -1.453e-01, -3.533e-02, 4.961e-02, 2.050e-02, -1.070e-01, 1.371e-01) * s0_2_2;
	r3 += M4(1.008e-01, 1.485e-01, 4.823e-02, 3.328e-02, -1.482e-02, -2.138e-02, 1.298e-02, -7.498e-02, -8.097e-02, -1.327e-01, -1.122e-01, -2.475e-01, 2.353e-02, -8.674e-02, -9.425e-03, 1.538e-01) * s0_2_2;
	r0 += M4(1.850e-02, 1.644e-01, -9.793e-02, -2.216e-02, 9.376e-02, -2.003e-01, 2.656e-01, -8.030e-02, 1.295e-01, 1.620e-01, -5.239e-02, -8.500e-02, 2.296e-02, -1.773e-02, 2.242e-03, 1.968e-03) * s1_0_0;
	r1 += M4(-2.197e-02, -3.070e-02, -5.146e-03, -1.901e-01, 1.128e-01, -8.523e-02, 7.510e-02, 7.408e-02, 6.064e-03, 6.954e-02, 1.106e-01, -3.401e-02, -1.290e-02, -2.719e-02, -8.035e-02, -3.513e-02) * s1_0_0;
	r2 += M4(5.694e-02, 1.923e-01, 3.082e-01, 2.071e-01, -4.288e-02, -3.576e-01, 1.653e-02, -7.298e-02, -1.516e-02, -1.931e-01, -1.465e-01, -3.444e-03, 1.923e-02, 4.710e-04, -3.485e-01, -3.281e-02) * s1_0_0;
	r3 += M4(2.606e-02, 8.691e-02, 5.713e-02, -5.544e-02, -2.724e-02, -2.666e-01, -7.386e-02, 2.289e-02, -5.115e-02, -1.008e-01, -2.367e-02, -1.896e-02, 1.296e-02, -6.519e-02, -4.335e-03, 2.555e-02) * s1_0_0;
	r0 += M4(5.930e-02, 1.318e-01, -3.497e-02, 2.200e-01, 1.423e-01, -1.090e-03, 2.849e-01, 7.484e-02, 2.891e-01, 2.936e-01, -9.077e-02, -2.257e-02, -2.472e-02, 2.881e-01, 1.116e-02, -1.207e-01) * s1_0_1;
	r1 += M4(-9.502e-02, 7.380e-02, -1.423e-01, -2.149e-01, 6.756e-02, 2.981e-01, -1.902e-01, 1.462e-01, 6.754e-02, -2.993e-02, 2.548e-01, 7.082e-02, -4.031e-02, 2.696e-02, -3.614e-02, -3.690e-02) * s1_0_1;
	r2 += M4(-1.706e-02, 2.045e-01, 2.919e-01, 4.227e-01, -3.433e-02, -1.484e-01, 9.022e-03, 1.326e-02, 2.906e-03, 1.604e-02, -8.435e-02, 1.850e-01, -3.639e-02, 2.000e-02, 1.395e-01, 2.897e-01) * s1_0_1;
	r3 += M4(4.478e-02, 6.718e-02, 9.453e-02, 3.707e-02, 6.929e-03, 2.635e-02, 1.313e-01, 2.183e-01, 1.171e-01, 8.898e-02, 4.415e-02, -1.046e-01, -5.246e-02, -1.213e-01, 3.652e-02, -5.134e-02) * s1_0_1;
	r0 += M4(-1.917e-02, -1.217e-01, -2.909e-02, 5.667e-02, -6.895e-02, 8.742e-02, 1.169e-02, -1.603e-01, 1.567e-01, 6.465e-02, 7.323e-02, 2.540e-01, 2.112e-02, -1.607e-02, 3.501e-02, 1.257e-01) * s1_0_2;
	r1 += M4(-3.866e-02, -1.233e-01, -4.453e-02, 9.779e-03, -3.039e-02, -7.402e-02, 1.031e-02, 3.456e-02, 1.331e-01, 5.388e-02, -1.190e-01, 3.584e-02, 4.479e-03, -1.153e-04, -4.372e-02, -8.493e-02) * s1_0_2;
	r2 += M4(2.894e-02, 1.943e-01, -6.668e-02, 1.433e-01, 2.929e-02, -7.740e-02, 2.026e-01, -1.572e-02, 4.835e-02, -1.223e-01, -5.210e-02, 3.701e-02, 5.510e-04, 1.183e-01, -4.892e-01, 1.156e-01) * s1_0_2;
	r3 += M4(3.408e-02, 6.375e-02, -6.601e-03, 5.856e-02, -6.241e-02, -1.567e-01, -7.572e-02, -5.562e-02, -1.374e-01, -2.499e-02, -1.222e-02, -1.356e-01, 6.162e-02, 5.946e-02, 1.274e-01, 1.030e-01) * s1_0_2;
	r0 += M4(-2.008e-02, 2.463e-02, 4.906e-02, -4.569e-02, -3.039e-02, 1.194e-01, -1.281e-01, -3.016e-02, 8.316e-02, 3.211e-02, -1.220e-01, -3.885e-02, 3.583e-02, -8.406e-02, -1.176e-01, -9.977e-02) * s1_1_0;
	r1 += M4(3.977e-02, -6.953e-03, 1.586e-01, -8.939e-02, -1.450e-01, -2.595e-01, -1.447e-01, 1.296e-01, -1.041e-02, 1.289e-01, -4.669e-04, 5.603e-02, 1.511e-03, -1.049e-01, 1.893e-02, 1.771e-02) * s1_1_0;
	r2 += M4(3.564e-02, -5.205e-02, 1.431e-01, -1.882e-02, 1.493e-01, 2.567e-01, 1.268e-01, 3.194e-01, 9.989e-03, -1.261e-02, -2.464e-01, -1.595e-01, 4.807e-02, -3.104e-01, 1.077e-01, -9.845e-02) * s1_1_0;
	r3 += M4(8.526e-02, -2.157e-01, 5.873e-02, 2.114e-02, 5.143e-02, 1.798e-01, 1.347e-02, -1.851e-01, -1.323e-01, 1.762e-01, -1.123e-03, -1.143e-01, -4.443e-02, 4.001e-03, -8.154e-02, -1.060e-01) * s1_1_0;
	r0 += M4(8.573e-03, 1.948e-02, -9.126e-02, -1.228e-01, -1.298e-01, -2.285e-02, 4.542e-02, 3.020e-01, -1.219e-01, -3.289e-01, -6.493e-01, 9.982e-02, 1.364e-01, 2.300e-01, 2.559e-01, 1.557e-01) * s1_1_1;
	r1 += M4(-6.734e-02, 6.743e-03, -1.846e-01, 8.744e-02, 8.642e-02, -4.444e-01, -3.116e-01, -3.369e-01, 7.132e-01, 5.211e-01, 7.472e-01, 1.483e-01, 6.554e-02, 2.568e-01, -1.986e-01, 1.245e-01) * s1_1_1;
	r2 += M4(-3.114e-02, -5.617e-03, 4.990e-02, 5.371e-02, 1.964e-01, 3.564e-01, 2.479e-01, 4.469e-01, -4.159e-01, 3.370e-01, -6.741e-01, -4.877e-01, -1.584e-01, -1.679e-02, -6.466e-01, -2.342e-01) * s1_1_1;
	r3 += M4(8.614e-02, 4.279e-02, 1.830e-01, 2.497e-01, -2.772e-02, 2.842e-01, 5.553e-02, 2.389e-01, 5.332e-01, -3.770e-01, 1.732e-01, 3.292e-01, 7.018e-02, -1.674e-01, -7.402e-02, 3.350e-01) * s1_1_1;
	r0 += M4(6.079e-02, 5.783e-02, -1.981e-02, 6.132e-04, 4.946e-02, -3.765e-02, 1.367e-02, -2.650e-01, 1.650e-01, 2.244e-01, 1.580e-01, 2.798e-01, -8.913e-02, -5.585e-02, -9.046e-04, -1.019e-01) * s1_1_2;
	r1 += M4(8.184e-02, 1.665e-01, -5.517e-02, -1.290e-01, 8.365e-02, -7.955e-02, 1.152e-01, -1.752e-01, 1.066e-01, 1.260e-01, -3.781e-01, -4.745e-02, -6.590e-02, -1.299e-01, 1.095e-01, 1.389e-01) * s1_1_2;
	r2 += M4(-5.115e-02, -1.755e-01, 1.673e-02, -1.961e-02, -3.595e-02, 8.927e-02, 1.650e-01, -1.014e-01, 2.548e-01, -3.709e-02, -1.284e-01, 1.899e-01, -8.891e-03, -4.294e-02, -5.251e-01, -1.359e-03) * s1_1_2;
	r3 += M4(-7.983e-02, -5.641e-02, -4.837e-02, -1.299e-01, 4.645e-02, 1.616e-01, -1.902e-02, 8.742e-02, -1.896e-01, 2.532e-02, -7.181e-02, -4.051e-01, -3.864e-02, -2.941e-01, -4.837e-02, -6.475e-02) * s1_1_2;
	r0 += M4(-6.069e-02, 8.672e-02, -9.692e-02, -2.539e-02, -1.059e-02, -2.349e-02, 6.085e-03, -5.212e-02, 1.120e-02, 1.813e-01, -2.331e-02, 1.436e-02, -4.882e-02, 2.132e-02, -1.720e-02, 7.847e-02) * s1_2_0;
	r1 += M4(2.510e-02, -3.514e-02, 9.368e-03, -7.255e-02, 1.374e-02, 3.843e-02, 1.072e-01, 3.359e-02, -1.576e-01, -3.635e-02, -6.221e-02, 3.306e-02, -6.466e-03, -2.341e-02, -2.030e-02, -4.162e-02) * s1_2_0;
	r2 += M4(-1.945e-02, 9.633e-03, 2.348e-02, 2.576e-02, -9.249e-02, 2.835e-02, 5.232e-02, -5.375e-02, 1.846e-01, 4.728e-02, -5.684e-02, 1.474e-01, 1.074e-02, 6.399e-02, -3.561e-02, 1.052e-01) * s1_2_0;
	r3 += M4(6.891e-02, -9.353e-02, -1.500e-02, 2.696e-02, 9.885e-02, -7.406e-03, -4.089e-02, -2.382e-02, -4.432e-02, -8.768e-02, 1.126e-01, -1.847e-01, -4.005e-03, 1.091e-02, -4.284e-02, -4.524e-02) * s1_2_0;
	r0 += M4(-2.237e-03, 3.136e-02, -3.799e-02, 1.416e-02, -8.326e-03, -6.898e-03, 5.742e-02, 2.353e-02, -1.166e-01, 3.330e-01, -2.151e-01, 4.946e-01, 7.415e-02, -4.115e-02, 8.088e-02, -4.642e-02) * s1_2_1;
	r1 += M4(-5.521e-02, 2.186e-02, -7.828e-02, -1.871e-01, -1.382e-01, 4.911e-02, -6.893e-02, -1.821e-01, 1.362e-02, -2.609e-01, -1.964e-01, -1.271e-01, 4.398e-02, 4.393e-04, -2.184e-01, 1.587e-01) * s1_2_1;
	r2 += M4(1.347e-02, -1.554e-02, 2.538e-01, 8.615e-02, -9.497e-02, -1.486e-01, 1.685e-01, -8.482e-03, 1.915e-01, -3.162e-02, -5.003e-01, 4.837e-01, 3.647e-02, 1.207e-01, -2.524e-01, -7.897e-02) * s1_2_1;
	r3 += M4(5.334e-02, 1.067e-01, 5.534e-02, 6.328e-02, 5.222e-03, -2.969e-02, 7.832e-02, 3.797e-02, 8.642e-02, 1.398e-01, -1.989e-01, 8.604e-02, 1.958e-02, -5.832e-02, 4.356e-02, 1.596e-01) * s1_2_1;
	r0 += M4(4.175e-02, 7.563e-03, 2.152e-02, -2.489e-02, 6.908e-02, -2.012e-02, 4.056e-02, -1.294e-01, -1.031e-01, 5.587e-02, -7.544e-02, -4.939e-02, -4.381e-02, 6.319e-02, 3.267e-02, 1.316e-01) * s1_2_2;
	r1 += M4(2.927e-02, 1.051e-02, -7.016e-02, -1.185e-02, 5.392e-04, -5.624e-03, 5.236e-02, -1.237e-03, -2.326e-02, -4.194e-02, -5.411e-02, -6.629e-03, 8.048e-03, 3.982e-02, -2.182e-02, -1.615e-02) * s1_2_2;
	r2 += M4(-2.401e-02, 1.231e-02, 1.143e-01, -2.785e-02, 1.272e-02, -4.186e-02, 3.735e-02, -7.027e-02, 9.594e-02, 3.621e-01, -1.368e-01, 2.726e-01, 1.256e-02, -1.502e-01, -1.655e-01, 3.437e-02) * s1_2_2;
	r3 += M4(4.605e-02, -1.513e-02, 4.280e-02, 1.021e-01, 3.725e-02, -1.586e-02, 3.505e-02, 1.438e-02, -1.304e-01, 1.930e-01, -9.588e-02, 7.478e-02, -7.603e-02, 5.607e-02, -7.545e-02, -4.566e-02) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(-2.461e-02, -8.052e-02, -3.056e-02, 1.833e-01, -4.376e-02, -1.775e-02, -7.440e-03, -1.430e-02, 1.788e-02, 1.053e-02, -4.990e-02, -3.608e-02, -1.353e-02, 1.455e-02, 1.427e-03, -5.111e-02) * s0_0_0;
	r1 += M4(-5.969e-02, 4.880e-02, -1.874e-01, 3.078e-02, 3.370e-02, -5.333e-02, 4.448e-02, -2.784e-02, -1.717e-02, 1.031e-01, -9.252e-03, 3.865e-02, -2.893e-02, 5.813e-03, -1.451e-01, -5.224e-02) * s0_0_0;
	r2 += M4(-8.300e-02, 1.421e-01, -2.280e-01, 1.284e-01, 1.089e-02, -1.327e-01, -1.476e-02, -9.602e-02, -1.580e-02, 2.286e-01, 1.517e-02, 7.898e-02, -3.969e-02, 1.304e-01, 1.679e-02, -3.466e-02) * s0_0_0;
	r3 += M4(-1.658e-02, -6.829e-02, 2.481e-02, 8.230e-02, 6.576e-02, -6.658e-02, -2.288e-03, -4.239e-02, -5.088e-02, 1.391e-01, 3.347e-02, 7.101e-02, -3.946e-03, 4.182e-02, -3.161e-03, 1.462e-02) * s0_0_0;
	r0 += M4(-7.943e-02, 9.670e-03, -4.001e-02, -1.636e-01, 6.731e-03, 1.285e-01, 8.298e-02, -3.519e-02, -1.483e-01, -8.775e-02, -9.908e-02, 4.485e-02, -2.248e-02, -1.518e-01, -7.054e-02, 6.143e-02) * s0_0_1;
	r1 += M4(-4.749e-02, -1.802e-02, 7.566e-02, 1.259e-01, 3.701e-02, 1.411e-01, -1.274e-01, 4.991e-02, -1.031e-01, -1.804e-01, 1.459e-01, -7.410e-02, -1.812e-02, -7.402e-02, 2.530e-02, -3.277e-02) * s0_0_1;
	r2 += M4(-7.837e-02, 6.920e-02, -3.792e-02, 2.614e-01, -3.443e-02, -1.333e-01, 3.050e-01, 9.157e-02, 7.281e-02, 1.898e-02, -2.094e-01, -3.043e-01, -2.928e-02, 1.068e-01, -1.851e-01, 8.327e-02) * s0_0_1;
	r3 += M4(-5.670e-02, -3.199e-01, -3.141e-02, -3.132e-02, -5.626e-02, -2.319e-01, 1.293e-01, 3.049e-02, -4.398e-02, 2.823e-01, -2.655e-01, -8.261e-02, -2.646e-02, -3.235e-02, -5.748e-02, -1.130e-02) * s0_0_1;
	r0 += M4(2.105e-02, -8.822e-02, -5.295e-02, -2.705e-03, 6.592e-02, 1.141e-01, 6.472e-02, -7.853e-02, -1.097e-01, -9.283e-02, -7.643e-02, 7.061e-02, -2.560e-02, -7.996e-02, -4.230e-02, -3.991e-02) * s0_0_2;
	r1 += M4(-6.380e-02, -5.196e-02, 1.120e-01, 6.582e-02, 2.659e-02, 1.352e-01, -1.008e-01, 1.381e-01, -1.172e-01, -1.389e-01, 1.082e-01, -2.102e-01, -2.298e-03, -4.881e-02, 3.946e-02, -1.088e-01) * s0_0_2;
	r2 += M4(-2.075e-02, 1.242e-01, 3.981e-02, 8.635e-02, -5.015e-02, -3.368e-02, 2.346e-01, -2.984e-02, 5.197e-02, 1.116e-01, -1.723e-01, 7.838e-02, 6.349e-03, 3.007e-02, -7.773e-02, 3.102e-03) * s0_0_2;
	r3 += M4(-5.878e-03, 1.304e-01, -2.193e-02, -8.641e-02, -5.300e-03, 6.455e-02, 6.860e-02, 4.347e-02, 5.705e-02, -1.644e-01, -1.380e-02, -2.518e-02, 3.076e-02, -1.673e-03, 4.781e-03, 1.275e-02) * s0_0_2;
	r0 += M4(1.957e-02, -1.073e-01, -1.598e-02, -2.342e-01, 5.420e-02, 1.371e-01, -1.244e-01, -1.949e-02, 1.412e-01, -1.082e-01, 2.083e-02, 1.411e-02, -6.616e-02, -5.913e-02, 7.711e-03, -1.393e-01) * s0_1_0;
	r1 += M4(4.409e-02, 1.126e-01, -3.011e-01, 4.871e-02, 8.452e-02, -1.405e-01, 3.525e-02, -2.291e-02, 1.627e-01, 3.453e-01, 1.702e-01, -7.809e-02, -8.005e-02, 4.894e-02, -2.121e-01, -3.421e-03) * s0_1_0;
	r2 += M4(-1.023e-01, 1.250e-01, -1.865e-02, -1.134e-01, -2.192e-03, -7.229e-02, -6.000e-02, 1.204e-01, -1.074e-01, -2.362e-01, -2.155e-01, -1.704e-01, -6.898e-03, 3.305e-01, 2.016e-01, 9.277e-03) * s0_1_0;
	r3 += M4(5.050e-02, 1.440e-01, 8.037e-02, 8.141e-02, 3.775e-02, 1.480e-01, -1.915e-02, -2.272e-01, -1.248e-02, -2.325e-01, 1.210e-01, 1.014e-01, -1.590e-02, 1.808e-01, 5.386e-03, 1.081e-01) * s0_1_0;
	r0 += M4(-1.238e-01, 6.663e-02, -6.026e-02, -4.810e-01, 1.748e-01, 8.095e-02, 2.528e-01, 4.737e-01, 6.738e-01, 5.277e-03, -6.141e-02, -4.084e-01, -2.452e-01, 8.631e-02, -1.243e-01, -3.473e-01) * s0_1_1;
	r1 += M4(-2.651e-02, 6.032e-01, 4.536e-01, -7.207e-01, 1.525e-01, 2.669e-02, -3.274e-01, -1.357e-01, -6.688e-03, -2.071e-01, 3.240e-01, 2.041e-01, -1.415e-01, -1.348e-01, 1.950e-01, -2.271e-01) * s0_1_1;
	r2 += M4(1.937e-02, 6.879e-02, -4.418e-02, -2.089e-01, -1.691e-02, 1.020e-02, 3.222e-01, -1.411e-01, 4.064e-01, -6.971e-01, 3.184e-01, 1.932e-01, -4.320e-02, 3.960e-02, -1.630e-01, 1.842e-01) * s0_1_1;
	r3 += M4(-1.414e-01, -7.223e-01, -5.312e-02, 3.620e-02, 7.506e-02, 2.645e-01, 9.265e-02, 1.786e-01, -2.231e-01, 8.423e-02, 5.530e-02, -6.974e-01, -1.498e-01, -2.763e-01, -2.412e-01, -5.064e-02) * s0_1_1;
	r0 += M4(-1.025e-01, 1.477e-02, -1.688e-01, 1.352e-01, -1.136e-02, -8.668e-02, 4.199e-02, 2.168e-02, 2.584e-01, 4.456e-02, 8.963e-02, 8.228e-02, -7.075e-02, -1.785e-02, -1.861e-01, -1.344e-01) * s0_1_2;
	r1 += M4(1.934e-02, 1.130e-01, 1.906e-01, -1.560e-01, 3.337e-02, 2.631e-02, -6.001e-02, -1.222e-01, 5.403e-03, 3.038e-01, -8.093e-02, 3.880e-01, -8.768e-02, -1.377e-01, 1.724e-01, -8.711e-02) * s0_1_2;
	r2 += M4(-1.276e-01, -2.699e-02, -2.467e-02, 1.539e-02, -7.154e-02, -6.554e-02, 2.789e-02, -1.801e-01, -8.775e-03, 2.549e-01, -2.179e-01, 4.382e-02, -3.997e-04, 1.595e-01, -2.183e-02, 1.426e-01) * s0_1_2;
	r3 += M4(2.962e-02, -3.840e-01, -1.396e-01, -1.402e-01, 7.055e-02, 2.347e-01, 4.377e-02, 6.699e-02, 1.464e-01, 6.250e-02, 2.645e-01, 3.830e-01, -4.205e-03, -1.095e-01, -3.747e-02, -1.173e-01) * s0_1_2;
	r0 += M4(1.483e-02, -9.668e-02, 2.491e-02, -1.133e-01, -1.251e-02, -1.033e-01, 1.215e-01, -6.828e-02, -1.004e-02, 1.392e-01, -2.617e-01, 6.848e-02, 7.560e-02, -1.227e-01, 1.072e-01, -1.494e-01) * s0_2_0;
	r1 += M4(6.938e-02, 9.370e-02, -2.023e-02, -4.819e-02, -4.819e-02, -1.310e-01, -6.299e-02, 7.600e-02, 1.454e-02, 2.647e-01, 1.066e-01, -9.145e-02, 7.290e-02, 1.461e-01, -1.575e-02, -1.125e-01) * s0_2_0;
	r2 += M4(-6.347e-02, -7.866e-02, -1.384e-02, -1.141e-01, -1.401e-02, -1.028e-01, 2.222e-01, -1.133e-01, -7.958e-02, -7.400e-02, -4.431e-03, -6.702e-02, 5.966e-02, -1.439e-01, -8.610e-02, -2.261e-01) * s0_2_0;
	r3 += M4(-1.447e-02, 5.084e-02, -3.443e-02, 6.867e-02, -2.051e-02, -2.184e-02, -6.219e-02, 6.847e-03, -7.397e-02, -5.948e-02, 4.801e-03, 2.144e-02, -3.889e-02, -1.148e-01, 4.285e-02, 1.685e-01) * s0_2_0;
	r0 += M4(2.278e-02, -3.295e-02, 7.539e-02, -2.223e-03, 4.311e-02, -2.223e-01, 5.310e-02, -1.600e-01, 6.840e-03, -1.508e-02, -2.116e-01, -3.477e-02, 7.512e-02, 2.621e-02, -5.200e-02, -1.134e-01) * s0_2_1;
	r1 += M4(9.173e-02, 1.586e-01, 1.043e-01, -3.891e-01, 1.223e-01, -1.363e-02, 1.646e-01, 4.008e-01, -2.796e-02, -1.462e-02, 1.466e-01, 2.514e-01, 7.036e-02, 6.483e-02, 1.533e-01, -1.705e-01) * s0_2_1;
	r2 += M4(1.139e-01, -2.120e-01, -1.425e-02, -3.992e-02, -1.067e-01, 5.824e-02, 1.426e-02, -2.805e-01, -2.585e-01, 6.143e-02, -2.237e-01, -1.248e-01, 1.577e-01, -4.268e-01, 2.875e-02, -9.623e-02) * s0_2_1;
	r3 += M4(-7.787e-02, 7.486e-02, 1.017e-01, 3.196e-02, 4.774e-02, -2.483e-01, -8.750e-02, 2.951e-02, 5.957e-03, 5.193e-02, -1.317e-01, -2.307e-01, -8.170e-02, -3.107e-02, 1.174e-03, -1.940e-01) * s0_2_1;
	r0 += M4(-3.620e-02, 4.024e-02, -3.487e-02, 2.842e-03, -1.027e-02, -5.447e-02, -2.260e-03, 1.341e-02, -3.520e-02, -1.292e-02, -5.591e-02, -1.460e-01, 5.498e-02, 9.329e-02, 8.378e-02, 3.520e-02) * s0_2_2;
	r1 += M4(2.217e-02, 2.284e-03, 5.112e-02, -1.355e-01, -3.336e-02, 4.992e-02, -6.516e-03, 1.290e-01, -2.465e-02, 1.396e-02, 1.488e-03, 7.404e-02, 5.397e-02, 1.937e-01, -3.093e-02, 8.331e-02) * s0_2_2;
	r2 += M4(-2.267e-03, -3.203e-02, 5.105e-02, 3.827e-03, -1.325e-02, 8.631e-02, -3.681e-03, -1.523e-02, -4.847e-02, 8.184e-02, -2.298e-01, -8.440e-02, -4.190e-02, -2.977e-01, -3.484e-02, -1.470e-01) * s0_2_2;
	r3 += M4(2.101e-02, -1.337e-02, -6.699e-02, -1.187e-01, -1.692e-02, -8.148e-02, 7.718e-02, 7.048e-02, 4.136e-02, -9.307e-02, 5.837e-02, 5.460e-02, 2.972e-03, -4.790e-02, -4.560e-03, -1.686e-02) * s0_2_2;
	r0 += M4(-4.786e-02, -3.449e-02, -3.244e-01, 8.419e-02, -3.445e-02, -2.094e-01, 8.457e-02, -5.171e-03, -2.361e-02, 2.666e-01, 1.330e-01, 1.118e-01, -1.348e-01, -1.421e-01, 1.406e-01, 1.449e-01) * s1_0_0;
	r1 += M4(1.064e-01, 1.141e-01, 7.323e-02, -7.789e-02, -8.033e-02, -7.987e-02, -5.474e-02, 8.243e-02, 1.520e-02, -2.973e-02, -3.402e-02, 5.287e-03, -1.329e-01, 2.884e-02, -1.101e-01, -9.058e-02) * s1_0_0;
	r2 += M4(-1.323e-01, -1.787e-01, -2.753e-01, -2.546e-01, 3.242e-02, 4.224e-02, 4.030e-01, 1.558e-02, 6.189e-02, 1.197e-01, 1.817e-01, 6.917e-02, -6.011e-02, -2.319e-01, -4.329e-01, -7.214e-02) * s1_0_0;
	r3 += M4(4.129e-02, -2.836e-02, -2.392e-02, 1.519e-02, -3.184e-02, 2.442e-02, 3.257e-02, 3.458e-02, -3.139e-02, 1.758e-01, -1.664e-02, 8.721e-02, -5.481e-02, -3.089e-01, -2.318e-02, 9.870e-02) * s1_0_0;
	r0 += M4(1.622e-01, -8.563e-02, -2.285e-01, 8.225e-02, -1.010e-02, -2.125e-02, 1.132e-01, -2.573e-01, -3.760e-02, -1.217e-01, 2.891e-01, 5.922e-02, 8.266e-02, -1.617e-01, 1.883e-01, -8.999e-02) * s1_0_1;
	r1 += M4(2.785e-01, 3.982e-01, 4.353e-02, -3.312e-02, 1.582e-01, -1.318e-01, 1.441e-01, 5.557e-02, -5.505e-02, -1.986e-01, 1.080e-02, -7.123e-02, 1.314e-01, 7.228e-02, -4.638e-02, 1.312e-01) * s1_0_1;
	r2 += M4(-2.199e-01, 1.903e-02, -1.917e-01, -2.637e-01, -8.019e-02, -4.477e-01, 3.742e-01, -9.397e-02, 1.541e-01, 1.645e-01, -3.372e-01, 1.259e-01, -1.471e-01, -1.617e-01, 2.022e-01, 3.369e-02) * s1_0_1;
	r3 += M4(9.935e-02, 1.202e-01, 1.213e-01, -5.552e-03, -7.290e-04, 5.667e-02, -1.300e-01, -5.597e-02, -2.748e-01, 1.958e-01, -3.462e-02, -6.966e-02, -2.218e-01, -3.092e-01, -6.469e-02, 1.279e-02) * s1_0_1;
	r0 += M4(8.426e-03, 2.956e-02, -8.640e-02, 5.281e-02, 2.208e-02, 8.827e-03, 1.684e-01, -3.430e-02, 2.146e-02, -8.439e-02, 1.537e-01, -1.099e-02, 2.793e-02, 1.646e-02, 4.402e-02, 5.324e-03) * s1_0_2;
	r1 += M4(2.980e-02, 2.547e-01, -5.883e-02, 1.285e-03, 3.964e-02, 8.270e-03, -3.709e-01, -1.192e-01, 1.266e-02, -1.411e-01, 3.659e-02, 2.419e-02, 2.129e-02, 7.417e-02, 5.373e-02, 3.714e-01) * s1_0_2;
	r2 += M4(-8.751e-02, -9.023e-02, -7.052e-02, -1.908e-01, 5.387e-02, 1.185e-01, -1.454e-04, -2.139e-02, 6.384e-02, -6.115e-02, 6.168e-02, -3.458e-02, 6.499e-02, 1.566e-01, -2.363e-01, -8.179e-02) * s1_0_2;
	r3 += M4(4.625e-02, 1.617e-01, 1.052e-01, 3.500e-03, 1.927e-01, 7.876e-03, 1.181e-01, 2.299e-01, -8.813e-02, -7.099e-02, -2.100e-02, -1.091e-02, -1.546e-01, -3.140e-01, -1.141e-02, -7.317e-02) * s1_0_2;
	r0 += M4(-9.789e-02, 3.424e-03, -3.116e-01, 7.739e-02, -2.571e-02, 8.937e-02, 2.442e-02, 1.639e-01, 4.402e-02, -9.306e-02, 4.477e-01, 1.074e-01, -3.016e-02, 2.373e-01, -5.474e-03, 2.376e-01) * s1_1_0;
	r1 += M4(1.659e-02, -8.691e-02, 1.029e-01, 1.296e-01, 8.602e-02, 6.615e-02, 7.647e-02, -5.889e-02, -5.962e-02, -1.146e-01, -2.722e-02, -2.277e-01, -9.781e-03, 1.596e-02, -1.039e-02, 1.424e-01) * s1_1_0;
	r2 += M4(-7.102e-02, 8.519e-02, 6.489e-02, 2.472e-06, -1.696e-01, 3.992e-02, -1.381e-02, 1.289e-02, 1.480e-01, -8.887e-02, -2.310e-01, -3.860e-02, -7.726e-02, 2.594e-01, -1.000e+00, 1.109e-01) * s1_1_0;
	r3 += M4(8.630e-02, -1.065e-01, -6.586e-02, -5.945e-02, 1.106e-01, -1.099e-02, -5.362e-02, 1.852e-01, -7.934e-02, -3.251e-01, 1.829e-02, 1.826e-01, 4.542e-02, 7.301e-02, -4.348e-02, -1.155e-01) * s1_1_0;
	r0 += M4(7.696e-02, -1.411e-01, -2.174e-01, -1.402e-02, -6.175e-02, 3.896e-02, -1.953e-01, -2.113e-01, -3.450e-01, 7.649e-01, 2.656e-01, -3.174e-01, -2.714e-01, 1.866e-01, -1.518e-04, 1.214e-01) * s1_1_1;
	r1 += M4(6.924e-02, -2.866e-02, 5.130e-03, 4.289e-01, -4.943e-02, -2.587e-01, 9.341e-02, -2.152e-01, -4.758e-01, -5.513e-03, -3.785e-01, -4.956e-01, -4.014e-01, -1.473e-01, -3.788e-01, -4.529e-01) * s1_1_1;
	r2 += M4(-1.199e-01, 2.608e-01, -1.398e-01, 7.863e-02, 1.403e-01, 6.426e-02, 3.367e-01, 2.984e-02, 4.801e-02, -2.298e-01, 2.238e-01, 3.729e-01, -1.043e-01, -4.967e-02, 6.656e-02, 3.026e-01) * s1_1_1;
	r3 += M4(8.339e-02, -8.168e-02, 1.461e-01, -4.662e-02, 1.270e-01, 2.215e-01, 2.897e-01, -3.126e-01, -3.331e-01, -3.732e-01, -1.827e-01, -5.407e-01, -1.257e-01, -7.466e-02, 1.032e-02, 6.074e-02) * s1_1_1;
	r0 += M4(-1.418e-02, -1.965e-02, -1.034e-01, 3.858e-02, 1.194e-01, 6.135e-02, 2.288e-01, -1.238e-01, 1.300e-01, 5.541e-03, 2.214e-01, -1.685e-01, 3.449e-02, -6.122e-02, -3.555e-02, 8.071e-02) * s1_1_2;
	r1 += M4(-9.499e-02, -5.561e-04, -9.960e-02, 1.489e-01, -3.725e-02, -6.399e-02, -1.434e-01, -1.852e-01, 1.428e-02, -2.552e-01, 2.798e-01, -7.730e-02, -2.571e-02, -1.115e-01, 1.782e-01, -8.525e-02) * s1_1_2;
	r2 += M4(-1.920e-02, 1.783e-01, -9.310e-02, 6.424e-02, -1.710e-01, -1.516e-01, -9.468e-03, -1.508e-01, 7.721e-02, 2.117e-01, 6.186e-02, 1.700e-02, -1.094e-01, 1.342e-01, 1.515e-01, 1.197e-01) * s1_1_2;
	r3 += M4(7.394e-02, -1.122e-02, 1.141e-01, 1.178e-01, 6.469e-02, -1.538e-01, 6.519e-02, 1.219e-01, -6.928e-02, 3.405e-01, 5.932e-02, -3.102e-01, -2.451e-02, -6.940e-02, -3.810e-02, -2.190e-01) * s1_1_2;
	r0 += M4(-4.229e-02, 1.043e-01, -6.503e-02, 8.891e-02, -1.123e-02, -3.118e-02, 4.628e-03, -4.579e-02, -3.901e-03, -1.409e-01, 1.177e-01, -6.641e-03, 1.358e-02, -3.251e-01, 9.357e-02, -1.362e-01) * s1_2_0;
	r1 += M4(-7.683e-03, 1.771e-03, 9.196e-02, 5.714e-02, 1.260e-02, -6.478e-02, 9.364e-02, -2.055e-02, -2.126e-02, -1.111e-01, -5.124e-02, 1.145e-01, 7.931e-02, -3.118e-02, -1.284e-01, 2.233e-01) * s1_2_0;
	r2 += M4(-9.429e-02, 5.412e-02, 4.312e-02, 5.684e-02, -3.836e-02, -1.057e-01, 7.358e-02, -2.715e-02, 9.990e-02, -2.957e-02, 8.449e-02, -7.726e-02, 3.133e-02, 2.762e-02, -5.415e-03, -2.671e-01) * s1_2_0;
	r3 += M4(4.388e-02, -7.984e-02, -4.167e-02, -5.562e-03, 3.775e-03, 6.705e-03, -1.979e-02, 4.889e-02, -9.708e-03, 1.608e-02, 6.681e-02, 1.930e-02, -6.555e-02, -3.447e-01, -3.217e-02, 1.190e-01) * s1_2_0;
	r0 += M4(5.253e-03, 8.180e-02, -8.519e-02, -6.082e-02, -3.970e-02, -6.995e-03, 9.355e-02, -1.507e-02, 1.384e-01, -9.756e-02, 3.762e-01, -1.689e-01, -1.957e-02, -1.447e-01, 2.699e-02, -7.690e-02) * s1_2_1;
	r1 += M4(3.819e-03, 1.674e-02, 5.075e-02, 5.154e-02, -7.053e-02, -1.304e-01, 1.792e-01, 1.242e-01, 1.049e-01, -7.620e-02, 2.012e-01, 2.106e-01, 1.254e-01, 1.946e-01, 1.247e-01, 1.462e-01) * s1_2_1;
	r2 += M4(-4.527e-02, 2.118e-02, -6.229e-03, 2.874e-02, -9.936e-02, -5.116e-02, 2.113e-01, 1.565e-02, 5.162e-02, -1.158e-01, 1.011e-01, -9.906e-02, -2.398e-02, 8.003e-02, -6.951e-02, -2.628e-01) * s1_2_1;
	r3 += M4(-3.886e-03, -1.472e-02, 7.671e-03, 2.348e-02, 5.534e-02, 2.253e-02, 1.721e-03, -8.127e-02, -1.320e-01, -2.456e-01, -1.374e-01, 6.110e-02, -1.083e-02, -2.797e-01, -4.597e-02, -5.909e-02) * s1_2_1;
	r0 += M4(-3.416e-04, -5.449e-02, -1.072e-01, 2.473e-02, 4.071e-02, -3.115e-02, 1.978e-01, -8.328e-02, -7.652e-02, -1.117e-01, 1.219e-01, -7.000e-02, -1.641e-02, 7.643e-02, -9.036e-02, 8.453e-02) * s1_2_2;
	r1 += M4(-2.253e-03, 7.202e-02, -2.839e-02, -3.918e-02, 2.355e-03, 6.646e-03, -1.580e-01, 4.698e-02, -4.427e-02, -1.464e-01, 4.378e-02, 2.163e-01, -7.528e-03, 1.357e-01, 4.011e-03, 1.226e-03) * s1_2_2;
	r2 += M4(-3.705e-02, -1.081e-02, 7.554e-02, 1.468e-02, -1.001e-01, -1.459e-01, 3.978e-02, -1.116e-01, 4.286e-02, 1.588e-02, -2.165e-01, -8.026e-02, -2.204e-02, -1.625e-01, -6.832e-02, 4.047e-02) * s1_2_2;
	r3 += M4(2.131e-02, 1.067e-01, -1.209e-02, 8.082e-03, 8.789e-02, -9.169e-02, 7.888e-02, 1.358e-01, -4.749e-02, -2.384e-02, -6.970e-02, -3.837e-02, -9.272e-02, -1.564e-01, -6.173e-02, -4.983e-02) * s1_2_2;
	r0 += V4(1.039e-03, 2.128e-02, -3.155e-02, -8.864e-03);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(6.438e-03, 1.688e-02, 7.329e-03, -1.895e-02);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(-1.216e-02, -2.740e-04, -2.466e-02, 5.757e-03);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(-1.236e-02, -8.513e-03, 8.053e-03, -2.244e-02);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC [CuNNy_4x16] -conv4
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv3
//!BIND LUMA
//!SAVE conv4
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 4
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv3_pt;
			V4 sr0 = V4(conv3_gather(p, 0));
			V4 sg0 = V4(conv3_gather(p, 1));
			V4 sb0 = V4(conv3_gather(p, 2));
			V4 sa0 = V4(conv3_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0, r1, r2, r3;
	r0 = V4(0.0); r1 = V4(0.0); r2 = V4(0.0); r3 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(-3.979e-02, -8.057e-03, 9.318e-03, -1.193e-02, -5.446e-02, -4.498e-02, 6.516e-03, -8.115e-03, -4.553e-02, -6.908e-03, 1.487e-02, 5.425e-02, -6.488e-02, 2.607e-02, 2.673e-02, -1.046e-03) * s0_0_0;
	r1 += M4(-1.769e-02, 3.047e-02, -4.774e-02, 1.796e-02, 1.850e-02, 8.561e-02, 1.199e-01, -4.862e-02, -1.344e-02, 3.942e-02, -1.879e-02, 2.769e-02, 4.830e-02, -2.785e-02, 2.714e-02, 8.226e-02) * s0_0_0;
	r2 += M4(-1.480e-02, 4.686e-02, 5.097e-02, -2.352e-01, 1.686e-02, 8.056e-02, -1.847e-02, 1.133e-02, 3.157e-02, 9.042e-02, -2.734e-01, -8.825e-02, 2.938e-02, 1.560e-02, -3.672e-01, -9.783e-02) * s0_0_0;
	r3 += M4(-4.510e-02, -2.673e-02, -3.528e-02, -4.767e-03, -4.236e-02, -1.259e-02, -3.031e-02, -1.247e-02, 2.294e-02, -1.352e-04, 2.250e-02, -8.639e-03, -9.446e-03, 2.063e-02, 3.309e-03, -7.952e-03) * s0_0_0;
	r0 += M4(-7.399e-02, 5.432e-02, 7.974e-03, -7.781e-03, 5.406e-02, -2.233e-02, -4.533e-03, -2.445e-02, 3.479e-03, -2.385e-02, -3.137e-02, -4.218e-02, -1.938e-01, -2.107e-02, 2.956e-02, -4.613e-02) * s0_0_1;
	r1 += M4(-4.801e-02, -5.040e-02, 6.635e-02, -8.655e-02, -6.303e-03, -1.853e-01, -1.174e-01, 4.259e-02, 1.743e-01, -7.326e-02, -6.738e-01, -3.435e-02, 1.826e-01, 1.839e-01, 2.036e-01, -1.238e-01) * s0_0_1;
	r2 += M4(-2.093e-02, -1.952e-01, -1.608e-01, 1.933e-01, -4.041e-02, 3.728e-02, -1.524e-01, 1.997e-01, 5.864e-02, -8.612e-02, 1.641e-01, -3.931e-01, 6.074e-02, 3.092e-01, 1.242e-01, 1.292e-01) * s0_0_1;
	r3 += M4(1.068e-02, 1.600e-02, -2.875e-02, 3.091e-02, 3.913e-02, -1.776e-01, 3.425e-02, -4.155e-02, -7.690e-02, -2.860e-02, -1.365e-02, -4.765e-02, -4.065e-02, 1.543e-01, -5.667e-02, 6.113e-02) * s0_0_1;
	r0 += M4(1.213e-03, -1.804e-02, 2.486e-03, 6.860e-02, -1.069e-02, 2.931e-02, 5.915e-03, 1.858e-02, 3.435e-02, 1.540e-02, -2.058e-02, -2.704e-02, -1.824e-02, -5.128e-03, 9.162e-03, -9.728e-02) * s0_0_2;
	r1 += M4(5.930e-02, 8.259e-02, 6.217e-02, -2.226e-02, -1.866e-01, -1.248e-01, -3.193e-01, -6.041e-02, -8.014e-01, 1.851e-03, -2.815e-02, 6.323e-02, 4.630e-01, -2.521e-02, 2.009e-01, 3.230e-02) * s0_0_2;
	r2 += M4(1.776e-02, 5.359e-02, 1.665e-02, 5.877e-02, 5.699e-03, 7.240e-03, 2.431e-02, -9.149e-02, -4.616e-03, -2.341e-02, -2.129e-02, -7.037e-02, -8.421e-03, -1.847e-01, -1.309e-01, 2.890e-01) * s0_0_2;
	r3 += M4(3.251e-04, 2.439e-02, 2.877e-02, 1.705e-02, 7.794e-03, -3.816e-02, 8.217e-03, -2.596e-02, 2.714e-02, 1.180e-02, -1.485e-02, -2.506e-02, -1.670e-03, -3.111e-03, 4.899e-02, 4.938e-02) * s0_0_2;
	r0 += M4(1.434e-02, -1.130e-02, -1.049e-02, 1.392e-01, -3.428e-02, -1.734e-02, -2.058e-02, 5.122e-03, -1.330e-01, 2.960e-02, -1.848e-02, 4.657e-02, 1.589e-01, 1.780e-02, -2.177e-03, -1.798e-01) * s0_1_0;
	r1 += M4(-8.806e-02, -1.390e-01, 1.493e-03, 8.740e-03, -3.736e-02, 8.604e-02, -3.548e-02, 5.053e-03, -3.663e-02, -3.181e-02, 1.644e-02, 4.032e-03, -9.471e-03, -1.053e-02, -7.679e-02, 4.833e-02) * s0_1_0;
	r2 += M4(8.530e-05, 1.606e-01, 3.311e-02, -3.506e-01, 7.129e-04, 8.694e-03, -5.280e-02, -5.960e-02, 1.080e-02, -1.909e-02, -1.000e+00, -1.886e-01, 6.995e-03, -2.087e-01, -4.545e-01, 1.902e-01) * s0_1_0;
	r3 += M4(8.279e-03, -6.878e-02, -2.849e-02, -8.267e-02, 7.822e-03, -2.416e-02, 1.363e-02, -2.947e-02, 4.308e-02, 3.568e-02, -5.964e-03, -2.216e-02, 2.644e-02, 8.131e-02, 3.074e-02, 3.536e-02) * s0_1_0;
	r0 += M4(-3.387e-03, -1.773e-01, 9.612e-02, 6.353e-02, -9.764e-02, -7.199e-02, -9.212e-02, -7.559e-02, -6.269e-01, 4.391e-02, 2.675e-02, -3.121e-01, 3.717e-01, 1.613e-01, 1.345e-01, 1.430e-01) * s0_1_1;
	r1 += M4(2.740e-02, 3.612e-01, 2.074e-02, 5.046e-02, -1.687e-01, -2.604e-01, -1.817e-01, -4.509e-02, -1.108e-01, -2.218e-01, 2.153e-01, -4.508e-01, 1.354e-01, -7.999e-02, 9.591e-02, 7.302e-01) * s0_1_1;
	r2 += M4(1.615e-01, -8.252e-03, -7.658e-03, 5.347e-01, -1.368e-01, -1.733e-01, -2.105e-01, 3.086e-01, -1.345e-01, -6.953e-01, -8.344e-02, -4.671e-01, -3.903e-04, 3.658e-01, 1.592e-01, -1.583e-01) * s0_1_1;
	r3 += M4(4.515e-02, 2.686e-01, 2.348e-01, 2.607e-01, 7.731e-02, 3.214e-02, 8.280e-02, -5.336e-02, -2.443e-01, -8.065e-01, -5.926e-02, -1.041e-01, 4.355e-01, -1.300e-01, 4.502e-01, 1.065e-01) * s0_1_1;
	r0 += M4(9.007e-02, 4.637e-02, -8.567e-02, -7.208e-02, -2.234e-01, -1.558e-01, -1.648e-01, -5.594e-02, -4.057e-02, -4.895e-03, -1.488e-02, -1.338e-02, 1.529e-01, 9.441e-03, 1.885e-01, -1.322e-01) * s0_1_2;
	r1 += M4(1.880e-01, -8.549e-02, -6.655e-03, -8.106e-02, 6.210e-02, -1.636e-01, -1.375e-01, -1.932e-01, 1.158e-02, -4.033e-01, -9.253e-02, -2.718e-01, -9.856e-03, -9.746e-02, -1.841e-01, 9.352e-02) * s0_1_2;
	r2 += M4(-1.974e-02, -5.195e-03, -4.319e-02, 1.607e-01, -6.762e-02, 1.336e-01, 3.905e-02, -2.365e-01, 2.094e-02, -4.453e-02, 2.205e-02, 5.102e-02, 4.661e-02, -1.553e-01, -1.162e-01, 2.239e-01) * s0_1_2;
	r3 += M4(-6.877e-02, 3.296e-02, -3.233e-01, 3.212e-02, -1.329e-01, -8.430e-02, -7.455e-02, -1.086e-01, -4.675e-02, 3.568e-02, -1.167e-02, -5.719e-02, 3.663e-02, 3.884e-02, 1.328e-02, 6.790e-02) * s0_1_2;
	r0 += M4(-1.013e-01, 7.927e-02, -1.683e-01, 4.622e-02, 1.211e-03, 5.808e-03, -3.949e-02, -1.305e-02, 4.461e-02, -5.850e-03, -4.523e-03, -3.270e-03, -1.085e-01, -1.281e-03, 6.243e-02, -7.334e-02) * s0_2_0;
	r1 += M4(-3.421e-02, 7.634e-02, -2.851e-02, -2.858e-01, 1.720e-02, -3.999e-02, 3.276e-03, -1.299e-01, 1.906e-02, 4.854e-02, 6.085e-03, -3.902e-02, -2.422e-02, -1.049e-02, -5.113e-03, 1.374e-01) * s0_2_0;
	r2 += M4(-1.352e-01, 7.242e-02, 1.217e-01, 3.147e-02, -1.087e-01, -9.705e-02, -1.200e-01, 2.148e-02, -2.213e-02, -2.876e-02, -2.572e-01, 7.840e-02, -2.286e-03, -1.005e-01, -2.944e-01, 3.184e-01) * s0_2_0;
	r3 += M4(-6.547e-02, 1.560e-01, -5.117e-02, 6.140e-02, -6.373e-03, -9.816e-03, -6.611e-03, -1.513e-02, -1.282e-02, -4.558e-02, 1.024e-02, -1.505e-02, -1.125e-02, -1.300e-03, -3.040e-02, 5.562e-02) * s0_2_0;
	r0 += M4(9.660e-02, 5.914e-01, -1.392e-01, 2.770e-01, -3.720e-01, -1.806e-01, -1.443e-01, 7.148e-02, -1.181e-02, 5.365e-03, -2.020e-01, 8.336e-02, -1.666e-01, -2.335e-02, 1.279e-01, -1.178e-03) * s0_2_1;
	r1 += M4(1.015e-03, -6.308e-03, 4.681e-04, 3.117e-01, -8.097e-03, 2.287e-02, -1.454e-02, -1.568e-01, -2.187e-02, 5.910e-02, -4.375e-02, -9.887e-02, -2.477e-02, 1.687e-01, 1.912e-02, -1.343e-01) * s0_2_1;
	r2 += M4(-9.889e-02, -1.401e-01, 1.834e-03, -7.167e-03, -9.202e-02, 5.019e-02, -6.930e-02, 1.434e-02, -3.421e-02, -3.980e-02, -1.700e-02, -2.087e-02, -4.054e-02, 1.049e-01, 5.797e-02, -7.650e-02) * s0_2_1;
	r3 += M4(1.538e-01, 1.203e-03, 1.251e-01, 3.051e-01, -7.395e-02, -1.778e-02, -5.345e-02, -7.873e-02, -5.808e-02, 1.283e-01, -1.494e-02, -1.739e-02, -7.106e-03, 1.486e-01, 2.902e-02, 1.199e-01) * s0_2_1;
	r0 += M4(-3.218e-02, 3.107e-02, 1.878e-01, 6.650e-02, 2.138e-03, -1.174e-01, -8.338e-02, 2.350e-02, 2.389e-02, 4.439e-02, 5.140e-03, -5.429e-03, -2.754e-02, 6.713e-02, -4.652e-02, -1.694e-02) * s0_2_2;
	r1 += M4(-5.816e-02, 1.145e-01, 4.709e-03, 8.438e-02, 4.114e-02, -1.149e-01, 9.546e-02, 5.680e-02, -1.167e-02, 8.253e-02, -1.321e-02, 4.111e-02, -2.361e-02, 5.841e-02, 1.309e-03, 1.519e-01) * s0_2_2;
	r2 += M4(2.448e-02, -4.329e-02, -8.116e-02, 2.252e-02, -9.901e-02, 9.937e-02, 9.513e-02, -3.379e-02, 1.622e-02, 1.942e-03, 1.931e-02, 3.778e-02, 3.548e-02, -2.170e-02, -8.908e-02, 4.656e-02) * s0_2_2;
	r3 += M4(-1.977e-02, 2.638e-02, -5.042e-02, 3.704e-02, -2.165e-03, -4.633e-02, -1.871e-02, -2.936e-02, -7.450e-03, 3.261e-02, -7.957e-03, 4.733e-02, 2.396e-02, -3.687e-03, 9.055e-03, 1.745e-03) * s0_2_2;
	r0 += M4(6.937e-02, 2.129e-02, -2.203e-04, 1.376e-02, -2.406e-02, 8.462e-03, 1.971e-03, -7.617e-03, -3.502e-02, 5.785e-03, 1.949e-02, -1.612e-02, 9.119e-02, 7.702e-03, 1.017e-02, -6.066e-02) * s1_0_0;
	r1 += M4(-3.548e-03, -1.991e-02, -1.761e-02, -6.961e-03, 3.406e-02, -1.430e-02, -7.424e-02, -2.733e-02, 7.734e-03, 3.371e-02, -3.220e-04, 5.774e-02, -4.759e-02, -5.599e-02, -1.417e-02, 6.003e-03) * s1_0_0;
	r2 += M4(3.458e-03, -4.402e-02, 4.907e-02, -8.153e-03, -2.154e-02, 5.749e-04, -2.097e-01, -8.049e-02, -2.499e-02, -4.656e-02, -3.253e-02, -7.745e-02, -5.863e-03, 8.808e-02, 2.422e-01, 8.223e-02) * s1_0_0;
	r3 += M4(5.115e-02, -2.708e-03, 1.453e-03, -2.888e-02, -2.987e-02, -1.395e-02, -3.543e-03, 3.982e-02, -6.030e-02, -7.298e-03, -3.192e-02, -1.757e-02, -9.880e-03, -1.081e-01, 1.224e-02, 2.196e-02) * s1_0_0;
	r0 += M4(1.794e-01, -2.057e-02, 7.253e-03, -1.920e-03, -3.944e-02, 4.941e-02, -2.430e-02, -2.075e-02, -7.278e-02, -7.358e-03, -2.359e-02, 7.122e-03, 9.210e-02, 1.125e-01, -4.460e-02, -1.283e-01) * s1_0_1;
	r1 += M4(-6.031e-02, -1.571e-01, 2.734e-01, 1.169e-01, -2.614e-01, 5.131e-02, -5.630e-01, -4.407e-02, 7.856e-03, 1.773e-01, -6.682e-02, -1.870e-01, 1.487e-02, -4.130e-01, -2.925e-01, 9.006e-02) * s1_0_1;
	r2 += M4(-3.831e-02, 1.676e-01, -1.124e-02, -1.424e-02, 1.045e-02, -1.506e-01, 5.505e-02, -1.453e-01, -4.917e-02, -8.653e-02, 9.691e-02, -2.149e-01, -6.503e-04, -5.957e-02, 6.084e-02, -2.238e-01) * s1_0_1;
	r3 += M4(6.947e-02, -1.791e-01, 1.044e-01, -9.924e-02, 3.850e-02, 8.782e-02, -1.557e-03, 5.230e-02, -3.136e-02, 6.566e-02, -5.756e-02, -1.819e-03, 5.750e-02, -8.201e-02, -2.203e-04, -8.605e-02) * s1_0_1;
	r0 += M4(-2.250e-02, 3.276e-02, 1.116e-01, 2.376e-02, 1.406e-02, -5.845e-03, -4.279e-02, 2.218e-02, 8.861e-04, -1.177e-02, -5.520e-02, -2.469e-02, 5.248e-02, 1.462e-02, -8.121e-03, -3.905e-02) * s1_0_2;
	r1 += M4(-2.299e-02, 9.564e-02, 2.263e-02, 8.992e-02, -1.197e-01, -3.226e-02, 4.407e-02, -4.699e-03, -3.408e-01, -9.123e-02, -1.172e-01, -1.204e-01, 2.791e-01, -1.641e-01, 3.081e-02, 4.906e-02) * s1_0_2;
	r2 += M4(9.128e-03, -3.383e-02, 2.000e-02, -4.353e-02, 4.825e-03, 3.239e-03, 1.115e-02, -1.055e-02, -4.716e-03, 1.030e-01, -1.094e-02, -1.900e-01, -2.316e-02, -1.691e-02, 3.328e-02, 6.268e-03) * s1_0_2;
	r3 += M4(4.445e-02, -1.413e-02, 5.571e-02, 4.919e-02, 1.853e-02, -1.152e-03, 2.016e-02, -1.593e-02, -2.509e-02, 1.277e-02, 2.341e-03, -3.666e-02, -9.867e-03, 4.032e-02, 5.336e-03, -4.663e-02) * s1_0_2;
	r0 += M4(2.679e-02, 9.618e-04, 1.931e-02, -6.412e-02, -1.839e-01, -4.333e-02, 5.571e-02, -3.809e-02, -9.030e-03, -1.153e-02, -2.054e-02, 8.481e-03, -2.255e-01, -4.126e-02, 3.761e-02, 2.848e-02) * s1_1_0;
	r1 += M4(2.083e-02, 2.216e-02, 5.787e-02, 1.119e-02, -3.029e-02, -1.163e-01, 1.379e-03, 6.631e-02, -1.312e-03, 1.959e-02, -7.104e-02, -1.642e-01, 3.807e-02, 5.506e-02, 7.719e-02, -6.957e-02) * s1_1_0;
	r2 += M4(-3.952e-02, -2.366e-01, 1.953e-02, -1.591e-02, -1.459e-02, 7.206e-02, -7.424e-01, -1.540e-01, 1.515e-02, -1.780e-01, -2.598e-01, 6.061e-02, -1.850e-02, 8.663e-02, 3.044e-01, -2.192e-01) * s1_1_0;
	r3 += M4(-6.426e-02, 7.548e-02, -2.254e-02, 6.672e-02, -6.518e-02, -2.009e-01, -5.649e-03, 7.360e-03, -5.950e-03, 7.895e-02, -1.094e-02, -8.796e-03, 4.554e-02, 2.594e-01, -1.003e-03, -3.991e-02) * s1_1_0;
	r0 += M4(1.402e-01, 1.669e-01, -3.351e-02, 5.772e-01, -3.751e-01, -5.638e-02, -6.679e-02, -1.137e-01, 1.087e-02, 9.541e-02, 1.664e-02, -1.552e-01, 6.672e-02, -1.763e-01, 1.880e-01, 1.180e-01) * s1_1_1;
	r1 += M4(1.652e-01, 6.101e-01, 5.176e-03, -2.319e-01, 8.617e-02, -6.904e-01, 3.271e-03, -5.062e-01, 3.651e-02, -2.544e-01, -9.394e-03, 1.007e-01, 1.633e-01, 1.249e-01, -5.148e-02, 2.054e-01) * s1_1_1;
	r2 += M4(4.389e-03, 2.401e-01, 7.275e-02, 1.675e-01, -1.431e-02, -3.606e-01, 4.718e-02, -5.903e-01, -4.922e-02, -9.782e-01, -1.989e-01, 9.642e-02, 1.577e-01, -2.006e-01, -1.836e-01, -3.757e-01) * s1_1_1;
	r3 += M4(2.028e-01, 5.634e-01, 3.054e-02, -1.498e-01, -1.415e-01, -4.795e-01, -1.651e-01, -1.076e-01, -3.730e-01, -8.706e-02, -1.530e-01, 1.195e-01, -1.351e-01, 2.192e-01, -2.257e-02, 3.724e-01) * s1_1_1;
	r0 += M4(8.373e-04, -3.179e-02, -1.120e-01, 2.546e-02, -7.292e-03, 6.233e-03, 4.169e-02, -4.096e-02, 1.219e-02, -2.097e-02, -1.246e-02, 7.990e-02, -1.004e-02, 2.552e-02, -2.901e-02, 1.363e-02) * s1_1_2;
	r1 += M4(-4.205e-02, 1.673e-01, 1.131e-01, 1.595e-01, -7.299e-02, -1.233e-01, -7.349e-02, -9.149e-02, 1.419e-01, 7.858e-02, 1.290e-01, 1.879e-01, -1.450e-01, 1.748e-01, 5.433e-03, 4.285e-02) * s1_1_2;
	r2 += M4(-2.460e-02, 6.287e-02, 1.333e-01, -2.918e-01, 7.384e-03, -1.728e-02, -7.342e-02, 1.197e-01, 2.970e-03, 1.955e-01, 7.383e-02, -1.297e-01, -2.681e-02, -2.080e-02, 4.629e-02, 1.690e-02) * s1_1_2;
	r3 += M4(-1.516e-02, -3.059e-02, 2.731e-01, 2.110e-02, 2.676e-05, -3.214e-04, -8.220e-02, -1.076e-02, 8.675e-02, -9.325e-02, 7.615e-02, 2.924e-02, 7.092e-02, 9.542e-02, 7.995e-02, -4.543e-03) * s1_1_2;
	r0 += M4(-1.847e-02, -7.110e-02, 2.369e-02, -4.702e-02, -7.631e-02, -5.261e-02, -8.561e-02, -3.162e-02, 8.618e-02, 5.673e-02, 1.158e-02, -1.338e-02, -9.218e-02, 1.082e-01, 1.209e-01, -7.739e-02) * s1_2_0;
	r1 += M4(-1.807e-02, -8.558e-03, -5.901e-03, 4.910e-02, -1.605e-02, 5.378e-02, 1.358e-02, -8.618e-02, -5.136e-03, -3.002e-02, -6.755e-03, 7.736e-02, 1.431e-02, -6.753e-03, 8.717e-03, 1.147e-01) * s1_2_0;
	r2 += M4(8.449e-02, -1.274e-01, -1.296e-01, -7.033e-02, 6.115e-02, 7.630e-02, -2.860e-02, -2.566e-02, -4.409e-04, -1.186e-02, 6.609e-02, 1.591e-02, -7.601e-03, 2.522e-02, 5.164e-02, 5.986e-02) * s1_2_0;
	r3 += M4(1.691e-02, -9.366e-02, 1.824e-02, -5.043e-02, 7.826e-03, -1.703e-02, 9.201e-03, 3.231e-03, 1.028e-02, -1.405e-02, -2.738e-02, 1.533e-02, -3.071e-02, -3.202e-02, 7.386e-03, 3.971e-02) * s1_2_0;
	r0 += M4(1.596e-01, 2.010e-01, 2.368e-01, 1.165e-01, -4.206e-02, -2.544e-01, 2.658e-02, -1.423e-01, -4.475e-02, -1.088e-01, -3.916e-02, -1.225e-01, 5.113e-02, 4.195e-04, 3.416e-01, -7.487e-02) * s1_2_1;
	r1 += M4(-3.025e-03, -9.261e-02, -2.044e-02, 2.091e-01, 2.741e-02, 7.162e-03, 3.553e-02, -8.219e-03, -7.091e-02, 2.934e-02, -1.696e-02, 9.242e-02, 3.160e-02, -1.587e-01, -2.265e-02, -1.215e-01) * s1_2_1;
	r2 += M4(1.998e-01, 1.763e-01, 3.557e-02, 3.457e-02, -1.010e-01, -1.277e-01, 2.705e-02, -9.367e-02, 2.911e-02, -2.093e-01, -9.314e-03, -7.191e-02, -4.955e-02, 4.409e-02, 6.249e-02, 1.714e-02) * s1_2_1;
	r3 += M4(2.877e-02, -6.629e-02, 1.022e-02, -1.304e-01, 1.339e-02, 2.484e-02, 3.070e-02, 2.376e-02, -1.126e-02, -9.253e-02, 1.786e-02, -2.041e-02, 2.276e-02, 1.155e-02, 9.545e-03, -5.536e-02) * s1_2_1;
	r0 += M4(6.140e-02, 5.159e-02, 4.387e-03, 3.856e-02, -1.673e-02, -9.956e-03, -5.393e-02, -3.276e-02, -1.026e-02, -6.889e-02, 6.957e-02, -1.548e-03, 5.767e-02, 4.529e-02, 1.319e-03, -2.946e-02) * s1_2_2;
	r1 += M4(9.620e-03, 5.594e-02, 4.119e-02, -1.287e-01, -1.748e-02, 3.788e-03, -5.873e-02, 1.884e-02, 1.661e-02, -7.801e-02, -7.938e-02, -1.237e-01, 2.865e-02, -1.183e-02, -1.020e-02, 1.651e-02) * s1_2_2;
	r2 += M4(4.235e-02, -2.073e-02, 7.073e-02, 4.338e-02, 1.475e-02, -2.004e-02, -6.340e-02, 6.702e-02, -6.134e-02, 8.421e-02, 9.931e-02, 2.952e-02, -1.768e-02, 3.996e-02, 8.862e-02, -3.482e-02) * s1_2_2;
	r3 += M4(2.944e-02, 2.678e-03, 9.278e-02, -1.123e-02, -2.368e-03, 1.002e-02, -2.069e-02, -4.451e-03, -2.460e-02, 5.309e-02, -1.775e-02, -2.978e-02, 1.321e-02, -4.484e-02, 1.394e-02, 4.797e-02) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(1.007e-01, 3.234e-02, -2.623e-02, -1.674e-02, -1.111e-01, -1.183e-02, 3.833e-03, -2.417e-02, 1.341e-02, 1.922e-02, 3.748e-02, 4.867e-03, 6.084e-02, -1.182e-03, -2.280e-02, 1.076e-02) * s0_0_0;
	r1 += M4(2.817e-02, -6.949e-02, -1.859e-03, -2.025e-03, -1.668e-02, 6.780e-02, -1.243e-01, -1.444e-02, 1.519e-02, -3.181e-02, -1.640e-02, 8.349e-02, -2.408e-02, -2.259e-02, 2.564e-02, 1.802e-02) * s0_0_0;
	r2 += M4(-5.606e-04, -8.188e-02, 2.394e-01, 1.755e-01, -2.689e-02, 5.071e-02, -1.795e-01, -7.586e-02, 1.253e-02, -6.848e-02, 7.007e-02, -3.624e-02, 1.039e-03, -1.104e-01, -8.823e-02, -1.706e-02) * s0_0_0;
	r3 += M4(1.124e-02, 1.225e-02, -1.585e-03, 1.960e-03, -5.079e-03, 1.941e-02, -2.258e-02, -1.400e-02, 9.309e-03, -7.595e-03, -1.122e-02, -3.533e-02, 3.680e-02, -2.934e-02, 2.274e-02, 1.291e-02) * s0_0_0;
	r0 += M4(-3.869e-02, -1.867e-02, -3.905e-02, -7.521e-02, -6.014e-02, -2.731e-02, 3.352e-02, 3.934e-02, 1.393e-02, 4.780e-02, 4.091e-02, -1.350e-03, 1.298e-01, 3.310e-02, -1.908e-03, -3.527e-02) * s0_0_1;
	r1 += M4(9.774e-02, 1.435e-01, -4.854e-01, 1.353e-02, -1.206e-01, 1.813e-01, -3.212e-01, 1.769e-02, -2.106e-01, 9.639e-02, -1.002e-01, 1.638e-02, -1.340e-02, -2.024e-01, -8.092e-02, 3.437e-02) * s0_0_1;
	r2 += M4(-2.603e-02, 2.729e-02, 3.798e-04, -5.440e-01, 1.890e-04, -9.594e-02, 1.847e-02, 3.256e-02, 1.969e-02, 9.636e-02, 7.712e-02, -4.028e-01, -2.286e-02, 8.084e-02, 8.385e-02, -2.227e-01) * s0_0_1;
	r3 += M4(1.276e-01, 8.462e-02, 1.116e-01, 1.906e-02, -9.208e-02, 1.460e-01, -7.648e-02, -3.237e-02, -4.359e-02, 1.641e-01, -2.414e-02, 6.693e-02, 2.839e-02, -5.650e-02, 1.262e-02, -1.449e-02) * s0_0_1;
	r0 += M4(3.943e-02, -2.086e-02, -1.896e-02, 2.154e-02, 5.194e-02, -1.864e-02, -7.714e-03, 5.720e-03, 1.523e-02, -9.213e-03, 8.566e-03, -2.685e-02, -1.128e-02, 2.667e-03, 2.664e-02, 5.562e-04) * s0_0_2;
	r1 += M4(-1.468e-01, -5.755e-02, 2.315e-01, -5.609e-02, 1.073e-02, -4.893e-02, 1.191e-01, -2.479e-02, 2.085e-01, 5.391e-02, 1.359e-01, -2.179e-02, -3.167e-01, 1.115e-01, -7.228e-02, 1.046e-01) * s0_0_2;
	r2 += M4(-3.531e-02, -1.228e-01, -5.890e-02, 1.038e-01, 2.694e-03, 2.378e-02, 4.026e-02, -1.323e-01, 4.772e-03, 3.845e-02, -3.881e-02, -1.160e-02, -1.173e-02, -6.209e-02, -4.437e-02, 1.216e-01) * s0_0_2;
	r3 += M4(6.637e-02, 5.061e-03, -1.557e-02, 3.206e-02, -1.068e-02, 1.044e-03, 8.414e-03, -7.716e-03, -1.367e-02, -2.366e-02, -5.245e-03, 1.321e-02, 9.110e-03, -3.634e-03, 4.262e-02, -9.749e-03) * s0_0_2;
	r0 += M4(-2.744e-01, -1.080e-02, 1.179e-01, -4.601e-02, -4.383e-02, 2.583e-02, -1.780e-02, -6.275e-02, 1.618e-02, -3.056e-02, -3.296e-02, -2.057e-02, 7.348e-02, -3.704e-02, 1.603e-02, 2.952e-02) * s0_1_0;
	r1 += M4(4.657e-02, 7.542e-02, 2.881e-02, 1.506e-01, -1.261e-02, -8.472e-02, -4.547e-02, -1.386e-01, -1.857e-02, -2.593e-02, -1.786e-03, -5.237e-02, 2.847e-02, -1.092e-01, 2.308e-03, -7.586e-03) * s0_1_0;
	r2 += M4(-2.370e-02, 1.830e-01, -3.008e-01, -1.679e-02, -6.518e-02, -1.865e-02, -6.006e-01, -1.619e-03, -5.881e-02, -3.682e-01, -3.799e-01, 2.209e-01, 3.967e-02, -2.489e-02, -5.753e-02, -9.662e-02) * s0_1_0;
	r3 += M4(4.583e-02, -2.246e-02, 3.291e-02, -1.091e-02, 3.508e-03, -1.389e-02, 7.386e-03, 3.288e-02, -3.768e-02, 4.456e-02, -4.357e-02, 6.342e-02, -5.582e-02, 2.231e-03, -3.215e-02, -1.320e-02) * s0_1_0;
	r0 += M4(2.102e-01, 1.711e-01, 2.541e-01, -7.266e-02, 7.854e-02, 2.140e-01, -5.625e-02, -1.782e-01, 9.470e-03, 2.550e-02, -1.244e-01, 8.172e-03, -5.108e-01, -6.997e-02, 1.201e-01, 2.959e-01) * s0_1_1;
	r1 += M4(-1.124e-01, -7.915e-01, -1.022e-01, 3.431e-02, -3.222e-02, -6.537e-01, 1.086e-01, 2.193e-01, 1.960e-01, -9.630e-02, 1.356e-03, -1.052e-01, 8.329e-02, 4.420e-01, 1.286e-01, -3.751e-01) * s0_1_1;
	r2 += M4(2.971e-01, -3.316e-01, 7.537e-02, -3.247e-01, -4.135e-02, -1.256e-01, -2.529e-01, -1.967e-01, -2.368e-02, 3.076e-01, 1.486e-01, -4.015e-01, 7.784e-02, -1.135e-01, 1.208e-01, 1.373e-03) * s0_1_1;
	r3 += M4(-6.711e-02, -3.651e-01, -3.382e-03, -1.323e-01, 8.702e-02, -5.810e-01, 1.749e-02, -1.183e-01, -2.472e-02, -2.996e-01, -3.354e-03, -9.610e-02, -5.273e-02, 2.056e-01, -7.790e-02, 8.617e-02) * s0_1_1;
	r0 += M4(1.662e-01, 4.684e-02, 3.239e-02, -6.011e-02, -1.165e-01, -3.520e-02, 1.313e-01, -6.353e-02, 2.823e-03, 3.995e-03, 2.441e-02, -9.068e-03, 7.011e-02, -3.619e-02, -1.303e-01, 3.857e-02) * s0_1_2;
	r1 += M4(-1.254e-01, 9.155e-02, -9.051e-02, -9.271e-02, -1.724e-02, -1.162e-01, -1.651e-01, -2.077e-01, -3.611e-01, -1.238e-01, -2.173e-01, 9.008e-03, 1.862e-01, -1.627e-01, 6.235e-02, -2.729e-02) * s0_1_2;
	r2 += M4(1.118e-01, -4.543e-02, -1.066e-01, 4.982e-02, -4.890e-02, -2.131e-02, -4.374e-02, -2.139e-02, -2.002e-02, -1.680e-01, 9.135e-03, 1.589e-01, 2.975e-02, -1.887e-02, 2.489e-02, -2.562e-01) * s0_1_2;
	r3 += M4(1.361e-01, 7.520e-02, -4.272e-02, 2.033e-01, -1.081e-01, 2.650e-02, -9.397e-02, -7.155e-02, 1.535e-02, 1.864e-02, 3.675e-02, -2.605e-02, -5.009e-02, 8.477e-03, 2.543e-02, -1.417e-02) * s0_1_2;
	r0 += M4(-7.523e-03, -3.628e-02, -2.965e-02, -2.371e-02, -7.694e-03, -2.155e-02, 5.262e-03, -5.823e-02, -3.937e-02, -2.290e-02, -3.395e-02, -3.125e-02, -4.668e-02, -2.505e-02, 3.511e-02, 3.870e-02) * s0_2_0;
	r1 += M4(-3.259e-02, 1.599e-02, 1.616e-02, -8.273e-02, -1.653e-02, 4.118e-03, -8.673e-04, -1.132e-02, -3.155e-02, -1.393e-02, 1.807e-02, 1.464e-02, 8.743e-04, -1.206e-02, -1.990e-02, 1.093e-01) * s0_2_0;
	r2 += M4(-1.626e-02, -3.269e-02, 5.921e-02, 4.238e-02, -3.613e-02, 2.045e-02, -8.263e-02, 1.971e-03, 1.125e-02, -9.407e-02, -1.845e-01, 1.225e-01, 2.676e-02, 1.096e-01, 6.665e-02, -2.522e-01) * s0_2_0;
	r3 += M4(1.982e-02, -6.817e-02, 7.206e-03, -1.678e-02, 1.240e-02, -3.235e-02, -7.080e-03, 7.279e-03, -2.142e-02, -6.024e-02, -6.015e-03, 1.110e-02, 5.580e-03, 1.841e-02, 1.544e-02, -1.640e-02) * s0_2_0;
	r0 += M4(-1.439e-01, -3.211e-01, -1.999e-01, -6.977e-02, -7.833e-02, -1.639e-01, -9.399e-02, 1.281e-02, -7.490e-02, -4.059e-02, -1.023e-01, 6.722e-03, 2.112e-01, 2.587e-01, 1.309e-01, 3.735e-02) * s0_2_1;
	r1 += M4(2.486e-02, -1.742e-02, 3.721e-02, -1.532e-01, -4.128e-02, 4.762e-02, -1.132e-02, -2.026e-01, -4.725e-02, -9.052e-03, -1.989e-02, -2.005e-01, 2.330e-03, -1.305e-03, 1.074e-02, 1.785e-01) * s0_2_1;
	r2 += M4(-1.764e-01, 2.483e-02, 1.748e-02, -1.076e-01, -9.397e-02, -9.741e-02, -1.437e-02, 2.769e-02, -7.451e-04, 3.710e-01, 1.977e-01, -3.419e-01, 6.915e-02, -1.222e-01, 3.381e-02, 3.056e-01) * s0_2_1;
	r3 += M4(-6.665e-02, 4.499e-03, -5.196e-02, -4.810e-02, -1.618e-02, 6.760e-02, -1.711e-03, 6.990e-04, 2.508e-02, 1.125e-01, -2.502e-02, -2.930e-02, 4.956e-02, -5.965e-02, 4.074e-02, 4.451e-02) * s0_2_1;
	r0 += M4(1.855e-04, -3.553e-02, -1.058e-01, -5.202e-02, -6.241e-02, -3.401e-02, -1.234e-01, -3.307e-02, -2.792e-02, -5.797e-02, -1.320e-01, -4.628e-02, 3.604e-02, -3.763e-02, 1.273e-01, -4.598e-03) * s0_2_2;
	r1 += M4(4.325e-02, -3.713e-02, -3.346e-02, -1.756e-02, -1.140e-03, 1.319e-02, 1.205e-03, 9.200e-02, 1.317e-01, 2.407e-02, 7.884e-02, -9.084e-02, -3.672e-02, -2.747e-02, -4.712e-02, -2.565e-02) * s0_2_2;
	r2 += M4(9.064e-02, 2.160e-02, 2.581e-03, 5.062e-03, -2.611e-02, 4.770e-02, -3.376e-03, -2.582e-02, -8.825e-03, -3.114e-01, -1.273e-01, 4.803e-02, -5.252e-02, -4.758e-03, -3.696e-02, -4.548e-02) * s0_2_2;
	r3 += M4(8.198e-03, -1.237e-02, 6.205e-03, 7.210e-03, -4.146e-03, 8.054e-04, -2.589e-02, -5.214e-03, -8.449e-02, 2.867e-03, -5.163e-02, 8.429e-04, 3.971e-04, -3.767e-02, 8.067e-03, -1.523e-02) * s0_2_2;
	r0 += M4(7.216e-02, 2.958e-02, -3.973e-04, -3.832e-02, -6.663e-02, -3.559e-02, -3.323e-02, 5.173e-02, -5.155e-03, -1.832e-02, 8.585e-03, -2.168e-03, -1.044e-02, 1.711e-02, 2.604e-02, -7.553e-02) * s1_0_0;
	r1 += M4(-5.800e-02, -1.096e-01, 8.570e-03, -2.276e-02, 6.665e-02, 1.401e-01, 1.082e-01, -5.101e-02, 5.762e-02, 9.284e-02, 3.113e-02, -4.717e-03, 6.169e-02, -2.360e-01, -2.782e-01, 1.446e-01) * s1_0_0;
	r2 += M4(-6.185e-03, 1.354e-02, -1.196e-01, -1.668e-02, 5.612e-03, 1.551e-01, 9.991e-02, -2.065e-01, 4.632e-02, -4.446e-02, 3.101e-01, 2.794e-01, -1.823e-02, -3.191e-02, -1.779e-01, 1.764e-01) * s1_0_0;
	r3 += M4(2.204e-02, -8.903e-02, 2.082e-02, -1.053e-02, 6.492e-03, 9.719e-02, 1.585e-04, -6.198e-04, -4.190e-02, 9.904e-02, -1.375e-02, 4.943e-02, -1.056e-02, -6.616e-02, -3.865e-02, -3.999e-02) * s1_0_0;
	r0 += M4(3.734e-04, 2.900e-02, 7.248e-02, -2.327e-02, -1.480e-01, -4.832e-02, -2.415e-02, 1.013e-01, -4.089e-02, -7.771e-02, -1.727e-02, 3.456e-02, 1.238e-01, 4.236e-02, -2.582e-02, 7.112e-02) * s1_0_1;
	r1 += M4(-2.065e-01, -1.532e-01, -3.688e-01, 1.672e-01, 1.279e-01, 1.648e-01, 4.287e-01, -1.403e-01, 2.184e-01, 1.058e-01, 3.641e-01, 9.365e-02, 1.726e-01, 3.283e-02, -6.152e-02, -1.867e-01) * s1_0_1;
	r2 += M4(8.521e-02, 1.727e-01, 2.475e-02, 3.552e-02, 4.377e-02, -1.396e-01, -4.599e-02, 1.521e-01, -7.359e-03, 8.410e-02, -2.590e-02, 2.610e-01, 3.350e-02, 8.269e-02, 2.512e-02, -1.943e-01) * s1_0_1;
	r3 += M4(3.438e-02, -1.105e-01, 9.392e-03, -3.409e-02, -4.260e-02, 7.156e-02, -2.985e-02, 5.357e-02, -9.132e-02, -3.290e-03, -1.011e-01, -5.266e-02, -6.910e-03, 2.189e-02, 3.393e-02, -3.893e-02) * s1_0_1;
	r0 += M4(-4.096e-03, -7.303e-03, 7.904e-04, -3.721e-02, 3.064e-02, -3.046e-02, -2.898e-02, -2.845e-02, -5.685e-03, -9.142e-03, -1.745e-02, -3.699e-02, 3.678e-02, 5.818e-03, 2.563e-02, 3.652e-02) * s1_0_2;
	r1 += M4(-1.498e-01, -1.621e-02, -7.925e-02, 7.818e-02, 1.840e-01, -1.003e-01, 7.132e-03, -5.628e-02, 2.384e-01, -8.811e-02, -2.929e-02, -9.210e-02, -2.744e-01, 1.471e-01, 7.343e-02, 8.328e-02) * s1_0_2;
	r2 += M4(5.067e-02, -5.509e-02, -2.642e-02, 2.000e-01, 4.456e-02, 6.223e-02, 6.962e-03, -2.457e-01, -3.352e-02, 1.222e-02, 9.199e-03, -1.166e-01, 2.060e-02, -1.205e-01, -2.510e-02, 1.057e-01) * s1_0_2;
	r3 += M4(8.584e-02, -9.813e-02, 1.138e-01, 4.970e-02, -7.542e-02, 2.278e-02, -6.323e-02, -2.886e-02, -5.777e-02, 4.761e-03, -8.284e-02, -2.557e-02, -3.538e-02, 9.947e-02, -9.150e-02, 4.173e-03) * s1_0_2;
	r0 += M4(-2.861e-01, -4.687e-02, -2.891e-02, 1.237e-01, 8.041e-02, 4.081e-02, 8.129e-04, 4.729e-02, 1.654e-01, -1.554e-02, -4.927e-02, -8.143e-02, 3.138e-01, -3.552e-02, 1.396e-02, -1.184e-01) * s1_1_0;
	r1 += M4(6.207e-02, 1.199e-02, -4.745e-02, 1.038e-02, -3.585e-02, 8.409e-02, -2.093e-02, 9.142e-03, -3.679e-02, -7.043e-02, -5.504e-04, 9.229e-02, -9.825e-02, 2.436e-02, 1.596e-01, -2.396e-01) * s1_1_0;
	r2 += M4(-1.583e-02, 9.394e-01, 4.232e-01, -3.276e-01, 6.193e-02, 3.215e-01, 9.399e-02, -3.734e-01, 7.845e-02, -3.600e-01, 2.399e-01, 1.812e-01, -2.585e-04, -1.513e-01, -1.816e-01, 2.865e-01) * s1_1_0;
	r3 += M4(6.305e-02, -1.094e-01, 8.183e-03, -8.523e-02, 5.640e-02, -8.568e-02, 3.360e-02, -6.915e-02, -1.041e-03, -5.345e-02, -3.046e-02, 6.039e-03, -6.471e-02, 3.545e-01, 2.947e-02, 8.969e-03) * s1_1_0;
	r0 += M4(-5.080e-01, -1.494e-01, -1.528e-01, 6.077e-02, 3.805e-01, 9.267e-02, 7.587e-02, -2.526e-02, 5.415e-01, 1.411e-01, -7.623e-02, -3.103e-01, -3.586e-01, -9.144e-04, 1.823e-01, 5.643e-01) * s1_1_1;
	r1 += M4(-5.886e-02, -3.059e-01, 9.699e-02, -8.188e-01, -3.528e-01, -4.826e-02, 1.153e-01, 1.982e-01, -9.789e-04, -6.328e-02, -1.889e-01, 1.922e-01, -2.082e-02, 4.206e-01, 2.298e-01, 5.879e-01) * s1_1_1;
	r2 += M4(-3.961e-02, 4.754e-01, 1.000e+00, -2.474e-03, 1.213e-01, -3.871e-01, -3.545e-01, 4.569e-01, -1.635e-01, 3.280e-02, -2.843e-01, 5.035e-01, -1.883e-01, -1.531e-01, -2.438e-01, -4.020e-01) * s1_1_1;
	r3 += M4(2.255e-01, -1.179e-01, 1.459e-01, 3.249e-01, 3.897e-03, -1.145e-02, -3.819e-03, 5.217e-03, 1.360e-01, 2.307e-01, -4.501e-02, 2.102e-01, 5.969e-01, -1.155e-01, 1.050e-01, 1.511e-01) * s1_1_1;
	r0 += M4(-6.361e-02, -8.983e-02, -9.717e-02, -1.868e-01, -5.914e-02, 1.813e-02, 9.139e-02, 4.591e-02, -1.035e-01, 3.096e-02, 1.724e-01, 1.300e-01, 1.956e-01, 7.373e-02, -1.274e-01, 5.959e-03) * s1_1_2;
	r1 += M4(-6.965e-02, -2.398e-01, 8.276e-02, -2.467e-01, -2.411e-01, 5.268e-02, -2.192e-02, 1.263e-01, 1.813e-02, 3.473e-01, 1.193e-01, 4.034e-01, 8.704e-02, -1.539e-01, -1.528e-01, -1.698e-01) * s1_1_2;
	r2 += M4(9.216e-03, -2.110e-02, -1.665e-01, 3.923e-01, 1.087e-02, 7.393e-02, 2.772e-02, -1.051e-01, -4.532e-02, 1.789e-01, 1.362e-01, -3.627e-01, 3.912e-02, -4.308e-02, 7.883e-02, -1.677e-01) * s1_1_2;
	r3 += M4(-1.640e-01, -1.710e-01, 4.530e-01, -5.573e-02, 3.554e-02, -6.983e-03, 8.716e-03, 1.643e-02, 1.277e-01, -4.618e-02, 1.850e-01, 1.592e-02, 5.723e-02, 1.047e-01, -2.108e-01, 8.529e-02) * s1_1_2;
	r0 += M4(1.118e-02, 1.033e-01, -2.083e-03, 8.330e-02, 1.708e-01, 7.650e-02, -5.858e-02, 2.668e-03, 1.298e-02, -8.410e-02, 5.869e-02, -9.476e-02, -1.463e-01, -4.890e-02, -1.658e-01, 4.005e-02) * s1_2_0;
	r1 += M4(-4.089e-02, 2.505e-02, 1.626e-02, -2.290e-01, 1.400e-02, -4.257e-03, -2.399e-02, -1.309e-01, 4.505e-02, -6.015e-02, 1.141e-02, 6.781e-02, 2.658e-02, 4.635e-02, -4.034e-02, 1.135e-01) * s1_2_0;
	r2 += M4(-9.722e-02, 5.666e-02, 2.280e-01, -1.126e-01, 1.515e-02, -6.241e-03, 3.712e-02, -1.169e-01, -1.384e-02, -8.641e-02, 2.467e-02, 1.165e-01, -5.901e-02, -1.756e-02, 1.009e-01, 2.349e-01) * s1_2_0;
	r3 += M4(-2.038e-02, 5.019e-02, 8.654e-03, 1.503e-02, 3.235e-02, 2.764e-02, 2.314e-02, -1.331e-02, -3.678e-02, -1.596e-02, -2.091e-02, -7.496e-03, 8.070e-03, -1.166e-01, 2.226e-03, 1.308e-04) * s1_2_0;
	r0 += M4(2.843e-01, -1.393e-01, -3.355e-02, -2.134e-01, -8.670e-02, 6.057e-02, -3.167e-01, 2.232e-01, -1.152e-01, -1.380e-01, 2.674e-01, -6.312e-02, 6.829e-02, 8.628e-02, -2.007e-01, 8.125e-02) * s1_2_1;
	r1 += M4(7.635e-02, -1.575e-01, -2.371e-02, 3.012e-01, -5.041e-02, 1.853e-01, -1.721e-02, -4.483e-01, -2.568e-02, 1.434e-01, -3.738e-02, 8.115e-02, -7.942e-02, -1.288e-01, -2.820e-02, -3.838e-01) * s1_2_1;
	r2 += M4(-8.620e-02, 1.241e-01, 1.768e-01, -1.298e-02, 1.919e-01, -1.352e-01, -7.335e-02, -2.417e-02, 4.184e-01, 1.230e-01, -1.947e-01, -1.057e-01, -1.323e-01, -2.983e-02, 2.104e-01, 2.185e-02) * s1_2_1;
	r3 += M4(1.567e-01, -1.982e-01, 1.303e-01, 8.178e-02, -5.437e-02, 2.056e-01, 1.254e-02, 1.412e-02, 9.465e-03, -3.596e-02, -3.186e-02, 1.429e-02, -2.756e-02, 1.116e-01, -4.768e-02, -3.188e-02) * s1_2_1;
	r0 += M4(-3.357e-02, -9.568e-02, -5.876e-02, 6.083e-02, 5.329e-02, 1.654e-02, -6.217e-02, 3.976e-02, 1.353e-02, -5.728e-02, -1.265e-01, -6.014e-02, 2.002e-02, 8.484e-03, 1.405e-01, -3.072e-02) * s1_2_2;
	r1 += M4(-6.628e-02, 2.977e-02, -5.847e-02, 7.865e-04, 4.985e-02, 1.031e-01, 6.323e-02, -9.749e-02, 1.138e-02, -1.223e-01, 4.615e-03, -1.372e-01, -2.373e-02, 8.276e-02, 9.123e-02, 9.493e-02) * s1_2_2;
	r2 += M4(5.022e-02, 7.809e-02, -1.766e-01, 3.336e-02, 2.235e-02, 7.366e-02, 1.027e-01, -5.184e-02, -5.836e-02, 2.879e-03, 1.027e-01, 1.488e-02, 3.743e-02, -7.198e-02, 5.382e-02, -3.820e-02) * s1_2_2;
	r3 += M4(6.647e-02, 7.739e-02, 1.257e-01, 6.561e-02, 3.877e-02, 8.636e-02, -3.065e-04, 4.639e-02, -7.979e-02, -4.733e-02, -5.462e-02, -1.230e-01, -3.196e-02, -3.056e-02, -4.357e-02, -1.117e-03) * s1_2_2;
	r0 += V4(-1.569e-02, -6.989e-03, -1.518e-02, 2.297e-04);
	r0 = max(r0, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0));
	r1 += V4(-2.118e-02, -1.691e-02, -7.517e-03, -2.821e-02);
	r1 = max(r1, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r1));
	r2 += V4(-7.464e-03, -1.691e-02, -7.290e-03, -2.435e-02);
	r2 = max(r2, V4(0.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r2));
	r3 += V4(8.456e-04, -1.364e-02, 9.600e-04, 2.741e-03);
	r3 = max(r3, V4(0.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r3));
}

//!DESC [CuNNy_4x16] -out-shuffle
//!HOOK LUMA
//!COMPUTE 16 16 8 8
//!BIND conv4
//!BIND LUMA
//!WIDTH LUMA.w 2 *
//!HEIGHT LUMA.h 2 *
//!COMPONENTS 1
//!WHEN OUTPUT.w LUMA.w / 1.2 > OUTPUT.h LUMA.h / 1.2 > *
#extension GL_EXT_shader_explicit_arithmetic_types_float16 : enable
#ifdef GL_EXT_shader_explicit_arithmetic_types_float16
#	define V4 f16vec4
#	define M4 f16mat4
#	define F float16_t
#else
#	define V4 vec4
#	define M4 mat4
#	define F float
#endif
shared V4 G[4][10][10];
void hook() {
	ivec2 xy = ivec2(gl_LocalInvocationID.xy);
	ivec2 pos = ivec2(gl_WorkGroupID.xy) * ivec2(8, 8) + xy;
	ivec2 opos = pos * ivec2(2, 2);
	ivec2 sz = ivec2(LUMA_size) - ivec2(1);
	for (int y = 0; y < 10; y += 8) {
		int ay = xy.y + y;
		if (ay >= 10) break;
		for (int x = 0; x < 10; x += 8) {
			int ax = xy.x + x;
			if (ax >= 10) break;
			vec2 p;
			p = vec2(clamp(pos + ivec2(x - 1, y - 1), ivec2(0), sz) * ivec2(2, 2) + ivec2(1, 1)) * conv4_pt;
			V4 sr0 = V4(conv4_gather(p, 0));
			V4 sg0 = V4(conv4_gather(p, 1));
			V4 sb0 = V4(conv4_gather(p, 2));
			V4 sa0 = V4(conv4_gather(p, 3));
			G[0][ay][ax] = V4(sr0.w, sg0.w, sb0.w, sa0.w);
			G[1][ay][ax] = V4(sr0.z, sg0.z, sb0.z, sa0.z);
			G[2][ay][ax] = V4(sr0.x, sg0.x, sb0.x, sa0.x);
			G[3][ay][ax] = V4(sr0.y, sg0.y, sb0.y, sa0.y);
		}
	}
	barrier();
	V4 s0_0_0, s0_0_1, s0_0_2, s0_1_0, s0_1_1, s0_1_2, s0_2_0, s0_2_1, s0_2_2, s1_0_0, s1_0_1, s1_0_2, s1_1_0, s1_1_1, s1_1_2, s1_2_0, s1_2_1, s1_2_2;
	V4 r0;
	r0 = V4(0.0);
	s0_0_0 = G[0][xy.y+0][xy.x+0]; s0_0_1 = G[0][xy.y+0][xy.x+1];
	s0_0_2 = G[0][xy.y+0][xy.x+2]; s0_1_0 = G[0][xy.y+1][xy.x+0];
	s0_1_1 = G[0][xy.y+1][xy.x+1]; s0_1_2 = G[0][xy.y+1][xy.x+2];
	s0_2_0 = G[0][xy.y+2][xy.x+0]; s0_2_1 = G[0][xy.y+2][xy.x+1];
	s0_2_2 = G[0][xy.y+2][xy.x+2]; s1_0_0 = G[1][xy.y+0][xy.x+0];
	s1_0_1 = G[1][xy.y+0][xy.x+1]; s1_0_2 = G[1][xy.y+0][xy.x+2];
	s1_1_0 = G[1][xy.y+1][xy.x+0]; s1_1_1 = G[1][xy.y+1][xy.x+1];
	s1_1_2 = G[1][xy.y+1][xy.x+2]; s1_2_0 = G[1][xy.y+2][xy.x+0];
	s1_2_1 = G[1][xy.y+2][xy.x+1]; s1_2_2 = G[1][xy.y+2][xy.x+2];
	r0 += M4(6.708e-03, 3.521e-03, 1.546e-02, 2.814e-03, 4.114e-02, 9.071e-03, -1.121e-02, 4.345e-03, -1.114e-01, 2.043e-02, 5.440e-02, 1.704e-02, -1.305e-02, 3.542e-03, -4.491e-03, 8.717e-04) * s0_0_0;
	r0 += M4(-1.424e-02, -7.037e-02, 3.224e-02, 1.221e-02, 1.792e-01, 1.839e-01, 2.272e-02, 8.741e-03, 6.521e-03, -4.052e-01, 3.307e-02, 1.008e-01, 1.003e-01, 4.942e-02, 4.767e-04, 3.531e-03) * s0_0_1;
	r0 += M4(5.192e-03, 4.698e-02, -2.624e-03, -1.494e-03, 1.848e-02, 3.992e-02, 1.332e-03, 9.980e-03, -8.389e-03, 2.534e-02, 1.048e-02, 2.809e-02, -1.199e-03, 3.431e-02, 3.467e-04, -3.368e-03) * s0_0_2;
	r0 += M4(1.765e-02, 5.258e-03, 3.970e-02, -7.055e-03, 1.352e-02, -2.102e-03, -7.479e-02, 4.485e-03, 8.174e-03, 1.549e-03, -9.473e-04, -2.636e-03, -5.943e-02, 2.140e-03, -5.960e-02, -8.420e-04) * s0_1_0;
	r0 += M4(2.152e-01, 1.291e-01, -3.779e-01, 1.284e-01, 6.102e-03, 2.060e-02, -2.131e-01, -2.826e-01, -2.224e-02, 1.861e-02, 1.372e-01, 1.188e-01, -1.560e-02, -1.626e-01, 1.594e-01, -1.132e-02) * s0_1_1;
	r0 += M4(1.480e-02, 1.386e-03, -2.027e-03, -4.278e-02, 5.194e-03, 7.773e-03, -1.260e-02, -4.016e-02, -1.477e-03, -5.434e-03, 1.679e-03, 7.519e-03, -1.151e-03, 2.541e-02, 3.677e-05, 6.319e-02) * s0_1_2;
	r0 += M4(-1.150e-04, 1.610e-04, -2.489e-04, 2.414e-04, 1.091e-04, -5.375e-07, 3.946e-03, -2.562e-03, 2.240e-04, 5.743e-04, 9.071e-03, -7.232e-03, -1.669e-04, -1.370e-03, -1.240e-02, -1.314e-03) * s0_2_0;
	r0 += M4(-9.018e-03, -2.743e-03, -4.328e-03, -4.236e-02, -1.332e-03, -1.072e-03, 1.342e-02, 3.026e-02, -2.464e-04, 1.006e-03, -9.919e-03, -7.062e-03, 2.023e-03, 4.591e-03, -3.821e-02, -5.207e-02) * s0_2_1;
	r0 += M4(-5.804e-03, -2.333e-03, 7.835e-04, -2.817e-03, 4.062e-04, -4.353e-04, 5.940e-03, 4.546e-03, -1.331e-04, -5.877e-04, -4.540e-06, -2.988e-04, -1.580e-03, -1.477e-03, -4.675e-03, -4.934e-04) * s0_2_2;
	r0 += M4(2.517e-03, 8.224e-04, 2.421e-07, -3.350e-04, 3.118e-02, 8.333e-03, -4.468e-03, -8.483e-03, 1.217e-04, -4.470e-03, 9.264e-04, -1.745e-04, 4.185e-02, -6.370e-04, -2.549e-02, -3.598e-03) * s1_0_0;
	r0 += M4(-1.681e-05, 6.260e-03, -8.393e-07, 8.968e-04, -4.114e-02, 3.455e-02, -8.016e-04, -1.189e-02, -6.906e-03, -4.731e-03, -2.441e-04, -2.636e-04, -9.146e-02, 8.751e-02, -1.128e-02, -4.406e-03) * s1_0_1;
	r0 += M4(2.108e-06, 3.408e-03, -6.614e-04, -1.229e-04, -1.753e-03, -8.561e-03, -2.035e-04, 7.142e-04, 7.540e-07, -3.630e-03, 6.231e-05, 1.962e-05, -2.695e-03, -9.815e-04, 4.000e-03, -5.885e-03) * s1_0_2;
	r0 += M4(8.157e-02, 2.286e-02, 7.747e-03, -1.517e-02, -9.204e-02, -1.150e-03, 1.986e-02, 7.279e-03, -4.746e-02, -6.361e-03, 7.903e-03, 2.282e-02, -2.183e-02, 6.579e-03, 1.388e-02, -1.088e-02) * s1_1_0;
	r0 += M4(2.905e-02, -2.736e-03, 1.261e-02, -7.740e-03, 4.919e-02, -4.170e-01, 4.472e-02, 2.055e-01, 4.088e-02, 3.479e-02, -1.630e-02, 2.467e-02, 7.777e-02, 1.812e-01, 1.038e-01, -3.714e-01) * s1_1_1;
	r0 += M4(5.167e-04, -1.167e-03, 1.891e-03, 1.774e-04, -9.402e-03, 1.800e-02, -1.306e-03, -4.678e-03, -1.360e-03, -2.223e-02, 4.981e-04, 1.123e-03, 1.845e-03, -4.851e-03, -8.270e-03, 2.130e-02) * s1_1_2;
	r0 += M4(1.831e-01, -4.133e-02, -3.721e-01, 9.536e-02, -1.320e-04, 2.660e-03, 5.628e-02, 5.609e-03, 4.809e-02, -3.674e-03, 1.888e-03, -5.552e-03, -2.907e-03, -9.094e-03, 1.801e-02, 8.646e-03) * s1_2_0;
	r0 += M4(-1.861e-02, 3.066e-02, -1.914e-02, 1.998e-02, -1.711e-03, 1.983e-02, 2.498e-02, 7.957e-02, 5.381e-02, 2.163e-01, 6.328e-02, -4.161e-01, 9.306e-04, -3.258e-03, -9.079e-03, 3.528e-02) * s1_2_1;
	r0 += M4(9.447e-04, 2.174e-03, -4.049e-04, -2.084e-03, 1.728e-03, 7.085e-03, 9.218e-03, 8.838e-03, -5.413e-03, 2.899e-02, -9.774e-03, -1.436e-02, -1.060e-04, -4.676e-04, -7.052e-05, -2.433e-03) * s1_2_2;
	s0_0_0 = G[2][xy.y+0][xy.x+0]; s0_0_1 = G[2][xy.y+0][xy.x+1];
	s0_0_2 = G[2][xy.y+0][xy.x+2]; s0_1_0 = G[2][xy.y+1][xy.x+0];
	s0_1_1 = G[2][xy.y+1][xy.x+1]; s0_1_2 = G[2][xy.y+1][xy.x+2];
	s0_2_0 = G[2][xy.y+2][xy.x+0]; s0_2_1 = G[2][xy.y+2][xy.x+1];
	s0_2_2 = G[2][xy.y+2][xy.x+2]; s1_0_0 = G[3][xy.y+0][xy.x+0];
	s1_0_1 = G[3][xy.y+0][xy.x+1]; s1_0_2 = G[3][xy.y+0][xy.x+2];
	s1_1_0 = G[3][xy.y+1][xy.x+0]; s1_1_1 = G[3][xy.y+1][xy.x+1];
	s1_1_2 = G[3][xy.y+1][xy.x+2]; s1_2_0 = G[3][xy.y+2][xy.x+0];
	s1_2_1 = G[3][xy.y+2][xy.x+1]; s1_2_2 = G[3][xy.y+2][xy.x+2];
	r0 += M4(2.718e-02, -1.654e-02, 1.201e-03, -8.071e-03, -1.004e-02, 8.532e-03, -1.056e-02, 3.587e-03, -2.535e-03, 8.469e-07, -1.238e-04, 1.426e-07, -1.966e-03, 2.002e-04, -9.344e-04, -1.985e-05) * s0_0_0;
	r0 += M4(-2.070e-01, 8.847e-02, -1.101e-01, -9.741e-02, 4.773e-02, -5.408e-02, -2.670e-03, 1.603e-02, 2.050e-02, -1.593e-02, 9.181e-03, -3.239e-03, 7.764e-03, -6.601e-03, -1.153e-03, -2.994e-03) * s0_0_1;
	r0 += M4(-2.519e-02, -1.284e-01, 7.819e-03, -1.362e-02, -3.361e-03, 7.965e-04, -1.714e-04, 3.885e-03, -4.261e-02, 8.210e-03, 1.077e-02, -1.208e-03, 1.586e-02, -9.480e-03, 5.235e-03, 4.836e-04) * s0_0_2;
	r0 += M4(-1.474e-04, -1.019e-03, 3.644e-02, -2.623e-03, 2.692e-02, 1.658e-02, 2.779e-02, 2.362e-02, 3.698e-04, -1.007e-06, -1.546e-03, -5.967e-07, 2.062e-03, -1.132e-02, -2.119e-02, -3.225e-03) * s0_1_0;
	r0 += M4(1.490e-02, 1.276e-02, 1.501e-01, 2.063e-01, 3.014e-01, -2.803e-01, 2.310e-01, -2.169e-01, -3.200e-02, -6.871e-03, 1.965e-03, -1.493e-02, -2.510e-01, 2.416e-01, -6.681e-02, 8.217e-02) * s0_1_1;
	r0 += M4(2.360e-03, 1.891e-03, 2.403e-04, -3.685e-03, -6.268e-03, -3.552e-02, -8.391e-03, -2.552e-02, -2.017e-01, 2.677e-01, -1.832e-01, 1.704e-01, 1.083e-02, 4.669e-03, 1.874e-02, -1.822e-02) * s0_1_2;
	r0 += M4(7.161e-06, 2.550e-05, -1.075e-06, 5.356e-07, -3.385e-03, 3.681e-03, -4.338e-03, 6.782e-03, -5.304e-05, 2.150e-07, -1.299e-06, 5.170e-07, 1.576e-02, -9.069e-03, 3.210e-02, -1.324e-02) * s0_2_0;
	r0 += M4(-1.245e-04, -3.938e-04, 1.579e-03, 2.235e-03, -2.738e-03, 1.419e-02, 1.081e-01, -1.218e-01, 2.318e-03, -7.956e-04, -1.467e-02, -9.663e-05, -1.124e-03, -1.947e-02, -1.706e-01, 1.459e-01) * s0_2_1;
	r0 += M4(1.416e-04, -1.624e-05, -1.355e-03, 1.673e-03, -4.425e-03, 6.279e-03, -5.037e-03, -7.895e-03, 1.338e-02, -9.064e-03, -4.763e-02, 7.163e-02, 1.274e-03, 1.177e-02, 1.366e-03, 2.078e-02) * s0_2_2;
	r0 += M4(2.183e-02, -1.948e-03, 9.342e-03, 8.191e-04, -1.595e-03, -1.974e-03, -7.125e-03, 2.213e-05, -6.094e-02, -3.941e-05, -2.683e-03, -6.575e-04, 3.552e-02, 1.451e-03, 6.680e-03, -2.239e-06) * s1_0_0;
	r0 += M4(-5.868e-02, -1.218e-01, -1.015e-02, 1.077e-02, 6.554e-03, -2.572e-02, -2.235e-03, 1.809e-03, -1.092e-02, 2.811e-02, 1.093e-03, -4.237e-03, 6.852e-02, 1.067e-01, 1.042e-03, -6.700e-03) * s1_0_1;
	r0 += M4(-4.438e-03, -9.736e-03, -1.838e-03, -3.976e-03, 9.034e-03, -3.962e-03, -2.415e-03, -7.569e-04, -3.448e-06, -7.480e-04, -1.489e-04, -6.929e-05, 5.538e-03, 1.993e-03, 1.230e-03, 4.807e-03) * s1_0_2;
	r0 += M4(8.879e-02, 1.070e-02, 8.151e-02, 2.255e-03, -1.797e-04, -9.826e-03, -8.936e-03, -1.195e-03, -1.732e-01, -2.243e-02, -2.085e-01, -2.077e-02, 1.233e-01, 1.535e-02, 1.265e-01, 5.822e-03) * s1_1_0;
	r0 += M4(1.684e-01, -1.198e-01, 3.732e-02, -3.256e-01, -4.075e-01, 3.528e-02, 2.817e-01, 7.266e-02, 2.764e-02, 1.978e-01, 5.753e-03, 1.674e-01, -2.368e-01, -7.259e-02, -7.776e-02, 1.772e-01) * s1_1_1;
	r0 += M4(1.415e-03, 6.263e-02, 2.330e-03, 3.938e-02, -6.769e-03, -1.538e-02, 4.397e-03, 4.690e-02, 2.379e-05, -1.137e-03, 1.782e-04, -1.402e-04, -1.040e-03, -7.349e-02, -6.588e-04, -6.567e-02) * s1_1_2;
	r0 += M4(1.363e-03, 2.056e-03, 2.996e-02, 8.209e-03, 3.176e-03, -1.268e-03, -1.679e-02, -7.088e-04, -1.239e-03, -1.411e-03, -2.754e-02, -2.906e-03, 1.149e-03, 1.544e-03, 1.418e-02, 5.380e-03) * s1_2_0;
	r0 += M4(-1.332e-04, -4.287e-03, 6.980e-02, 2.620e-02, 1.234e-02, -1.178e-02, 2.521e-02, 3.167e-02, 2.900e-04, 8.113e-04, 7.524e-03, 5.994e-02, 3.993e-03, 6.719e-03, -8.081e-02, -9.827e-02) * s1_2_1;
	r0 += M4(5.384e-04, -3.161e-04, 8.976e-04, 2.338e-02, 7.258e-03, -2.991e-03, -6.968e-03, 1.146e-03, 3.136e-07, 1.178e-03, 3.168e-05, 2.083e-04, -9.024e-04, -9.689e-04, -1.721e-03, -2.143e-02) * s1_2_2;
	r0 += V4(-1.478e-08, -1.485e-08, -1.492e-08, -1.479e-08);
	r0 = r0;
	vec2 opt = 0.5 * LUMA_pt;
	vec2 fpos = (vec2(opos) + vec2(0.5)) * opt;
	imageStore(out_image, opos + ivec2(0, 0), vec4(r0.x + LUMA_tex(fpos + vec2(0.0, 0.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(1, 0), vec4(r0.y + LUMA_tex(fpos + vec2(1.0, 0.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(0, 1), vec4(r0.z + LUMA_tex(fpos + vec2(0.0, 1.0) * opt).r, 0.0, 0.0, 1.0));
	imageStore(out_image, opos + ivec2(1, 1), vec4(r0.w + LUMA_tex(fpos + vec2(1.0, 1.0) * opt).r, 0.0, 0.0, 1.0));
}
